// License Creative Commons Attribution-NonCommercial-ShareAlike

// opensource
// please dont use it for sell on google/apple store thanks

//#version 130 //texture


#ifdef GL_ES
precision mediump float;
#endif

uniform float time;
uniform vec3 iResolution;
float iTime;
varying vec2 v_texCoord;
uniform float tax;
uniform float angle;
uniform float radius;
uniform vec2 shippos;
uniform bool shua;
uniform float animlamp;
uniform float animlcounter;
uniform float lpower;
uniform float zoom;
uniform float bulletposx[50];
uniform float bulletposy[50];
uniform float bullettimer[50];
uniform bool bulletexpl[50];
uniform float bulletexplctrl[50];
uniform int bulletcounter;
uniform float bulletanimtimer;
uniform bool paused;
uniform bool wwh;
uniform bool en3hit;
uniform float en1posx[50];
uniform float en1posy[50];
uniform float en2posx[50];
uniform float en2posy[50];
uniform float en1timer[50];
uniform float en2timer[50];
uniform float en2extimer[50];
uniform int en1counter;
uniform int en2counter;
uniform float en1lval[50];
uniform float en1exval[50];
uniform bool en1llisex[50];
uniform bool en2llishit[50];
uniform vec2 planetpos1;
uniform vec2 planetpos2;
uniform vec2 planetpos3;
uniform vec2 planetpos4;
uniform vec2 planetpos5;
uniform vec2 planetpos6;
uniform vec2 nebulapos;
uniform vec2 en3pos;
uniform vec2 lhitpos;
uniform vec2 starpos1;
uniform vec2 starpos2;
uniform bool best;
void main ()
{
  iTime = time;
  vec4 color_1;
  color_1 = vec4(0.0, 0.0, 0.0, 1.0);
  vec2 tmpvar_2;
  tmpvar_2.x = (v_texCoord.x * iResolution.x);
  tmpvar_2.y = ((1.0 - v_texCoord.y) * iResolution.y);
  vec2 fragCoord_3;
  fragCoord_3 = tmpvar_2;
  vec4 txeb_6;
  vec4 exbff_8;
  vec4 tb_9;
  vec4 mcol_10;
  vec4 buff_11;
  vec2 uv_12;
  vec2 tmpvar_13;
  tmpvar_13 = floor(tmpvar_2);
  vec2 tmpvar_14;
  tmpvar_14 = (tmpvar_2 - tmpvar_13);
  uv_12 = ((tmpvar_14 * tmpvar_14) * (3.0 - (2.0 * tmpvar_14)));
  float tmpvar_15;
  tmpvar_15 = fract((cos(
    dot (tmpvar_13, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_16;
  tmpvar_16.x = (tmpvar_13.x + 1.0);
  tmpvar_16.y = tmpvar_13.y;
  float tmpvar_17;
  tmpvar_17 = fract((cos(
    dot (tmpvar_16, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_18;
  tmpvar_18.x = tmpvar_13.x;
  tmpvar_18.y = (tmpvar_13.y + 1.0);
  float tmpvar_19;
  tmpvar_19 = fract((cos(
    dot (tmpvar_18, vec2(21.9898, 78.233))
  ) * 43758.55));
  float tmpvar_20;
  tmpvar_20 = (pow ((
    ((tmpvar_15 + ((tmpvar_17 - tmpvar_15) * uv_12.x)) + ((tmpvar_19 - tmpvar_15) * uv_12.y))
   + 
    ((((
      (tmpvar_15 - tmpvar_17)
     - tmpvar_19) + fract(
      (cos(dot ((tmpvar_13 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
    )) * uv_12.x) * uv_12.y)
  ), 40.0) * 20.0);
  float tmpvar_21;
  float tmpvar_22;
  tmpvar_22 = (time * 0.01);
  tmpvar_21 = sin(tmpvar_22);
  vec2 uv_23;
  vec2 tmpvar_24;
  tmpvar_24 = floor(vec2(tmpvar_21));
  vec2 tmpvar_25;
  tmpvar_25 = (vec2(tmpvar_21) - tmpvar_24);
  uv_23 = ((tmpvar_25 * tmpvar_25) * (3.0 - (2.0 * tmpvar_25)));
  float tmpvar_26;
  tmpvar_26 = fract((cos(
    dot (tmpvar_24, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_27;
  tmpvar_27.x = (tmpvar_24.x + 1.0);
  tmpvar_27.y = tmpvar_24.y;
  float tmpvar_28;
  tmpvar_28 = fract((cos(
    dot (tmpvar_27, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_29;
  tmpvar_29.x = tmpvar_24.x;
  tmpvar_29.y = (tmpvar_24.y + 1.0);
  float tmpvar_30;
  tmpvar_30 = fract((cos(
    dot (tmpvar_29, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 xy_31;
  xy_31 = (tmpvar_2 * ((
    (tmpvar_26 + ((tmpvar_28 - tmpvar_26) * uv_23.x))
   + 
    ((tmpvar_30 - tmpvar_26) * uv_23.y)
  ) + (
    ((((tmpvar_26 - tmpvar_28) - tmpvar_30) + fract((
      cos(dot ((tmpvar_24 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
     * 43758.55))) * uv_23.x)
   * uv_23.y)));
  vec2 uv_32;
  vec2 tmpvar_33;
  tmpvar_33 = floor(xy_31);
  vec2 tmpvar_34;
  tmpvar_34 = (xy_31 - tmpvar_33);
  uv_32 = ((tmpvar_34 * tmpvar_34) * (3.0 - (2.0 * tmpvar_34)));
  float tmpvar_35;
  tmpvar_35 = fract((cos(
    dot (tmpvar_33, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_36;
  tmpvar_36.x = (tmpvar_33.x + 1.0);
  tmpvar_36.y = tmpvar_33.y;
  float tmpvar_37;
  tmpvar_37 = fract((cos(
    dot (tmpvar_36, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_38;
  tmpvar_38.x = tmpvar_33.x;
  tmpvar_38.y = (tmpvar_33.y + 1.0);
  float tmpvar_39;
  tmpvar_39 = fract((cos(
    dot (tmpvar_38, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_40;
  tmpvar_40.x = cos(tmpvar_22);
  tmpvar_40.y = sin(tmpvar_22);
  vec2 uv_41;
  vec2 tmpvar_42;
  tmpvar_42 = floor(tmpvar_40);
  vec2 tmpvar_43;
  tmpvar_43 = (tmpvar_40 - tmpvar_42);
  uv_41 = ((tmpvar_43 * tmpvar_43) * (3.0 - (2.0 * tmpvar_43)));
  float tmpvar_44;
  tmpvar_44 = fract((cos(
    dot (tmpvar_42, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_45;
  tmpvar_45.x = (tmpvar_42.x + 1.0);
  tmpvar_45.y = tmpvar_42.y;
  float tmpvar_46;
  tmpvar_46 = fract((cos(
    dot (tmpvar_45, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_47;
  tmpvar_47.x = tmpvar_42.x;
  tmpvar_47.y = (tmpvar_42.y + 1.0);
  float tmpvar_48;
  tmpvar_48 = fract((cos(
    dot (tmpvar_47, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 xy_49;
  xy_49 = (tmpvar_2 * ((
    (tmpvar_44 + ((tmpvar_46 - tmpvar_44) * uv_41.x))
   + 
    ((tmpvar_48 - tmpvar_44) * uv_41.y)
  ) + (
    ((((tmpvar_44 - tmpvar_46) - tmpvar_48) + fract((
      cos(dot ((tmpvar_42 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
     * 43758.55))) * uv_41.x)
   * uv_41.y)));
  vec2 uv_50;
  vec2 tmpvar_51;
  tmpvar_51 = floor(xy_49);
  vec2 tmpvar_52;
  tmpvar_52 = (xy_49 - tmpvar_51);
  uv_50 = ((tmpvar_52 * tmpvar_52) * (3.0 - (2.0 * tmpvar_52)));
  float tmpvar_53;
  tmpvar_53 = fract((cos(
    dot (tmpvar_51, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_54;
  tmpvar_54.x = (tmpvar_51.x + 1.0);
  tmpvar_54.y = tmpvar_51.y;
  float tmpvar_55;
  tmpvar_55 = fract((cos(
    dot (tmpvar_54, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_56;
  tmpvar_56.x = tmpvar_51.x;
  tmpvar_56.y = (tmpvar_51.y + 1.0);
  float tmpvar_57;
  tmpvar_57 = fract((cos(
    dot (tmpvar_56, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_58;
  float tmpvar_59;
  tmpvar_59 = (time * 0.05);
  tmpvar_58.x = sin(tmpvar_59);
  tmpvar_58.y = cos(tmpvar_59);
  vec2 uv_60;
  vec2 tmpvar_61;
  tmpvar_61 = floor(tmpvar_58);
  vec2 tmpvar_62;
  tmpvar_62 = (tmpvar_58 - tmpvar_61);
  uv_60 = ((tmpvar_62 * tmpvar_62) * (3.0 - (2.0 * tmpvar_62)));
  float tmpvar_63;
  tmpvar_63 = fract((cos(
    dot (tmpvar_61, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_64;
  tmpvar_64.x = (tmpvar_61.x + 1.0);
  tmpvar_64.y = tmpvar_61.y;
  float tmpvar_65;
  tmpvar_65 = fract((cos(
    dot (tmpvar_64, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_66;
  tmpvar_66.x = tmpvar_61.x;
  tmpvar_66.y = (tmpvar_61.y + 1.0);
  float tmpvar_67;
  tmpvar_67 = fract((cos(
    dot (tmpvar_66, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 xy_68;
  xy_68 = (tmpvar_2 * ((
    (tmpvar_63 + ((tmpvar_65 - tmpvar_63) * uv_60.x))
   + 
    ((tmpvar_67 - tmpvar_63) * uv_60.y)
  ) + (
    ((((tmpvar_63 - tmpvar_65) - tmpvar_67) + fract((
      cos(dot ((tmpvar_61 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
     * 43758.55))) * uv_60.x)
   * uv_60.y)));
  vec2 uv_69;
  vec2 tmpvar_70;
  tmpvar_70 = floor(xy_68);
  vec2 tmpvar_71;
  tmpvar_71 = (xy_68 - tmpvar_70);
  uv_69 = ((tmpvar_71 * tmpvar_71) * (3.0 - (2.0 * tmpvar_71)));
  float tmpvar_72;
  tmpvar_72 = fract((cos(
    dot (tmpvar_70, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_73;
  tmpvar_73.x = (tmpvar_70.x + 1.0);
  tmpvar_73.y = tmpvar_70.y;
  float tmpvar_74;
  tmpvar_74 = fract((cos(
    dot (tmpvar_73, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec2 tmpvar_75;
  tmpvar_75.x = tmpvar_70.x;
  tmpvar_75.y = (tmpvar_70.y + 1.0);
  float tmpvar_76;
  tmpvar_76 = fract((cos(
    dot (tmpvar_75, vec2(21.9898, 78.233))
  ) * 43758.55));
  vec3 tmpvar_77;
  tmpvar_77.x = (tmpvar_20 * ((
    (tmpvar_35 + ((tmpvar_37 - tmpvar_35) * uv_32.x))
   + 
    ((tmpvar_39 - tmpvar_35) * uv_32.y)
  ) + (
    ((((tmpvar_35 - tmpvar_37) - tmpvar_39) + fract((
      cos(dot ((tmpvar_33 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
     * 43758.55))) * uv_32.x)
   * uv_32.y)));
  tmpvar_77.y = (tmpvar_20 * ((
    (tmpvar_53 + ((tmpvar_55 - tmpvar_53) * uv_50.x))
   + 
    ((tmpvar_57 - tmpvar_53) * uv_50.y)
  ) + (
    ((((tmpvar_53 - tmpvar_55) - tmpvar_57) + fract((
      cos(dot ((tmpvar_51 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
     * 43758.55))) * uv_50.x)
   * uv_50.y)));
  tmpvar_77.z = (tmpvar_20 * ((
    (tmpvar_72 + ((tmpvar_74 - tmpvar_72) * uv_69.x))
   + 
    ((tmpvar_76 - tmpvar_72) * uv_69.y)
  ) + (
    ((((tmpvar_72 - tmpvar_74) - tmpvar_76) + fract((
      cos(dot ((tmpvar_70 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
     * 43758.55))) * uv_69.x)
   * uv_69.y)));
  vec4 tmpvar_78;
  tmpvar_78.w = 1.0;
  tmpvar_78.xyz = tmpvar_77;
  buff_11 = tmpvar_78;
  vec4 tmpvar_79;
  vec2 tmpvar_80;
  tmpvar_80 = ((tmpvar_2 - (nebulapos * zoom)) - shippos);
  vec2 x_81;
  x_81 = (tmpvar_80 - (25000.0 * zoom));
  float tmpvar_82;
  tmpvar_82 = float((sqrt(
    dot (x_81, x_81)
  ) >= (100000.0 * zoom)));
  if (((1.0 - tmpvar_82) > 0.0)) {
    vec4 cl_83;
    vec2 st_84;
    vec2 uv_85;
    vec2 tmpvar_86;
    tmpvar_86 = ((tmpvar_80 / vec2((50000.0 * zoom))) - 0.15);
    vec2 tmpvar_87;
    tmpvar_87 = (tmpvar_86 * 1.35);
    st_84 = (tmpvar_87 + vec2(((0.2 * 
      dot (tmpvar_87, tmpvar_87)
    ) - 0.5)));
    float tmpvar_88;
    tmpvar_88 = (time * 0.01);
    uv_85 = (tmpvar_86 - vec2(0.8, 0.5));
    st_84 = (st_84 + sign(dot (uv_85, uv_85)));
    uv_85 = (uv_85 + sign(dot (uv_85, uv_85)));
    uv_85 = (uv_85 - sign(dot (uv_85, uv_85)));
    vec2 tmpvar_89;
    tmpvar_89.x = (0.2 * tmpvar_88);
    tmpvar_89.y = (0.2 * tmpvar_88);
    vec2 tmpvar_90;
    tmpvar_90.x = (0.3 * tmpvar_88);
    tmpvar_90.y = (0.3 * tmpvar_88);
    vec2 tmpvar_91;
    tmpvar_91.x = (0.4 * tmpvar_88);
    tmpvar_91.y = (0.4 * tmpvar_88);
    mat2 tmpvar_92;
    tmpvar_92[0].x = cos((tmpvar_88 * 2.5));
    tmpvar_92[0].y = sin((tmpvar_88 * 2.5));
    tmpvar_92[1].x = -(sin((tmpvar_88 * 2.5)));
    tmpvar_92[1].y = cos((tmpvar_88 * 2.5));
    vec2 p_93;
    p_93 = (tmpvar_92 * ((1.5 * st_84) + tmpvar_89));
    float f_94;
    f_94 = 0.0;
    if (!(best)) {
      p_93 = (p_93 * mat2(0.9012, 0.9012, -0.9012, 1.2016));
    };
    vec2 uv_95;
    vec2 tmpvar_96;
    tmpvar_96 = floor(p_93);
    vec2 tmpvar_97;
    tmpvar_97 = (p_93 - tmpvar_96);
    uv_95 = ((tmpvar_97 * tmpvar_97) * (3.0 - (2.0 * tmpvar_97)));
    float tmpvar_98;
    tmpvar_98 = fract((cos(
      dot (tmpvar_96, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_99;
    tmpvar_99.x = (tmpvar_96.x + 1.0);
    tmpvar_99.y = tmpvar_96.y;
    float tmpvar_100;
    tmpvar_100 = fract((cos(
      dot (tmpvar_99, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_101;
    tmpvar_101.x = tmpvar_96.x;
    tmpvar_101.y = (tmpvar_96.y + 1.0);
    float tmpvar_102;
    tmpvar_102 = fract((cos(
      dot (tmpvar_101, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_94 = (0.5 * ((
      (tmpvar_98 + ((tmpvar_100 - tmpvar_98) * uv_95.x))
     + 
      ((tmpvar_102 - tmpvar_98) * uv_95.y)
    ) + (
      ((((tmpvar_98 - tmpvar_100) - tmpvar_102) + fract((
        cos(dot ((tmpvar_96 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
       * 43758.55))) * uv_95.x)
     * uv_95.y)));
    p_93 = (p_93 * mat2(1.212, 1.212, -1.212, 1.616));
    vec2 uv_103;
    vec2 tmpvar_104;
    tmpvar_104 = floor(p_93);
    vec2 tmpvar_105;
    tmpvar_105 = (p_93 - tmpvar_104);
    uv_103 = ((tmpvar_105 * tmpvar_105) * (3.0 - (2.0 * tmpvar_105)));
    float tmpvar_106;
    tmpvar_106 = fract((cos(
      dot (tmpvar_104, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_107;
    tmpvar_107.x = (tmpvar_104.x + 1.0);
    tmpvar_107.y = tmpvar_104.y;
    float tmpvar_108;
    tmpvar_108 = fract((cos(
      dot (tmpvar_107, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_109;
    tmpvar_109.x = tmpvar_104.x;
    tmpvar_109.y = (tmpvar_104.y + 1.0);
    float tmpvar_110;
    tmpvar_110 = fract((cos(
      dot (tmpvar_109, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_94 = (f_94 + (0.25 * (
      ((tmpvar_106 + ((tmpvar_108 - tmpvar_106) * uv_103.x)) + ((tmpvar_110 - tmpvar_106) * uv_103.y))
     + 
      ((((
        (tmpvar_106 - tmpvar_108)
       - tmpvar_110) + fract(
        (cos(dot ((tmpvar_104 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_103.x) * uv_103.y)
    )));
    p_93 = (p_93 * mat2(1.218, 1.218, -1.218, 1.624));
    if (best) {
      vec2 uv_111;
      vec2 tmpvar_112;
      tmpvar_112 = floor(p_93);
      vec2 tmpvar_113;
      tmpvar_113 = (p_93 - tmpvar_112);
      uv_111 = ((tmpvar_113 * tmpvar_113) * (3.0 - (2.0 * tmpvar_113)));
      float tmpvar_114;
      tmpvar_114 = fract((cos(
        dot (tmpvar_112, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_115;
      tmpvar_115.x = (tmpvar_112.x + 1.0);
      tmpvar_115.y = tmpvar_112.y;
      float tmpvar_116;
      tmpvar_116 = fract((cos(
        dot (tmpvar_115, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_117;
      tmpvar_117.x = tmpvar_112.x;
      tmpvar_117.y = (tmpvar_112.y + 1.0);
      float tmpvar_118;
      tmpvar_118 = fract((cos(
        dot (tmpvar_117, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_94 = (f_94 + (0.125 * (
        ((tmpvar_114 + ((tmpvar_116 - tmpvar_114) * uv_111.x)) + ((tmpvar_118 - tmpvar_114) * uv_111.y))
       + 
        ((((
          (tmpvar_114 - tmpvar_116)
         - tmpvar_118) + fract(
          (cos(dot ((tmpvar_112 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_111.x) * uv_111.y)
      )));
      p_93 = (p_93 * mat2(1.206, 1.206, -1.206, 1.608));
      vec2 uv_119;
      vec2 tmpvar_120;
      tmpvar_120 = floor(p_93);
      vec2 tmpvar_121;
      tmpvar_121 = (p_93 - tmpvar_120);
      uv_119 = ((tmpvar_121 * tmpvar_121) * (3.0 - (2.0 * tmpvar_121)));
      float tmpvar_122;
      tmpvar_122 = fract((cos(
        dot (tmpvar_120, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_123;
      tmpvar_123.x = (tmpvar_120.x + 1.0);
      tmpvar_123.y = tmpvar_120.y;
      float tmpvar_124;
      tmpvar_124 = fract((cos(
        dot (tmpvar_123, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_125;
      tmpvar_125.x = tmpvar_120.x;
      tmpvar_125.y = (tmpvar_120.y + 1.0);
      float tmpvar_126;
      tmpvar_126 = fract((cos(
        dot (tmpvar_125, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_94 = (f_94 + (0.0625 * (
        ((tmpvar_122 + ((tmpvar_124 - tmpvar_122) * uv_119.x)) + ((tmpvar_126 - tmpvar_122) * uv_119.y))
       + 
        ((((
          (tmpvar_122 - tmpvar_124)
         - tmpvar_126) + fract(
          (cos(dot ((tmpvar_120 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_119.x) * uv_119.y)
      )));
      p_93 = (p_93 * mat2(1.224, 1.224, -1.224, 1.632));
    };
    f_94 = (f_94 / 0.79375);
    float tmpvar_127;
    tmpvar_127 = (0.23 * f_94);
    mat2 tmpvar_128;
    tmpvar_128[0].x = cos((tmpvar_88 * 2.0));
    tmpvar_128[0].y = sin((tmpvar_88 * 2.0));
    tmpvar_128[1].x = -(sin((tmpvar_88 * 2.0)));
    tmpvar_128[1].y = cos((tmpvar_88 * 2.0));
    vec2 p_129;
    p_129 = (tmpvar_128 * ((2.0 * st_84) + tmpvar_90));
    float f_130;
    f_130 = 0.0;
    if (!(best)) {
      p_129 = (p_129 * mat2(0.9012, 0.9012, -0.9012, 1.2016));
    };
    vec2 uv_131;
    vec2 tmpvar_132;
    tmpvar_132 = floor(p_129);
    vec2 tmpvar_133;
    tmpvar_133 = (p_129 - tmpvar_132);
    uv_131 = ((tmpvar_133 * tmpvar_133) * (3.0 - (2.0 * tmpvar_133)));
    float tmpvar_134;
    tmpvar_134 = fract((cos(
      dot (tmpvar_132, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_135;
    tmpvar_135.x = (tmpvar_132.x + 1.0);
    tmpvar_135.y = tmpvar_132.y;
    float tmpvar_136;
    tmpvar_136 = fract((cos(
      dot (tmpvar_135, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_137;
    tmpvar_137.x = tmpvar_132.x;
    tmpvar_137.y = (tmpvar_132.y + 1.0);
    float tmpvar_138;
    tmpvar_138 = fract((cos(
      dot (tmpvar_137, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_130 = (0.5 * ((
      (tmpvar_134 + ((tmpvar_136 - tmpvar_134) * uv_131.x))
     + 
      ((tmpvar_138 - tmpvar_134) * uv_131.y)
    ) + (
      ((((tmpvar_134 - tmpvar_136) - tmpvar_138) + fract((
        cos(dot ((tmpvar_132 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
       * 43758.55))) * uv_131.x)
     * uv_131.y)));
    p_129 = (p_129 * mat2(1.212, 1.212, -1.212, 1.616));
    vec2 uv_139;
    vec2 tmpvar_140;
    tmpvar_140 = floor(p_129);
    vec2 tmpvar_141;
    tmpvar_141 = (p_129 - tmpvar_140);
    uv_139 = ((tmpvar_141 * tmpvar_141) * (3.0 - (2.0 * tmpvar_141)));
    float tmpvar_142;
    tmpvar_142 = fract((cos(
      dot (tmpvar_140, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_143;
    tmpvar_143.x = (tmpvar_140.x + 1.0);
    tmpvar_143.y = tmpvar_140.y;
    float tmpvar_144;
    tmpvar_144 = fract((cos(
      dot (tmpvar_143, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_145;
    tmpvar_145.x = tmpvar_140.x;
    tmpvar_145.y = (tmpvar_140.y + 1.0);
    float tmpvar_146;
    tmpvar_146 = fract((cos(
      dot (tmpvar_145, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_130 = (f_130 + (0.25 * (
      ((tmpvar_142 + ((tmpvar_144 - tmpvar_142) * uv_139.x)) + ((tmpvar_146 - tmpvar_142) * uv_139.y))
     + 
      ((((
        (tmpvar_142 - tmpvar_144)
       - tmpvar_146) + fract(
        (cos(dot ((tmpvar_140 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_139.x) * uv_139.y)
    )));
    p_129 = (p_129 * mat2(1.218, 1.218, -1.218, 1.624));
    if (best) {
      vec2 uv_147;
      vec2 tmpvar_148;
      tmpvar_148 = floor(p_129);
      vec2 tmpvar_149;
      tmpvar_149 = (p_129 - tmpvar_148);
      uv_147 = ((tmpvar_149 * tmpvar_149) * (3.0 - (2.0 * tmpvar_149)));
      float tmpvar_150;
      tmpvar_150 = fract((cos(
        dot (tmpvar_148, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_151;
      tmpvar_151.x = (tmpvar_148.x + 1.0);
      tmpvar_151.y = tmpvar_148.y;
      float tmpvar_152;
      tmpvar_152 = fract((cos(
        dot (tmpvar_151, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_153;
      tmpvar_153.x = tmpvar_148.x;
      tmpvar_153.y = (tmpvar_148.y + 1.0);
      float tmpvar_154;
      tmpvar_154 = fract((cos(
        dot (tmpvar_153, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_130 = (f_130 + (0.125 * (
        ((tmpvar_150 + ((tmpvar_152 - tmpvar_150) * uv_147.x)) + ((tmpvar_154 - tmpvar_150) * uv_147.y))
       + 
        ((((
          (tmpvar_150 - tmpvar_152)
         - tmpvar_154) + fract(
          (cos(dot ((tmpvar_148 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_147.x) * uv_147.y)
      )));
      p_129 = (p_129 * mat2(1.206, 1.206, -1.206, 1.608));
      vec2 uv_155;
      vec2 tmpvar_156;
      tmpvar_156 = floor(p_129);
      vec2 tmpvar_157;
      tmpvar_157 = (p_129 - tmpvar_156);
      uv_155 = ((tmpvar_157 * tmpvar_157) * (3.0 - (2.0 * tmpvar_157)));
      float tmpvar_158;
      tmpvar_158 = fract((cos(
        dot (tmpvar_156, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_159;
      tmpvar_159.x = (tmpvar_156.x + 1.0);
      tmpvar_159.y = tmpvar_156.y;
      float tmpvar_160;
      tmpvar_160 = fract((cos(
        dot (tmpvar_159, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_161;
      tmpvar_161.x = tmpvar_156.x;
      tmpvar_161.y = (tmpvar_156.y + 1.0);
      float tmpvar_162;
      tmpvar_162 = fract((cos(
        dot (tmpvar_161, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_130 = (f_130 + (0.0625 * (
        ((tmpvar_158 + ((tmpvar_160 - tmpvar_158) * uv_155.x)) + ((tmpvar_162 - tmpvar_158) * uv_155.y))
       + 
        ((((
          (tmpvar_158 - tmpvar_160)
         - tmpvar_162) + fract(
          (cos(dot ((tmpvar_156 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_155.x) * uv_155.y)
      )));
      p_129 = (p_129 * mat2(1.224, 1.224, -1.224, 1.632));
    };
    f_130 = (f_130 / 0.79375);
    float tmpvar_163;
    tmpvar_163 = (0.24 * f_130);
    mat2 tmpvar_164;
    tmpvar_164[0].x = cos((tmpvar_88 * 1.5));
    tmpvar_164[0].y = sin((tmpvar_88 * 1.5));
    tmpvar_164[1].x = -(sin((tmpvar_88 * 1.5)));
    tmpvar_164[1].y = cos((tmpvar_88 * 1.5));
    vec2 p_165;
    p_165 = (tmpvar_164 * (st_84 + tmpvar_91));
    float f_166;
    f_166 = 0.0;
    if (!(best)) {
      p_165 = (p_165 * mat2(0.9012, 0.9012, -0.9012, 1.2016));
    };
    vec2 uv_167;
    vec2 tmpvar_168;
    tmpvar_168 = floor(p_165);
    vec2 tmpvar_169;
    tmpvar_169 = (p_165 - tmpvar_168);
    uv_167 = ((tmpvar_169 * tmpvar_169) * (3.0 - (2.0 * tmpvar_169)));
    float tmpvar_170;
    tmpvar_170 = fract((cos(
      dot (tmpvar_168, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_171;
    tmpvar_171.x = (tmpvar_168.x + 1.0);
    tmpvar_171.y = tmpvar_168.y;
    float tmpvar_172;
    tmpvar_172 = fract((cos(
      dot (tmpvar_171, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_173;
    tmpvar_173.x = tmpvar_168.x;
    tmpvar_173.y = (tmpvar_168.y + 1.0);
    float tmpvar_174;
    tmpvar_174 = fract((cos(
      dot (tmpvar_173, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_166 = (0.5 * ((
      (tmpvar_170 + ((tmpvar_172 - tmpvar_170) * uv_167.x))
     + 
      ((tmpvar_174 - tmpvar_170) * uv_167.y)
    ) + (
      ((((tmpvar_170 - tmpvar_172) - tmpvar_174) + fract((
        cos(dot ((tmpvar_168 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
       * 43758.55))) * uv_167.x)
     * uv_167.y)));
    p_165 = (p_165 * mat2(1.212, 1.212, -1.212, 1.616));
    vec2 uv_175;
    vec2 tmpvar_176;
    tmpvar_176 = floor(p_165);
    vec2 tmpvar_177;
    tmpvar_177 = (p_165 - tmpvar_176);
    uv_175 = ((tmpvar_177 * tmpvar_177) * (3.0 - (2.0 * tmpvar_177)));
    float tmpvar_178;
    tmpvar_178 = fract((cos(
      dot (tmpvar_176, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_179;
    tmpvar_179.x = (tmpvar_176.x + 1.0);
    tmpvar_179.y = tmpvar_176.y;
    float tmpvar_180;
    tmpvar_180 = fract((cos(
      dot (tmpvar_179, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_181;
    tmpvar_181.x = tmpvar_176.x;
    tmpvar_181.y = (tmpvar_176.y + 1.0);
    float tmpvar_182;
    tmpvar_182 = fract((cos(
      dot (tmpvar_181, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_166 = (f_166 + (0.25 * (
      ((tmpvar_178 + ((tmpvar_180 - tmpvar_178) * uv_175.x)) + ((tmpvar_182 - tmpvar_178) * uv_175.y))
     + 
      ((((
        (tmpvar_178 - tmpvar_180)
       - tmpvar_182) + fract(
        (cos(dot ((tmpvar_176 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_175.x) * uv_175.y)
    )));
    p_165 = (p_165 * mat2(1.218, 1.218, -1.218, 1.624));
    if (best) {
      vec2 uv_183;
      vec2 tmpvar_184;
      tmpvar_184 = floor(p_165);
      vec2 tmpvar_185;
      tmpvar_185 = (p_165 - tmpvar_184);
      uv_183 = ((tmpvar_185 * tmpvar_185) * (3.0 - (2.0 * tmpvar_185)));
      float tmpvar_186;
      tmpvar_186 = fract((cos(
        dot (tmpvar_184, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_187;
      tmpvar_187.x = (tmpvar_184.x + 1.0);
      tmpvar_187.y = tmpvar_184.y;
      float tmpvar_188;
      tmpvar_188 = fract((cos(
        dot (tmpvar_187, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_189;
      tmpvar_189.x = tmpvar_184.x;
      tmpvar_189.y = (tmpvar_184.y + 1.0);
      float tmpvar_190;
      tmpvar_190 = fract((cos(
        dot (tmpvar_189, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_166 = (f_166 + (0.125 * (
        ((tmpvar_186 + ((tmpvar_188 - tmpvar_186) * uv_183.x)) + ((tmpvar_190 - tmpvar_186) * uv_183.y))
       + 
        ((((
          (tmpvar_186 - tmpvar_188)
         - tmpvar_190) + fract(
          (cos(dot ((tmpvar_184 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_183.x) * uv_183.y)
      )));
      p_165 = (p_165 * mat2(1.206, 1.206, -1.206, 1.608));
      vec2 uv_191;
      vec2 tmpvar_192;
      tmpvar_192 = floor(p_165);
      vec2 tmpvar_193;
      tmpvar_193 = (p_165 - tmpvar_192);
      uv_191 = ((tmpvar_193 * tmpvar_193) * (3.0 - (2.0 * tmpvar_193)));
      float tmpvar_194;
      tmpvar_194 = fract((cos(
        dot (tmpvar_192, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_195;
      tmpvar_195.x = (tmpvar_192.x + 1.0);
      tmpvar_195.y = tmpvar_192.y;
      float tmpvar_196;
      tmpvar_196 = fract((cos(
        dot (tmpvar_195, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_197;
      tmpvar_197.x = tmpvar_192.x;
      tmpvar_197.y = (tmpvar_192.y + 1.0);
      float tmpvar_198;
      tmpvar_198 = fract((cos(
        dot (tmpvar_197, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_166 = (f_166 + (0.0625 * (
        ((tmpvar_194 + ((tmpvar_196 - tmpvar_194) * uv_191.x)) + ((tmpvar_198 - tmpvar_194) * uv_191.y))
       + 
        ((((
          (tmpvar_194 - tmpvar_196)
         - tmpvar_198) + fract(
          (cos(dot ((tmpvar_192 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_191.x) * uv_191.y)
      )));
      p_165 = (p_165 * mat2(1.224, 1.224, -1.224, 1.632));
    };
    f_166 = (f_166 / 0.79375);
    vec4 tmpvar_199;
    tmpvar_199.w = 1.0;
    tmpvar_199.x = tmpvar_127;
    tmpvar_199.y = tmpvar_163;
    tmpvar_199.z = (0.26 * f_166);
    vec4 tmpvar_200;
    tmpvar_200 = pow (tmpvar_199, vec4(1.3, 1.3, 1.3, 1.3));
    cl_83 = (tmpvar_200 + tmpvar_200);
    vec4 tmpvar_201;
    tmpvar_201 = pow ((cl_83 + cl_83), vec4(1.5, 1.5, 1.5, 1.5));
    cl_83 = (pow ((
      (tmpvar_201 + tmpvar_201)
     + tmpvar_201), vec4(1.5, 1.5, 1.5, 1.5)) * 0.7);
    vec4 tmpvar_202;
    tmpvar_202 = ((cl_83 + cl_83) * 0.15);
    cl_83 = (tmpvar_202 + (tmpvar_202 * 2.0));
    vec2 x_203;
    x_203 = (uv_85 / 2.0);
    cl_83.xyz = (cl_83.xyz + (0.5 * pow (
      (1.0 - sqrt(dot (x_203, x_203)))
    , 2.5)));
    cl_83 = (0.9 * clamp (cl_83, vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)));
    vec4 tmpvar_204;
    tmpvar_204 = clamp (vec4(-2.333333, -2.333333, -2.333333, -2.333333), 0.0, 1.0);
    vec4 tmpvar_205;
    tmpvar_205 = clamp ((tmpvar_204 * (tmpvar_204 * 
      (3.0 - (2.0 * tmpvar_204))
    )), 0.0, 1.0);
    cl_83 = (cl_83 + (tmpvar_205 * (tmpvar_205 * 
      (3.0 - (2.0 * tmpvar_205))
    )));
    vec2 p_206;
    p_206 = (st_84 * 0.4);
    float f_207;
    f_207 = 0.0;
    if (!(best)) {
      p_206 = (p_206 * mat2(0.9012, 0.9012, -0.9012, 1.2016));
    };
    vec2 uv_208;
    vec2 tmpvar_209;
    tmpvar_209 = floor(p_206);
    vec2 tmpvar_210;
    tmpvar_210 = (p_206 - tmpvar_209);
    uv_208 = ((tmpvar_210 * tmpvar_210) * (3.0 - (2.0 * tmpvar_210)));
    float tmpvar_211;
    tmpvar_211 = fract((cos(
      dot (tmpvar_209, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_212;
    tmpvar_212.x = (tmpvar_209.x + 1.0);
    tmpvar_212.y = tmpvar_209.y;
    float tmpvar_213;
    tmpvar_213 = fract((cos(
      dot (tmpvar_212, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_214;
    tmpvar_214.x = tmpvar_209.x;
    tmpvar_214.y = (tmpvar_209.y + 1.0);
    float tmpvar_215;
    tmpvar_215 = fract((cos(
      dot (tmpvar_214, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_207 = (0.5 * ((
      (tmpvar_211 + ((tmpvar_213 - tmpvar_211) * uv_208.x))
     + 
      ((tmpvar_215 - tmpvar_211) * uv_208.y)
    ) + (
      ((((tmpvar_211 - tmpvar_213) - tmpvar_215) + fract((
        cos(dot ((tmpvar_209 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
       * 43758.55))) * uv_208.x)
     * uv_208.y)));
    p_206 = (p_206 * mat2(1.212, 1.212, -1.212, 1.616));
    vec2 uv_216;
    vec2 tmpvar_217;
    tmpvar_217 = floor(p_206);
    vec2 tmpvar_218;
    tmpvar_218 = (p_206 - tmpvar_217);
    uv_216 = ((tmpvar_218 * tmpvar_218) * (3.0 - (2.0 * tmpvar_218)));
    float tmpvar_219;
    tmpvar_219 = fract((cos(
      dot (tmpvar_217, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_220;
    tmpvar_220.x = (tmpvar_217.x + 1.0);
    tmpvar_220.y = tmpvar_217.y;
    float tmpvar_221;
    tmpvar_221 = fract((cos(
      dot (tmpvar_220, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_222;
    tmpvar_222.x = tmpvar_217.x;
    tmpvar_222.y = (tmpvar_217.y + 1.0);
    float tmpvar_223;
    tmpvar_223 = fract((cos(
      dot (tmpvar_222, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_207 = (f_207 + (0.25 * (
      ((tmpvar_219 + ((tmpvar_221 - tmpvar_219) * uv_216.x)) + ((tmpvar_223 - tmpvar_219) * uv_216.y))
     + 
      ((((
        (tmpvar_219 - tmpvar_221)
       - tmpvar_223) + fract(
        (cos(dot ((tmpvar_217 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_216.x) * uv_216.y)
    )));
    p_206 = (p_206 * mat2(1.218, 1.218, -1.218, 1.624));
    if (best) {
      vec2 uv_224;
      vec2 tmpvar_225;
      tmpvar_225 = floor(p_206);
      vec2 tmpvar_226;
      tmpvar_226 = (p_206 - tmpvar_225);
      uv_224 = ((tmpvar_226 * tmpvar_226) * (3.0 - (2.0 * tmpvar_226)));
      float tmpvar_227;
      tmpvar_227 = fract((cos(
        dot (tmpvar_225, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_228;
      tmpvar_228.x = (tmpvar_225.x + 1.0);
      tmpvar_228.y = tmpvar_225.y;
      float tmpvar_229;
      tmpvar_229 = fract((cos(
        dot (tmpvar_228, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_230;
      tmpvar_230.x = tmpvar_225.x;
      tmpvar_230.y = (tmpvar_225.y + 1.0);
      float tmpvar_231;
      tmpvar_231 = fract((cos(
        dot (tmpvar_230, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_207 = (f_207 + (0.125 * (
        ((tmpvar_227 + ((tmpvar_229 - tmpvar_227) * uv_224.x)) + ((tmpvar_231 - tmpvar_227) * uv_224.y))
       + 
        ((((
          (tmpvar_227 - tmpvar_229)
         - tmpvar_231) + fract(
          (cos(dot ((tmpvar_225 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_224.x) * uv_224.y)
      )));
      p_206 = (p_206 * mat2(1.206, 1.206, -1.206, 1.608));
      vec2 uv_232;
      vec2 tmpvar_233;
      tmpvar_233 = floor(p_206);
      vec2 tmpvar_234;
      tmpvar_234 = (p_206 - tmpvar_233);
      uv_232 = ((tmpvar_234 * tmpvar_234) * (3.0 - (2.0 * tmpvar_234)));
      float tmpvar_235;
      tmpvar_235 = fract((cos(
        dot (tmpvar_233, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_236;
      tmpvar_236.x = (tmpvar_233.x + 1.0);
      tmpvar_236.y = tmpvar_233.y;
      float tmpvar_237;
      tmpvar_237 = fract((cos(
        dot (tmpvar_236, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_238;
      tmpvar_238.x = tmpvar_233.x;
      tmpvar_238.y = (tmpvar_233.y + 1.0);
      float tmpvar_239;
      tmpvar_239 = fract((cos(
        dot (tmpvar_238, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_207 = (f_207 + (0.0625 * (
        ((tmpvar_235 + ((tmpvar_237 - tmpvar_235) * uv_232.x)) + ((tmpvar_239 - tmpvar_235) * uv_232.y))
       + 
        ((((
          (tmpvar_235 - tmpvar_237)
         - tmpvar_239) + fract(
          (cos(dot ((tmpvar_233 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_232.x) * uv_232.y)
      )));
      p_206 = (p_206 * mat2(1.224, 1.224, -1.224, 1.632));
    };
    f_207 = (f_207 / 0.79375);
    vec2 p_240;
    p_240 = ((f_207 - vec2(tmpvar_88)) * 15.0);
    float f_241;
    f_241 = 0.0;
    if (!(best)) {
      p_240 = (p_240 * mat2(0.9012, 0.9012, -0.9012, 1.2016));
    };
    vec2 uv_242;
    vec2 tmpvar_243;
    tmpvar_243 = floor(p_240);
    vec2 tmpvar_244;
    tmpvar_244 = (p_240 - tmpvar_243);
    uv_242 = ((tmpvar_244 * tmpvar_244) * (3.0 - (2.0 * tmpvar_244)));
    float tmpvar_245;
    tmpvar_245 = fract((cos(
      dot (tmpvar_243, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_246;
    tmpvar_246.x = (tmpvar_243.x + 1.0);
    tmpvar_246.y = tmpvar_243.y;
    float tmpvar_247;
    tmpvar_247 = fract((cos(
      dot (tmpvar_246, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_248;
    tmpvar_248.x = tmpvar_243.x;
    tmpvar_248.y = (tmpvar_243.y + 1.0);
    float tmpvar_249;
    tmpvar_249 = fract((cos(
      dot (tmpvar_248, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_241 = (0.5 * ((
      (tmpvar_245 + ((tmpvar_247 - tmpvar_245) * uv_242.x))
     + 
      ((tmpvar_249 - tmpvar_245) * uv_242.y)
    ) + (
      ((((tmpvar_245 - tmpvar_247) - tmpvar_249) + fract((
        cos(dot ((tmpvar_243 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
       * 43758.55))) * uv_242.x)
     * uv_242.y)));
    p_240 = (p_240 * mat2(1.212, 1.212, -1.212, 1.616));
    vec2 uv_250;
    vec2 tmpvar_251;
    tmpvar_251 = floor(p_240);
    vec2 tmpvar_252;
    tmpvar_252 = (p_240 - tmpvar_251);
    uv_250 = ((tmpvar_252 * tmpvar_252) * (3.0 - (2.0 * tmpvar_252)));
    float tmpvar_253;
    tmpvar_253 = fract((cos(
      dot (tmpvar_251, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_254;
    tmpvar_254.x = (tmpvar_251.x + 1.0);
    tmpvar_254.y = tmpvar_251.y;
    float tmpvar_255;
    tmpvar_255 = fract((cos(
      dot (tmpvar_254, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_256;
    tmpvar_256.x = tmpvar_251.x;
    tmpvar_256.y = (tmpvar_251.y + 1.0);
    float tmpvar_257;
    tmpvar_257 = fract((cos(
      dot (tmpvar_256, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_241 = (f_241 + (0.25 * (
      ((tmpvar_253 + ((tmpvar_255 - tmpvar_253) * uv_250.x)) + ((tmpvar_257 - tmpvar_253) * uv_250.y))
     + 
      ((((
        (tmpvar_253 - tmpvar_255)
       - tmpvar_257) + fract(
        (cos(dot ((tmpvar_251 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_250.x) * uv_250.y)
    )));
    p_240 = (p_240 * mat2(1.218, 1.218, -1.218, 1.624));
    if (best) {
      vec2 uv_258;
      vec2 tmpvar_259;
      tmpvar_259 = floor(p_240);
      vec2 tmpvar_260;
      tmpvar_260 = (p_240 - tmpvar_259);
      uv_258 = ((tmpvar_260 * tmpvar_260) * (3.0 - (2.0 * tmpvar_260)));
      float tmpvar_261;
      tmpvar_261 = fract((cos(
        dot (tmpvar_259, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_262;
      tmpvar_262.x = (tmpvar_259.x + 1.0);
      tmpvar_262.y = tmpvar_259.y;
      float tmpvar_263;
      tmpvar_263 = fract((cos(
        dot (tmpvar_262, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_264;
      tmpvar_264.x = tmpvar_259.x;
      tmpvar_264.y = (tmpvar_259.y + 1.0);
      float tmpvar_265;
      tmpvar_265 = fract((cos(
        dot (tmpvar_264, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_241 = (f_241 + (0.125 * (
        ((tmpvar_261 + ((tmpvar_263 - tmpvar_261) * uv_258.x)) + ((tmpvar_265 - tmpvar_261) * uv_258.y))
       + 
        ((((
          (tmpvar_261 - tmpvar_263)
         - tmpvar_265) + fract(
          (cos(dot ((tmpvar_259 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_258.x) * uv_258.y)
      )));
      p_240 = (p_240 * mat2(1.206, 1.206, -1.206, 1.608));
      vec2 uv_266;
      vec2 tmpvar_267;
      tmpvar_267 = floor(p_240);
      vec2 tmpvar_268;
      tmpvar_268 = (p_240 - tmpvar_267);
      uv_266 = ((tmpvar_268 * tmpvar_268) * (3.0 - (2.0 * tmpvar_268)));
      float tmpvar_269;
      tmpvar_269 = fract((cos(
        dot (tmpvar_267, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_270;
      tmpvar_270.x = (tmpvar_267.x + 1.0);
      tmpvar_270.y = tmpvar_267.y;
      float tmpvar_271;
      tmpvar_271 = fract((cos(
        dot (tmpvar_270, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_272;
      tmpvar_272.x = tmpvar_267.x;
      tmpvar_272.y = (tmpvar_267.y + 1.0);
      float tmpvar_273;
      tmpvar_273 = fract((cos(
        dot (tmpvar_272, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_241 = (f_241 + (0.0625 * (
        ((tmpvar_269 + ((tmpvar_271 - tmpvar_269) * uv_266.x)) + ((tmpvar_273 - tmpvar_269) * uv_266.y))
       + 
        ((((
          (tmpvar_269 - tmpvar_271)
         - tmpvar_273) + fract(
          (cos(dot ((tmpvar_267 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_266.x) * uv_266.y)
      )));
      p_240 = (p_240 * mat2(1.224, 1.224, -1.224, 1.632));
    };
    f_241 = (f_241 / 0.79375);
    float tmpvar_274;
    tmpvar_274 = (f_241 * ((0.2 * 
      dot (uv_85, uv_85)
    ) - 0.5));
    vec4 tmpvar_275;
    tmpvar_275 = mix (cl_83, ((cl_83 + tmpvar_274) + (tmpvar_274 + tmpvar_274)), 0.6);
    cl_83 = tmpvar_275;
    vec2 tmpvar_276;
    tmpvar_276.x = (-(time) * 0.3);
    tmpvar_276.y = (time * 0.3);
    vec2 p_277;
    p_277 = (tmpvar_276 + (uv_85 * 20.0));
    float f_278;
    f_278 = 0.0;
    if (!(best)) {
      p_277 = (p_277 * mat2(0.9012, 0.9012, -0.9012, 1.2016));
    };
    vec2 uv_279;
    vec2 tmpvar_280;
    tmpvar_280 = floor(p_277);
    vec2 tmpvar_281;
    tmpvar_281 = (p_277 - tmpvar_280);
    uv_279 = ((tmpvar_281 * tmpvar_281) * (3.0 - (2.0 * tmpvar_281)));
    float tmpvar_282;
    tmpvar_282 = fract((cos(
      dot (tmpvar_280, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_283;
    tmpvar_283.x = (tmpvar_280.x + 1.0);
    tmpvar_283.y = tmpvar_280.y;
    float tmpvar_284;
    tmpvar_284 = fract((cos(
      dot (tmpvar_283, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_285;
    tmpvar_285.x = tmpvar_280.x;
    tmpvar_285.y = (tmpvar_280.y + 1.0);
    float tmpvar_286;
    tmpvar_286 = fract((cos(
      dot (tmpvar_285, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_278 = (0.5 * ((
      (tmpvar_282 + ((tmpvar_284 - tmpvar_282) * uv_279.x))
     + 
      ((tmpvar_286 - tmpvar_282) * uv_279.y)
    ) + (
      ((((tmpvar_282 - tmpvar_284) - tmpvar_286) + fract((
        cos(dot ((tmpvar_280 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
       * 43758.55))) * uv_279.x)
     * uv_279.y)));
    p_277 = (p_277 * mat2(1.212, 1.212, -1.212, 1.616));
    vec2 uv_287;
    vec2 tmpvar_288;
    tmpvar_288 = floor(p_277);
    vec2 tmpvar_289;
    tmpvar_289 = (p_277 - tmpvar_288);
    uv_287 = ((tmpvar_289 * tmpvar_289) * (3.0 - (2.0 * tmpvar_289)));
    float tmpvar_290;
    tmpvar_290 = fract((cos(
      dot (tmpvar_288, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_291;
    tmpvar_291.x = (tmpvar_288.x + 1.0);
    tmpvar_291.y = tmpvar_288.y;
    float tmpvar_292;
    tmpvar_292 = fract((cos(
      dot (tmpvar_291, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_293;
    tmpvar_293.x = tmpvar_288.x;
    tmpvar_293.y = (tmpvar_288.y + 1.0);
    float tmpvar_294;
    tmpvar_294 = fract((cos(
      dot (tmpvar_293, vec2(21.9898, 78.233))
    ) * 43758.55));
    f_278 = (f_278 + (0.25 * (
      ((tmpvar_290 + ((tmpvar_292 - tmpvar_290) * uv_287.x)) + ((tmpvar_294 - tmpvar_290) * uv_287.y))
     + 
      ((((
        (tmpvar_290 - tmpvar_292)
       - tmpvar_294) + fract(
        (cos(dot ((tmpvar_288 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_287.x) * uv_287.y)
    )));
    p_277 = (p_277 * mat2(1.218, 1.218, -1.218, 1.624));
    if (best) {
      vec2 uv_295;
      vec2 tmpvar_296;
      tmpvar_296 = floor(p_277);
      vec2 tmpvar_297;
      tmpvar_297 = (p_277 - tmpvar_296);
      uv_295 = ((tmpvar_297 * tmpvar_297) * (3.0 - (2.0 * tmpvar_297)));
      float tmpvar_298;
      tmpvar_298 = fract((cos(
        dot (tmpvar_296, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_299;
      tmpvar_299.x = (tmpvar_296.x + 1.0);
      tmpvar_299.y = tmpvar_296.y;
      float tmpvar_300;
      tmpvar_300 = fract((cos(
        dot (tmpvar_299, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_301;
      tmpvar_301.x = tmpvar_296.x;
      tmpvar_301.y = (tmpvar_296.y + 1.0);
      float tmpvar_302;
      tmpvar_302 = fract((cos(
        dot (tmpvar_301, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_278 = (f_278 + (0.125 * (
        ((tmpvar_298 + ((tmpvar_300 - tmpvar_298) * uv_295.x)) + ((tmpvar_302 - tmpvar_298) * uv_295.y))
       + 
        ((((
          (tmpvar_298 - tmpvar_300)
         - tmpvar_302) + fract(
          (cos(dot ((tmpvar_296 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_295.x) * uv_295.y)
      )));
      p_277 = (p_277 * mat2(1.206, 1.206, -1.206, 1.608));
      vec2 uv_303;
      vec2 tmpvar_304;
      tmpvar_304 = floor(p_277);
      vec2 tmpvar_305;
      tmpvar_305 = (p_277 - tmpvar_304);
      uv_303 = ((tmpvar_305 * tmpvar_305) * (3.0 - (2.0 * tmpvar_305)));
      float tmpvar_306;
      tmpvar_306 = fract((cos(
        dot (tmpvar_304, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_307;
      tmpvar_307.x = (tmpvar_304.x + 1.0);
      tmpvar_307.y = tmpvar_304.y;
      float tmpvar_308;
      tmpvar_308 = fract((cos(
        dot (tmpvar_307, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_309;
      tmpvar_309.x = tmpvar_304.x;
      tmpvar_309.y = (tmpvar_304.y + 1.0);
      float tmpvar_310;
      tmpvar_310 = fract((cos(
        dot (tmpvar_309, vec2(21.9898, 78.233))
      ) * 43758.55));
      f_278 = (f_278 + (0.0625 * (
        ((tmpvar_306 + ((tmpvar_308 - tmpvar_306) * uv_303.x)) + ((tmpvar_310 - tmpvar_306) * uv_303.y))
       + 
        ((((
          (tmpvar_306 - tmpvar_308)
         - tmpvar_310) + fract(
          (cos(dot ((tmpvar_304 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_303.x) * uv_303.y)
      )));
      p_277 = (p_277 * mat2(1.224, 1.224, -1.224, 1.632));
    };
    f_278 = (f_278 / 0.79375);
    cl_83 = (tmpvar_275 + (0.2 * f_278));
    cl_83 = (cl_83 - min (cl_83, vec4(-0.3, 0.0, -0.5, 1.0)));
    cl_83 = (cl_83 - (0.8 * dot (uv_85, uv_85)));
    tmpvar_79 = max (vec4(0.0, 0.0, 0.0, 0.0), cl_83);
  } else {
    tmpvar_79 = vec4(0.0, 0.0, 0.0, 0.0);
  };
  buff_11 = (tmpvar_78 + tmpvar_79);
  vec4 tmpvar_311;
  vec2 tmpvar_312;
  tmpvar_312 = ((tmpvar_2 - (planetpos1 * zoom)) - shippos);
  vec2 x_313;
  x_313 = (tmpvar_312 - (2500.0 * zoom));
  float tmpvar_314;
  tmpvar_314 = float((sqrt(
    dot (x_313, x_313)
  ) >= (3000.0 * zoom)));
  if (((1.0 - tmpvar_314) > 0.0)) {
    vec4 cxu_315;
    float bval_316;
    vec4 c_317;
    vec2 p_318;
    vec2 tmpvar_319;
    tmpvar_319 = vec2((5000.0 * zoom));
    vec2 tmpvar_320;
    tmpvar_320 = (((tmpvar_312 * 2.0) - tmpvar_319) / tmpvar_319.y);
    float tmpvar_321;
    tmpvar_321 = sqrt(dot (tmpvar_320, tmpvar_320));
    vec4 tmpvar_322;
    tmpvar_322 = (vec4(0.63, 0.62, 0.86, 1.0) + tmpvar_320.y);
    c_317 = tmpvar_322;
    p_318 = (((tmpvar_320 * 
      (sign(tmpvar_321) * (1.570796 - (sqrt(
        (1.0 - abs(tmpvar_321))
      ) * (1.570796 + 
        (abs(tmpvar_321) * (-0.2146018 + (abs(tmpvar_321) * (0.08656672 + 
          (abs(tmpvar_321) * -0.03102955)
        ))))
      ))))
    ) / tmpvar_321) - 5.0);
    p_318 = (p_318 * p_318.y);
    bval_316 = 0.021;
    if (best) {
      bval_316 = 0.1;
      float r_323;
      vec2 tmpvar_324;
      tmpvar_324 = ((0.7 * p_318) - 0.5);
      float tmpvar_325;
      tmpvar_325 = sqrt(((tmpvar_324.x * tmpvar_324.x) + (tmpvar_324.y * tmpvar_324.y)));
      float tmpvar_326;
      float tmpvar_327;
      tmpvar_327 = (min (abs(
        (tmpvar_324.y / tmpvar_324.x)
      ), 1.0) / max (abs(
        (tmpvar_324.y / tmpvar_324.x)
      ), 1.0));
      float tmpvar_328;
      tmpvar_328 = (tmpvar_327 * tmpvar_327);
      tmpvar_328 = (((
        ((((
          ((((-0.01213232 * tmpvar_328) + 0.05368138) * tmpvar_328) - 0.1173503)
         * tmpvar_328) + 0.1938925) * tmpvar_328) - 0.3326756)
       * tmpvar_328) + 0.9999793) * tmpvar_327);
      tmpvar_328 = (tmpvar_328 + (float(
        (abs((tmpvar_324.y / tmpvar_324.x)) > 1.0)
      ) * (
        (tmpvar_328 * -2.0)
       + 1.570796)));
      tmpvar_326 = (tmpvar_328 * sign((tmpvar_324.y / tmpvar_324.x)));
      if ((abs(tmpvar_324.x) > (1e-08 * abs(tmpvar_324.y)))) {
        if ((tmpvar_324.x < 0.0)) {
          if ((tmpvar_324.y >= 0.0)) {
            tmpvar_326 += 3.141593;
          } else {
            tmpvar_326 = (tmpvar_326 - 3.141593);
          };
        };
      } else {
        tmpvar_326 = (sign(tmpvar_324.y) * 1.570796);
      };
      float tmpvar_329;
      tmpvar_329 = (tmpvar_326 + (time / 100.0));
      vec2 tmpvar_330;
      tmpvar_330.x = (tmpvar_325 * cos(tmpvar_329));
      tmpvar_330.y = (tmpvar_325 * sin(tmpvar_329));
      float tmpvar_331;
      float tmpvar_332;
      tmpvar_332 = (time / 10.0);
      tmpvar_331 = (2.0 + (0.2 * cos(tmpvar_332)));
      float tmpvar_333;
      tmpvar_333 = (2.0 - (0.2 * sin(tmpvar_332)));
      vec2 v_334;
      v_334 = (10.0 * tmpvar_330);
      float amplitude_336;
      float value_337;
      value_337 = 0.0;
      amplitude_336 = 0.5;
      for (int i_335 = 0; i_335 < 4; i_335++) {
        vec2 uv_338;
        vec2 tmpvar_339;
        tmpvar_339 = floor(v_334);
        vec2 tmpvar_340;
        tmpvar_340 = (v_334 - tmpvar_339);
        uv_338 = ((tmpvar_340 * tmpvar_340) * (3.0 - (2.0 * tmpvar_340)));
        float tmpvar_341;
        tmpvar_341 = fract((cos(
          dot (tmpvar_339, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_342;
        tmpvar_342.x = (tmpvar_339.x + 1.0);
        tmpvar_342.y = tmpvar_339.y;
        float tmpvar_343;
        tmpvar_343 = fract((cos(
          dot (tmpvar_342, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_344;
        tmpvar_344.x = tmpvar_339.x;
        tmpvar_344.y = (tmpvar_339.y + 1.0);
        float tmpvar_345;
        tmpvar_345 = fract((cos(
          dot (tmpvar_344, vec2(21.9898, 78.233))
        ) * 43758.55));
        value_337 = (value_337 + (amplitude_336 * (
          ((tmpvar_341 + ((tmpvar_343 - tmpvar_341) * uv_338.x)) + ((tmpvar_345 - tmpvar_341) * uv_338.y))
         + 
          ((((
            (tmpvar_341 - tmpvar_343)
           - tmpvar_345) + fract(
            (cos(dot ((tmpvar_339 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
          )) * uv_338.x) * uv_338.y)
        )));
        v_334 = (v_334 * 2.0);
        amplitude_336 = (amplitude_336 * 0.5);
        vec2 xy_346;
        xy_346 = (v_334 * 2.0);
        vec2 uv_347;
        vec2 tmpvar_348;
        tmpvar_348 = floor(xy_346);
        vec2 tmpvar_349;
        tmpvar_349 = (xy_346 - tmpvar_348);
        uv_347 = ((tmpvar_349 * tmpvar_349) * (3.0 - (2.0 * tmpvar_349)));
        float tmpvar_350;
        tmpvar_350 = fract((cos(
          dot (tmpvar_348, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_351;
        tmpvar_351.x = (tmpvar_348.x + 1.0);
        tmpvar_351.y = tmpvar_348.y;
        float tmpvar_352;
        tmpvar_352 = fract((cos(
          dot (tmpvar_351, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_353;
        tmpvar_353.x = tmpvar_348.x;
        tmpvar_353.y = (tmpvar_348.y + 1.0);
        float tmpvar_354;
        tmpvar_354 = fract((cos(
          dot (tmpvar_353, vec2(21.9898, 78.233))
        ) * 43758.55));
        value_337 = (value_337 + ((amplitude_336 * 
          (((tmpvar_350 + (
            (tmpvar_352 - tmpvar_350)
           * uv_347.x)) + ((tmpvar_354 - tmpvar_350) * uv_347.y)) + (((
            ((tmpvar_350 - tmpvar_352) - tmpvar_354)
           + 
            fract((cos(dot (
              (tmpvar_348 + vec2(1.0, 1.0))
            , vec2(21.9898, 78.233))) * 43758.55))
          ) * uv_347.x) * uv_347.y))
        ) * 0.5));
        amplitude_336 = (amplitude_336 * 0.5);
      };
      r_323 = (sin((
        (((tmpvar_330.x * tmpvar_331) * 6.283) + ((tmpvar_330.y * tmpvar_333) * 6.283))
       + 
        (15.0 * value_337)
      )) + 1.0);
      vec4 tmpvar_355;
      tmpvar_355.w = 1.0;
      tmpvar_355.x = r_323;
      tmpvar_355.y = r_323;
      tmpvar_355.z = r_323;
      c_317 = (tmpvar_322 + ((tmpvar_355 * vec4(0.75, 1.0, 0.75, 1.0)) + (
        (1.0 - tmpvar_355)
       * vec4(0.0, 0.25, 0.0, 1.0))));
      p_318 = (p_318 * 0.4);
      c_317 = (c_317 * 0.6);
      float r_356;
      vec2 tmpvar_357;
      tmpvar_357 = ((0.7 * p_318) - 0.5);
      float tmpvar_358;
      tmpvar_358 = sqrt(((tmpvar_357.x * tmpvar_357.x) + (tmpvar_357.y * tmpvar_357.y)));
      float tmpvar_359;
      float tmpvar_360;
      tmpvar_360 = (min (abs(
        (tmpvar_357.y / tmpvar_357.x)
      ), 1.0) / max (abs(
        (tmpvar_357.y / tmpvar_357.x)
      ), 1.0));
      float tmpvar_361;
      tmpvar_361 = (tmpvar_360 * tmpvar_360);
      tmpvar_361 = (((
        ((((
          ((((-0.01213232 * tmpvar_361) + 0.05368138) * tmpvar_361) - 0.1173503)
         * tmpvar_361) + 0.1938925) * tmpvar_361) - 0.3326756)
       * tmpvar_361) + 0.9999793) * tmpvar_360);
      tmpvar_361 = (tmpvar_361 + (float(
        (abs((tmpvar_357.y / tmpvar_357.x)) > 1.0)
      ) * (
        (tmpvar_361 * -2.0)
       + 1.570796)));
      tmpvar_359 = (tmpvar_361 * sign((tmpvar_357.y / tmpvar_357.x)));
      if ((abs(tmpvar_357.x) > (1e-08 * abs(tmpvar_357.y)))) {
        if ((tmpvar_357.x < 0.0)) {
          if ((tmpvar_357.y >= 0.0)) {
            tmpvar_359 += 3.141593;
          } else {
            tmpvar_359 = (tmpvar_359 - 3.141593);
          };
        };
      } else {
        tmpvar_359 = (sign(tmpvar_357.y) * 1.570796);
      };
      float tmpvar_362;
      tmpvar_362 = (tmpvar_359 + (time / 100.0));
      vec2 tmpvar_363;
      tmpvar_363.x = (tmpvar_358 * cos(tmpvar_362));
      tmpvar_363.y = (tmpvar_358 * sin(tmpvar_362));
      float tmpvar_364;
      float tmpvar_365;
      tmpvar_365 = (time / 10.0);
      tmpvar_364 = (2.0 + (0.2 * cos(tmpvar_365)));
      float tmpvar_366;
      tmpvar_366 = (2.0 - (0.2 * sin(tmpvar_365)));
      vec2 v_367;
      v_367 = (10.0 * tmpvar_363);
      float amplitude_369;
      float value_370;
      value_370 = 0.0;
      amplitude_369 = 0.5;
      for (int i_368 = 0; i_368 < 4; i_368++) {
        vec2 uv_371;
        vec2 tmpvar_372;
        tmpvar_372 = floor(v_367);
        vec2 tmpvar_373;
        tmpvar_373 = (v_367 - tmpvar_372);
        uv_371 = ((tmpvar_373 * tmpvar_373) * (3.0 - (2.0 * tmpvar_373)));
        float tmpvar_374;
        tmpvar_374 = fract((cos(
          dot (tmpvar_372, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_375;
        tmpvar_375.x = (tmpvar_372.x + 1.0);
        tmpvar_375.y = tmpvar_372.y;
        float tmpvar_376;
        tmpvar_376 = fract((cos(
          dot (tmpvar_375, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_377;
        tmpvar_377.x = tmpvar_372.x;
        tmpvar_377.y = (tmpvar_372.y + 1.0);
        float tmpvar_378;
        tmpvar_378 = fract((cos(
          dot (tmpvar_377, vec2(21.9898, 78.233))
        ) * 43758.55));
        value_370 = (value_370 + (amplitude_369 * (
          ((tmpvar_374 + ((tmpvar_376 - tmpvar_374) * uv_371.x)) + ((tmpvar_378 - tmpvar_374) * uv_371.y))
         + 
          ((((
            (tmpvar_374 - tmpvar_376)
           - tmpvar_378) + fract(
            (cos(dot ((tmpvar_372 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
          )) * uv_371.x) * uv_371.y)
        )));
        v_367 = (v_367 * 2.0);
        amplitude_369 = (amplitude_369 * 0.5);
        vec2 xy_379;
        xy_379 = (v_367 * 2.0);
        vec2 uv_380;
        vec2 tmpvar_381;
        tmpvar_381 = floor(xy_379);
        vec2 tmpvar_382;
        tmpvar_382 = (xy_379 - tmpvar_381);
        uv_380 = ((tmpvar_382 * tmpvar_382) * (3.0 - (2.0 * tmpvar_382)));
        float tmpvar_383;
        tmpvar_383 = fract((cos(
          dot (tmpvar_381, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_384;
        tmpvar_384.x = (tmpvar_381.x + 1.0);
        tmpvar_384.y = tmpvar_381.y;
        float tmpvar_385;
        tmpvar_385 = fract((cos(
          dot (tmpvar_384, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_386;
        tmpvar_386.x = tmpvar_381.x;
        tmpvar_386.y = (tmpvar_381.y + 1.0);
        float tmpvar_387;
        tmpvar_387 = fract((cos(
          dot (tmpvar_386, vec2(21.9898, 78.233))
        ) * 43758.55));
        value_370 = (value_370 + ((amplitude_369 * 
          (((tmpvar_383 + (
            (tmpvar_385 - tmpvar_383)
           * uv_380.x)) + ((tmpvar_387 - tmpvar_383) * uv_380.y)) + (((
            ((tmpvar_383 - tmpvar_385) - tmpvar_387)
           + 
            fract((cos(dot (
              (tmpvar_381 + vec2(1.0, 1.0))
            , vec2(21.9898, 78.233))) * 43758.55))
          ) * uv_380.x) * uv_380.y))
        ) * 0.5));
        amplitude_369 = (amplitude_369 * 0.5);
      };
      r_356 = (sin((
        (((tmpvar_363.x * tmpvar_364) * 6.283) + ((tmpvar_363.y * tmpvar_366) * 6.283))
       + 
        (15.0 * value_370)
      )) + 1.0);
      vec4 tmpvar_388;
      tmpvar_388.w = 1.0;
      tmpvar_388.x = r_356;
      tmpvar_388.y = r_356;
      tmpvar_388.z = r_356;
      c_317 = (c_317 + ((tmpvar_388 * vec4(0.75, 1.0, 0.75, 1.0)) + (
        (1.0 - tmpvar_388)
       * vec4(0.0, 0.25, 0.0, 1.0))));
      p_318 = (p_318 * 0.4);
      c_317 = (c_317 * 0.6);
    };
    float r_389;
    vec2 tmpvar_390;
    tmpvar_390 = (((p_318 * bval_316) * 7.0) - 0.5);
    float tmpvar_391;
    tmpvar_391 = sqrt(((tmpvar_390.x * tmpvar_390.x) + (tmpvar_390.y * tmpvar_390.y)));
    float tmpvar_392;
    float tmpvar_393;
    tmpvar_393 = (min (abs(
      (tmpvar_390.y / tmpvar_390.x)
    ), 1.0) / max (abs(
      (tmpvar_390.y / tmpvar_390.x)
    ), 1.0));
    float tmpvar_394;
    tmpvar_394 = (tmpvar_393 * tmpvar_393);
    tmpvar_394 = (((
      ((((
        ((((-0.01213232 * tmpvar_394) + 0.05368138) * tmpvar_394) - 0.1173503)
       * tmpvar_394) + 0.1938925) * tmpvar_394) - 0.3326756)
     * tmpvar_394) + 0.9999793) * tmpvar_393);
    tmpvar_394 = (tmpvar_394 + (float(
      (abs((tmpvar_390.y / tmpvar_390.x)) > 1.0)
    ) * (
      (tmpvar_394 * -2.0)
     + 1.570796)));
    tmpvar_392 = (tmpvar_394 * sign((tmpvar_390.y / tmpvar_390.x)));
    if ((abs(tmpvar_390.x) > (1e-08 * abs(tmpvar_390.y)))) {
      if ((tmpvar_390.x < 0.0)) {
        if ((tmpvar_390.y >= 0.0)) {
          tmpvar_392 += 3.141593;
        } else {
          tmpvar_392 = (tmpvar_392 - 3.141593);
        };
      };
    } else {
      tmpvar_392 = (sign(tmpvar_390.y) * 1.570796);
    };
    float tmpvar_395;
    tmpvar_395 = (tmpvar_392 + (time / 100.0));
    vec2 tmpvar_396;
    tmpvar_396.x = (tmpvar_391 * cos(tmpvar_395));
    tmpvar_396.y = (tmpvar_391 * sin(tmpvar_395));
    float tmpvar_397;
    float tmpvar_398;
    tmpvar_398 = (time / 10.0);
    tmpvar_397 = (2.0 + (0.2 * cos(tmpvar_398)));
    float tmpvar_399;
    tmpvar_399 = (2.0 - (0.2 * sin(tmpvar_398)));
    vec2 v_400;
    v_400 = (10.0 * tmpvar_396);
    float amplitude_402;
    float value_403;
    value_403 = 0.0;
    amplitude_402 = 0.5;
    for (int i_401 = 0; i_401 < 4; i_401++) {
      vec2 uv_404;
      vec2 tmpvar_405;
      tmpvar_405 = floor(v_400);
      vec2 tmpvar_406;
      tmpvar_406 = (v_400 - tmpvar_405);
      uv_404 = ((tmpvar_406 * tmpvar_406) * (3.0 - (2.0 * tmpvar_406)));
      float tmpvar_407;
      tmpvar_407 = fract((cos(
        dot (tmpvar_405, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_408;
      tmpvar_408.x = (tmpvar_405.x + 1.0);
      tmpvar_408.y = tmpvar_405.y;
      float tmpvar_409;
      tmpvar_409 = fract((cos(
        dot (tmpvar_408, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_410;
      tmpvar_410.x = tmpvar_405.x;
      tmpvar_410.y = (tmpvar_405.y + 1.0);
      float tmpvar_411;
      tmpvar_411 = fract((cos(
        dot (tmpvar_410, vec2(21.9898, 78.233))
      ) * 43758.55));
      value_403 = (value_403 + (amplitude_402 * (
        ((tmpvar_407 + ((tmpvar_409 - tmpvar_407) * uv_404.x)) + ((tmpvar_411 - tmpvar_407) * uv_404.y))
       + 
        ((((
          (tmpvar_407 - tmpvar_409)
         - tmpvar_411) + fract(
          (cos(dot ((tmpvar_405 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_404.x) * uv_404.y)
      )));
      v_400 = (v_400 * 2.0);
      amplitude_402 = (amplitude_402 * 0.5);
      vec2 xy_412;
      xy_412 = (v_400 * 2.0);
      vec2 uv_413;
      vec2 tmpvar_414;
      tmpvar_414 = floor(xy_412);
      vec2 tmpvar_415;
      tmpvar_415 = (xy_412 - tmpvar_414);
      uv_413 = ((tmpvar_415 * tmpvar_415) * (3.0 - (2.0 * tmpvar_415)));
      float tmpvar_416;
      tmpvar_416 = fract((cos(
        dot (tmpvar_414, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_417;
      tmpvar_417.x = (tmpvar_414.x + 1.0);
      tmpvar_417.y = tmpvar_414.y;
      float tmpvar_418;
      tmpvar_418 = fract((cos(
        dot (tmpvar_417, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_419;
      tmpvar_419.x = tmpvar_414.x;
      tmpvar_419.y = (tmpvar_414.y + 1.0);
      float tmpvar_420;
      tmpvar_420 = fract((cos(
        dot (tmpvar_419, vec2(21.9898, 78.233))
      ) * 43758.55));
      value_403 = (value_403 + ((amplitude_402 * 
        (((tmpvar_416 + (
          (tmpvar_418 - tmpvar_416)
         * uv_413.x)) + ((tmpvar_420 - tmpvar_416) * uv_413.y)) + (((
          ((tmpvar_416 - tmpvar_418) - tmpvar_420)
         + 
          fract((cos(dot (
            (tmpvar_414 + vec2(1.0, 1.0))
          , vec2(21.9898, 78.233))) * 43758.55))
        ) * uv_413.x) * uv_413.y))
      ) * 0.5));
      amplitude_402 = (amplitude_402 * 0.5);
    };
    r_389 = (sin((
      (((tmpvar_396.x * tmpvar_397) * 6.283) + ((tmpvar_396.y * tmpvar_399) * 6.283))
     + 
      (15.0 * value_403)
    )) + 1.0);
    vec4 tmpvar_421;
    tmpvar_421.w = 1.0;
    tmpvar_421.x = r_389;
    tmpvar_421.y = r_389;
    tmpvar_421.z = r_389;
    c_317 = (c_317 + ((tmpvar_421 * vec4(0.75, 1.0, 0.75, 1.0)) + (
      (1.0 - tmpvar_421)
     * vec4(0.0, 0.25, 0.0, 1.0))));
    p_318 = (p_318 * 0.4);
    c_317 = (c_317 * 0.6);
    float r_422;
    vec2 tmpvar_423;
    tmpvar_423 = (((p_318 * bval_316) * 7.0) - 0.5);
    float tmpvar_424;
    tmpvar_424 = sqrt(((tmpvar_423.x * tmpvar_423.x) + (tmpvar_423.y * tmpvar_423.y)));
    float tmpvar_425;
    float tmpvar_426;
    tmpvar_426 = (min (abs(
      (tmpvar_423.y / tmpvar_423.x)
    ), 1.0) / max (abs(
      (tmpvar_423.y / tmpvar_423.x)
    ), 1.0));
    float tmpvar_427;
    tmpvar_427 = (tmpvar_426 * tmpvar_426);
    tmpvar_427 = (((
      ((((
        ((((-0.01213232 * tmpvar_427) + 0.05368138) * tmpvar_427) - 0.1173503)
       * tmpvar_427) + 0.1938925) * tmpvar_427) - 0.3326756)
     * tmpvar_427) + 0.9999793) * tmpvar_426);
    tmpvar_427 = (tmpvar_427 + (float(
      (abs((tmpvar_423.y / tmpvar_423.x)) > 1.0)
    ) * (
      (tmpvar_427 * -2.0)
     + 1.570796)));
    tmpvar_425 = (tmpvar_427 * sign((tmpvar_423.y / tmpvar_423.x)));
    if ((abs(tmpvar_423.x) > (1e-08 * abs(tmpvar_423.y)))) {
      if ((tmpvar_423.x < 0.0)) {
        if ((tmpvar_423.y >= 0.0)) {
          tmpvar_425 += 3.141593;
        } else {
          tmpvar_425 = (tmpvar_425 - 3.141593);
        };
      };
    } else {
      tmpvar_425 = (sign(tmpvar_423.y) * 1.570796);
    };
    float tmpvar_428;
    tmpvar_428 = (tmpvar_425 + (time / 100.0));
    vec2 tmpvar_429;
    tmpvar_429.x = (tmpvar_424 * cos(tmpvar_428));
    tmpvar_429.y = (tmpvar_424 * sin(tmpvar_428));
    float tmpvar_430;
    float tmpvar_431;
    tmpvar_431 = (time / 10.0);
    tmpvar_430 = (2.0 + (0.2 * cos(tmpvar_431)));
    float tmpvar_432;
    tmpvar_432 = (2.0 - (0.2 * sin(tmpvar_431)));
    vec2 v_433;
    v_433 = (10.0 * tmpvar_429);
    float amplitude_435;
    float value_436;
    value_436 = 0.0;
    amplitude_435 = 0.5;
    for (int i_434 = 0; i_434 < 4; i_434++) {
      vec2 uv_437;
      vec2 tmpvar_438;
      tmpvar_438 = floor(v_433);
      vec2 tmpvar_439;
      tmpvar_439 = (v_433 - tmpvar_438);
      uv_437 = ((tmpvar_439 * tmpvar_439) * (3.0 - (2.0 * tmpvar_439)));
      float tmpvar_440;
      tmpvar_440 = fract((cos(
        dot (tmpvar_438, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_441;
      tmpvar_441.x = (tmpvar_438.x + 1.0);
      tmpvar_441.y = tmpvar_438.y;
      float tmpvar_442;
      tmpvar_442 = fract((cos(
        dot (tmpvar_441, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_443;
      tmpvar_443.x = tmpvar_438.x;
      tmpvar_443.y = (tmpvar_438.y + 1.0);
      float tmpvar_444;
      tmpvar_444 = fract((cos(
        dot (tmpvar_443, vec2(21.9898, 78.233))
      ) * 43758.55));
      value_436 = (value_436 + (amplitude_435 * (
        ((tmpvar_440 + ((tmpvar_442 - tmpvar_440) * uv_437.x)) + ((tmpvar_444 - tmpvar_440) * uv_437.y))
       + 
        ((((
          (tmpvar_440 - tmpvar_442)
         - tmpvar_444) + fract(
          (cos(dot ((tmpvar_438 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_437.x) * uv_437.y)
      )));
      v_433 = (v_433 * 2.0);
      amplitude_435 = (amplitude_435 * 0.5);
      vec2 xy_445;
      xy_445 = (v_433 * 2.0);
      vec2 uv_446;
      vec2 tmpvar_447;
      tmpvar_447 = floor(xy_445);
      vec2 tmpvar_448;
      tmpvar_448 = (xy_445 - tmpvar_447);
      uv_446 = ((tmpvar_448 * tmpvar_448) * (3.0 - (2.0 * tmpvar_448)));
      float tmpvar_449;
      tmpvar_449 = fract((cos(
        dot (tmpvar_447, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_450;
      tmpvar_450.x = (tmpvar_447.x + 1.0);
      tmpvar_450.y = tmpvar_447.y;
      float tmpvar_451;
      tmpvar_451 = fract((cos(
        dot (tmpvar_450, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_452;
      tmpvar_452.x = tmpvar_447.x;
      tmpvar_452.y = (tmpvar_447.y + 1.0);
      float tmpvar_453;
      tmpvar_453 = fract((cos(
        dot (tmpvar_452, vec2(21.9898, 78.233))
      ) * 43758.55));
      value_436 = (value_436 + ((amplitude_435 * 
        (((tmpvar_449 + (
          (tmpvar_451 - tmpvar_449)
         * uv_446.x)) + ((tmpvar_453 - tmpvar_449) * uv_446.y)) + (((
          ((tmpvar_449 - tmpvar_451) - tmpvar_453)
         + 
          fract((cos(dot (
            (tmpvar_447 + vec2(1.0, 1.0))
          , vec2(21.9898, 78.233))) * 43758.55))
        ) * uv_446.x) * uv_446.y))
      ) * 0.5));
      amplitude_435 = (amplitude_435 * 0.5);
    };
    r_422 = (sin((
      (((tmpvar_429.x * tmpvar_430) * 6.283) + ((tmpvar_429.y * tmpvar_432) * 6.283))
     + 
      (15.0 * value_436)
    )) + 1.0);
    vec4 tmpvar_454;
    tmpvar_454.w = 1.0;
    tmpvar_454.x = r_422;
    tmpvar_454.y = r_422;
    tmpvar_454.z = r_422;
    c_317 = (c_317 + ((tmpvar_454 * vec4(0.75, 1.0, 0.75, 1.0)) + (
      (1.0 - tmpvar_454)
     * vec4(0.0, 0.25, 0.0, 1.0))));
    p_318 = (p_318 * 0.4);
    c_317 = (c_317 * 0.6);
    float r_455;
    vec2 tmpvar_456;
    tmpvar_456 = (((p_318 * bval_316) * 7.0) - 0.5);
    float tmpvar_457;
    tmpvar_457 = sqrt(((tmpvar_456.x * tmpvar_456.x) + (tmpvar_456.y * tmpvar_456.y)));
    float tmpvar_458;
    float tmpvar_459;
    tmpvar_459 = (min (abs(
      (tmpvar_456.y / tmpvar_456.x)
    ), 1.0) / max (abs(
      (tmpvar_456.y / tmpvar_456.x)
    ), 1.0));
    float tmpvar_460;
    tmpvar_460 = (tmpvar_459 * tmpvar_459);
    tmpvar_460 = (((
      ((((
        ((((-0.01213232 * tmpvar_460) + 0.05368138) * tmpvar_460) - 0.1173503)
       * tmpvar_460) + 0.1938925) * tmpvar_460) - 0.3326756)
     * tmpvar_460) + 0.9999793) * tmpvar_459);
    tmpvar_460 = (tmpvar_460 + (float(
      (abs((tmpvar_456.y / tmpvar_456.x)) > 1.0)
    ) * (
      (tmpvar_460 * -2.0)
     + 1.570796)));
    tmpvar_458 = (tmpvar_460 * sign((tmpvar_456.y / tmpvar_456.x)));
    if ((abs(tmpvar_456.x) > (1e-08 * abs(tmpvar_456.y)))) {
      if ((tmpvar_456.x < 0.0)) {
        if ((tmpvar_456.y >= 0.0)) {
          tmpvar_458 += 3.141593;
        } else {
          tmpvar_458 = (tmpvar_458 - 3.141593);
        };
      };
    } else {
      tmpvar_458 = (sign(tmpvar_456.y) * 1.570796);
    };
    float tmpvar_461;
    tmpvar_461 = (tmpvar_458 + (time / 100.0));
    vec2 tmpvar_462;
    tmpvar_462.x = (tmpvar_457 * cos(tmpvar_461));
    tmpvar_462.y = (tmpvar_457 * sin(tmpvar_461));
    float tmpvar_463;
    float tmpvar_464;
    tmpvar_464 = (time / 10.0);
    tmpvar_463 = (2.0 + (0.2 * cos(tmpvar_464)));
    float tmpvar_465;
    tmpvar_465 = (2.0 - (0.2 * sin(tmpvar_464)));
    vec2 v_466;
    v_466 = (10.0 * tmpvar_462);
    float amplitude_468;
    float value_469;
    value_469 = 0.0;
    amplitude_468 = 0.5;
    for (int i_467 = 0; i_467 < 4; i_467++) {
      vec2 uv_470;
      vec2 tmpvar_471;
      tmpvar_471 = floor(v_466);
      vec2 tmpvar_472;
      tmpvar_472 = (v_466 - tmpvar_471);
      uv_470 = ((tmpvar_472 * tmpvar_472) * (3.0 - (2.0 * tmpvar_472)));
      float tmpvar_473;
      tmpvar_473 = fract((cos(
        dot (tmpvar_471, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_474;
      tmpvar_474.x = (tmpvar_471.x + 1.0);
      tmpvar_474.y = tmpvar_471.y;
      float tmpvar_475;
      tmpvar_475 = fract((cos(
        dot (tmpvar_474, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_476;
      tmpvar_476.x = tmpvar_471.x;
      tmpvar_476.y = (tmpvar_471.y + 1.0);
      float tmpvar_477;
      tmpvar_477 = fract((cos(
        dot (tmpvar_476, vec2(21.9898, 78.233))
      ) * 43758.55));
      value_469 = (value_469 + (amplitude_468 * (
        ((tmpvar_473 + ((tmpvar_475 - tmpvar_473) * uv_470.x)) + ((tmpvar_477 - tmpvar_473) * uv_470.y))
       + 
        ((((
          (tmpvar_473 - tmpvar_475)
         - tmpvar_477) + fract(
          (cos(dot ((tmpvar_471 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_470.x) * uv_470.y)
      )));
      v_466 = (v_466 * 2.0);
      amplitude_468 = (amplitude_468 * 0.5);
      vec2 xy_478;
      xy_478 = (v_466 * 2.0);
      vec2 uv_479;
      vec2 tmpvar_480;
      tmpvar_480 = floor(xy_478);
      vec2 tmpvar_481;
      tmpvar_481 = (xy_478 - tmpvar_480);
      uv_479 = ((tmpvar_481 * tmpvar_481) * (3.0 - (2.0 * tmpvar_481)));
      float tmpvar_482;
      tmpvar_482 = fract((cos(
        dot (tmpvar_480, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_483;
      tmpvar_483.x = (tmpvar_480.x + 1.0);
      tmpvar_483.y = tmpvar_480.y;
      float tmpvar_484;
      tmpvar_484 = fract((cos(
        dot (tmpvar_483, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_485;
      tmpvar_485.x = tmpvar_480.x;
      tmpvar_485.y = (tmpvar_480.y + 1.0);
      float tmpvar_486;
      tmpvar_486 = fract((cos(
        dot (tmpvar_485, vec2(21.9898, 78.233))
      ) * 43758.55));
      value_469 = (value_469 + ((amplitude_468 * 
        (((tmpvar_482 + (
          (tmpvar_484 - tmpvar_482)
         * uv_479.x)) + ((tmpvar_486 - tmpvar_482) * uv_479.y)) + (((
          ((tmpvar_482 - tmpvar_484) - tmpvar_486)
         + 
          fract((cos(dot (
            (tmpvar_480 + vec2(1.0, 1.0))
          , vec2(21.9898, 78.233))) * 43758.55))
        ) * uv_479.x) * uv_479.y))
      ) * 0.5));
      amplitude_468 = (amplitude_468 * 0.5);
    };
    r_455 = (sin((
      (((tmpvar_462.x * tmpvar_463) * 6.283) + ((tmpvar_462.y * tmpvar_465) * 6.283))
     + 
      (15.0 * value_469)
    )) + 1.0);
    vec4 tmpvar_487;
    tmpvar_487.w = 1.0;
    tmpvar_487.x = r_455;
    tmpvar_487.y = r_455;
    tmpvar_487.z = r_455;
    c_317 = (c_317 + ((tmpvar_487 * vec4(0.75, 1.0, 0.75, 1.0)) + (
      (1.0 - tmpvar_487)
     * vec4(0.0, 0.25, 0.0, 1.0))));
    p_318 = (p_318 * 0.4);
    c_317 = (c_317 * 0.6);
    float tmpvar_488;
    tmpvar_488 = clamp (((tax - 0.23) / 0.16), 0.0, 1.0);
    float tmpvar_489;
    tmpvar_489 = clamp (((tax - 0.65) / -0.26), 0.0, 1.0);
    float tmpvar_490;
    tmpvar_490 = ((1.0 - (tmpvar_488 * 
      (tmpvar_488 * (3.0 - (2.0 * tmpvar_488)))
    )) + (1.0 - (tmpvar_489 * 
      (tmpvar_489 * (3.0 - (2.0 * tmpvar_489)))
    )));
    if (((1.0 - tmpvar_490) > 0.0)) {
      vec2 pos_491;
      vec3 col_492;
      float tmpvar_493;
      tmpvar_493 = clamp (((tax - 0.19) / 0.46), 0.0, 1.0);
      float tmpvar_494;
      tmpvar_494 = (1.0 - (tmpvar_493 * (tmpvar_493 * 
        (3.0 - (2.0 * tmpvar_493))
      )));
      float tmpvar_495;
      tmpvar_495 = (7000.0 * zoom);
      pos_491 = (tmpvar_312 + ((
        -(tmpvar_495)
       / 2.0) + (tmpvar_495 * 0.145)));
      mat2 tmpvar_496;
      float tmpvar_497;
      tmpvar_497 = (tax + 0.9817436);
      tmpvar_496[0].x = cos((tmpvar_497 + (1.57079 * 
        (1.0 - tmpvar_494)
      )));
      tmpvar_496[0].y = -(sin((tmpvar_497 + 
        (1.57079 * (1.0 - tmpvar_494))
      )));
      tmpvar_496[1].x = sin((tmpvar_497 + (1.57079 * 
        (1.0 - tmpvar_494)
      )));
      tmpvar_496[1].y = cos((tmpvar_497 + (1.57079 * 
        (1.0 - tmpvar_494)
      )));
      pos_491 = ((tmpvar_495 * 0.5) - (pos_491 * tmpvar_496));
      vec2 tmpvar_498;
      tmpvar_498 = ((pos_491 / tmpvar_495) - vec2(0.5, 0.5));
      col_492 = vec3(0.0, 0.0, 0.0);
      float tmpvar_499;
      tmpvar_499 = (dot (tmpvar_498, tmpvar_498) * 8.0);
      float tmpvar_500;
      tmpvar_500 = ((1.0 - sqrt(
        abs((1.0 - tmpvar_499))
      )) / tmpvar_499);
      vec2 p_501;
      vec2 tmpvar_502;
      tmpvar_502 = vec2((11050.0 * zoom));
      mat2 tmpvar_503;
      float tmpvar_504;
      tmpvar_504 = (tax * 3.0);
      tmpvar_503[0].x = cos(tmpvar_504);
      tmpvar_503[0].y = -(sin(tmpvar_504));
      tmpvar_503[1].x = sin(tmpvar_504);
      tmpvar_503[1].y = cos(tmpvar_504);
      p_501 = (((pos_491 - 
        (0.5 * tmpvar_502)
      ) / tmpvar_502.y) * tmpvar_503);
      float color1_505;
      vec2 x_506;
      x_506 = (2.5 * p_501);
      float tmpvar_507;
      tmpvar_507 = (4.0 - (3.0 * sqrt(
        dot (x_506, x_506)
      )));
      color1_505 = tmpvar_507;
      float tmpvar_508;
      float tmpvar_509;
      tmpvar_509 = (min (abs(
        (p_501.x / p_501.y)
      ), 1.0) / max (abs(
        (p_501.x / p_501.y)
      ), 1.0));
      float tmpvar_510;
      tmpvar_510 = (tmpvar_509 * tmpvar_509);
      tmpvar_510 = (((
        ((((
          ((((-0.01213232 * tmpvar_510) + 0.05368138) * tmpvar_510) - 0.1173503)
         * tmpvar_510) + 0.1938925) * tmpvar_510) - 0.3326756)
       * tmpvar_510) + 0.9999793) * tmpvar_509);
      tmpvar_510 = (tmpvar_510 + (float(
        (abs((p_501.x / p_501.y)) > 1.0)
      ) * (
        (tmpvar_510 * -2.0)
       + 1.570796)));
      tmpvar_508 = (tmpvar_510 * sign((p_501.x / p_501.y)));
      if ((abs(p_501.y) > (1e-08 * abs(p_501.x)))) {
        if ((p_501.y < 0.0)) {
          if ((p_501.x >= 0.0)) {
            tmpvar_508 += 3.141593;
          } else {
            tmpvar_508 = (tmpvar_508 - 3.141593);
          };
        };
      } else {
        tmpvar_508 = (sign(p_501.x) * 1.570796);
      };
      vec3 tmpvar_511;
      tmpvar_511.z = 0.5;
      tmpvar_511.x = ((tmpvar_508 / 6.2832) + 0.5);
      tmpvar_511.y = (sqrt(dot (p_501, p_501)) * 0.4);
      vec3 tmpvar_512;
      tmpvar_512.x = 0.0;
      float tmpvar_513;
      tmpvar_513 = -(time);
      tmpvar_512.y = (tmpvar_513 * 0.05);
      tmpvar_512.z = (tmpvar_513 * 0.01);
      vec3 uv_514;
      uv_514 = (tmpvar_511 + tmpvar_512);
      vec3 f_515;
      uv_514 = (uv_514 * 32.0);
      vec3 tmpvar_516;
      tmpvar_516 = (floor((vec3(mod (uv_514, 32.0)))) * vec3(1.0, 100.0, 1000.0));
      vec3 tmpvar_517;
      tmpvar_517 = (floor((vec3(mod (
        (uv_514 + 1.0)
      , 32.0)))) * vec3(1.0, 100.0, 1000.0));
      vec3 tmpvar_518;
      tmpvar_518 = fract(uv_514);
      f_515 = ((tmpvar_518 * tmpvar_518) * (3.0 - (2.0 * tmpvar_518)));
      vec4 tmpvar_519;
      tmpvar_519.x = ((tmpvar_516.x + tmpvar_516.y) + tmpvar_516.z);
      tmpvar_519.y = ((tmpvar_517.x + tmpvar_516.y) + tmpvar_516.z);
      tmpvar_519.z = ((tmpvar_516.x + tmpvar_517.y) + tmpvar_516.z);
      tmpvar_519.w = ((tmpvar_517.x + tmpvar_517.y) + tmpvar_516.z);
      vec4 tmpvar_520;
      tmpvar_520 = fract((sin(
        (tmpvar_519 * 0.1)
      ) * 1000.0));
      vec4 tmpvar_521;
      tmpvar_521 = fract((sin(
        (((tmpvar_519 + tmpvar_517.z) - tmpvar_516.z) * 0.1)
      ) * 1000.0));
      color1_505 = (tmpvar_507 + (0.15 * (
        (mix (mix (mix (tmpvar_520.x, tmpvar_520.y, f_515.x), mix (tmpvar_520.z, tmpvar_520.w, f_515.x), f_515.y), mix (mix (tmpvar_521.x, tmpvar_521.y, f_515.x), mix (tmpvar_521.z, tmpvar_521.w, f_515.x), f_515.y), f_515.z) * 2.0)
       - 1.0)));
      if (best) {
        vec3 tmpvar_522;
        tmpvar_522.x = 0.0;
        float tmpvar_523;
        tmpvar_523 = -(time);
        tmpvar_522.y = (tmpvar_523 * 0.05);
        tmpvar_522.z = (tmpvar_523 * 0.01);
        vec3 uv_524;
        uv_524 = (tmpvar_511 + tmpvar_522);
        vec3 f_525;
        uv_524 = (uv_524 * 64.0);
        vec3 tmpvar_526;
        tmpvar_526 = (floor((vec3(mod (uv_524, 64.0)))) * vec3(1.0, 100.0, 1000.0));
        vec3 tmpvar_527;
        tmpvar_527 = (floor((vec3(mod (
          (uv_524 + 1.0)
        , 64.0)))) * vec3(1.0, 100.0, 1000.0));
        vec3 tmpvar_528;
        tmpvar_528 = fract(uv_524);
        f_525 = ((tmpvar_528 * tmpvar_528) * (3.0 - (2.0 * tmpvar_528)));
        vec4 tmpvar_529;
        tmpvar_529.x = ((tmpvar_526.x + tmpvar_526.y) + tmpvar_526.z);
        tmpvar_529.y = ((tmpvar_527.x + tmpvar_526.y) + tmpvar_526.z);
        tmpvar_529.z = ((tmpvar_526.x + tmpvar_527.y) + tmpvar_526.z);
        tmpvar_529.w = ((tmpvar_527.x + tmpvar_527.y) + tmpvar_526.z);
        vec4 tmpvar_530;
        tmpvar_530 = fract((sin(
          (tmpvar_529 * 0.1)
        ) * 1000.0));
        vec4 tmpvar_531;
        tmpvar_531 = fract((sin(
          (((tmpvar_529 + tmpvar_527.z) - tmpvar_526.z) * 0.1)
        ) * 1000.0));
        color1_505 = (color1_505 + (0.0375 * (
          (mix (mix (mix (tmpvar_530.x, tmpvar_530.y, f_525.x), mix (tmpvar_530.z, tmpvar_530.w, f_525.x), f_525.y), mix (mix (tmpvar_531.x, tmpvar_531.y, f_525.x), mix (tmpvar_531.z, tmpvar_531.w, f_525.x), f_525.y), f_525.z) * 2.0)
         - 1.0)));
        vec3 tmpvar_532;
        tmpvar_532.x = 0.0;
        tmpvar_532.y = (tmpvar_523 * 0.05);
        tmpvar_532.z = (tmpvar_523 * 0.01);
        vec3 uv_533;
        uv_533 = (tmpvar_511 + tmpvar_532);
        vec3 f_534;
        uv_533 = (uv_533 * 128.0);
        vec3 tmpvar_535;
        tmpvar_535 = (floor((vec3(mod (uv_533, 128.0)))) * vec3(1.0, 100.0, 1000.0));
        vec3 tmpvar_536;
        tmpvar_536 = (floor((vec3(mod (
          (uv_533 + 1.0)
        , 128.0)))) * vec3(1.0, 100.0, 1000.0));
        vec3 tmpvar_537;
        tmpvar_537 = fract(uv_533);
        f_534 = ((tmpvar_537 * tmpvar_537) * (3.0 - (2.0 * tmpvar_537)));
        vec4 tmpvar_538;
        tmpvar_538.x = ((tmpvar_535.x + tmpvar_535.y) + tmpvar_535.z);
        tmpvar_538.y = ((tmpvar_536.x + tmpvar_535.y) + tmpvar_535.z);
        tmpvar_538.z = ((tmpvar_535.x + tmpvar_536.y) + tmpvar_535.z);
        tmpvar_538.w = ((tmpvar_536.x + tmpvar_536.y) + tmpvar_535.z);
        vec4 tmpvar_539;
        tmpvar_539 = fract((sin(
          (tmpvar_538 * 0.1)
        ) * 1000.0));
        vec4 tmpvar_540;
        tmpvar_540 = fract((sin(
          (((tmpvar_538 + tmpvar_536.z) - tmpvar_535.z) * 0.1)
        ) * 1000.0));
        color1_505 = (color1_505 + (0.01875 * (
          (mix (mix (mix (tmpvar_539.x, tmpvar_539.y, f_534.x), mix (tmpvar_539.z, tmpvar_539.w, f_534.x), f_534.y), mix (mix (tmpvar_540.x, tmpvar_540.y, f_534.x), mix (tmpvar_540.z, tmpvar_540.w, f_534.x), f_534.y), f_534.z) * 2.0)
         - 1.0)));
      };
      color1_505 = (color1_505 * 0.6);
      vec4 tmpvar_541;
      tmpvar_541.w = 1.0;
      tmpvar_541.xyz = (vec3(0.7, 0.3556, 0.364) * vec3(color1_505));
      col_492 = ((tmpvar_541.xyz * 1.4) * tmpvar_500);
      vec4 tmpvar_542;
      tmpvar_542.xyz = col_492;
      tmpvar_542.w = tmpvar_500;
      cxu_315 = tmpvar_542;
    } else {
      cxu_315 = vec4(0.0, 0.0, 0.0, 0.0);
    };
    float tmpvar_543;
    float tmpvar_544;
    tmpvar_544 = (zoom * 5000.0);
    tmpvar_543 = (tmpvar_544 / 2.1251);
    vec2 tmpvar_545;
    tmpvar_545 = (((tmpvar_2 - 
      (planetpos1 * zoom)
    ) - shippos) - (tmpvar_544 / 2.0));
    float tmpvar_546;
    tmpvar_546 = sqrt(((
      (-(tmpvar_543) * tmpvar_543)
     + 
      (tmpvar_545.x * tmpvar_545.x)
    ) + (tmpvar_545.y * tmpvar_545.y)));
    float tmpvar_547;
    tmpvar_547 = max (0.0, ((
      ((tmpvar_543 * 0.12) / tmpvar_546)
     - 0.574) + 0.3));
    vec3 tmpvar_548;
    tmpvar_548.xy = tmpvar_545;
    tmpvar_548.z = tmpvar_546;
    float tmpvar_549;
    tmpvar_549 = max (0.0, normalize(tmpvar_548).z);
    vec4 tmpvar_550;
    tmpvar_550.w = 1.0;
    tmpvar_550.x = (tmpvar_547 * tmpvar_549);
    tmpvar_550.y = (tmpvar_547 * tmpvar_549);
    tmpvar_550.z = ((10.0 * tmpvar_547) * tmpvar_549);
    float tmpvar_551;
    tmpvar_551 = clamp (((tmpvar_321 - 1.2) / -0.2), 0.0, 1.0);
    tmpvar_311 = (((
      (max (vec4(0.0, 0.0, 0.0, 0.0), ((c_317.y + 
        ((tmpvar_322 - c_317.y) * c_317.x)
      ) * clamp (
        (9.0 - ((tmpvar_321 * tmpvar_321) * 9.0))
      , 0.0, 1.0))) * (vec4((1.0 - (1.0 - tmpvar_490))) + (cxu_315 * (1.0 - tmpvar_490))))
     + 
      (tmpvar_550 * (1.0 - clamp ((9.0 - 
        ((tmpvar_321 * tmpvar_321) * 9.0)
      ), 0.0, 1.0)))
    ) + (buff_11 * 
      (1.0 - clamp ((9.0 - (
        (tmpvar_321 * tmpvar_321)
       * 9.0)), 0.0, 1.0))
    )) + ((cxu_315 * 
      (tmpvar_551 * (tmpvar_551 * (3.0 - (2.0 * tmpvar_551))))
    ) * (1.0 - tmpvar_490)));
  } else {
    tmpvar_311 = buff_11;
  };
  buff_11 = tmpvar_311;
  vec4 tmpvar_552;
  vec2 tmpvar_553;
  tmpvar_553 = ((tmpvar_2 - (planetpos2 * zoom)) - shippos);
  vec2 x_554;
  float tmpvar_555;
  tmpvar_555 = (7500.0 * zoom);
  x_554 = (tmpvar_553 - tmpvar_555);
  float tmpvar_556;
  tmpvar_556 = float((sqrt(
    dot (x_554, x_554)
  ) >= tmpvar_555));
  if (((1.0 - tmpvar_556) > 0.0)) {
    vec4 tmpc_557;
    float bval_558;
    vec4 c_559;
    vec2 p_560;
    vec2 tmpvar_561;
    tmpvar_561 = vec2((15000.0 * zoom));
    vec2 tmpvar_562;
    tmpvar_562 = (((tmpvar_553 * 2.0) - tmpvar_561) / tmpvar_561.y);
    float tmpvar_563;
    tmpvar_563 = sqrt(dot (tmpvar_562, tmpvar_562));
    vec4 tmpvar_564;
    tmpvar_564 = (vec4(0.53, 0.952, 1.8, 1.0) + tmpvar_562.y);
    c_559 = tmpvar_564;
    p_560 = (((tmpvar_562 * 
      (sign(tmpvar_563) * (1.570796 - (sqrt(
        (1.0 - abs(tmpvar_563))
      ) * (1.570796 + 
        (abs(tmpvar_563) * (-0.2146018 + (abs(tmpvar_563) * (0.08656672 + 
          (abs(tmpvar_563) * -0.03102955)
        ))))
      ))))
    ) / tmpvar_563) - 5.0);
    p_560 = (p_560 * p_560.y);
    bval_558 = 0.01951;
    if (best) {
      bval_558 = 0.1;
      vec2 p_565;
      p_565 = (p_560 * 0.1);
      vec4 k_566;
      mat4 m_567;
      mat4 tmpvar_568;
      tmpvar_568[0].x = -1.0;
      tmpvar_568[0].y = 2.0;
      tmpvar_568[0].z = -2.0;
      tmpvar_568[0].w = 0.0;
      tmpvar_568[1].x = -2.0;
      tmpvar_568[1].y = 1.0;
      tmpvar_568[1].z = 3.0;
      tmpvar_568[1].w = 0.0;
      tmpvar_568[2].x = 3.0;
      tmpvar_568[2].y = 2.0;
      tmpvar_568[2].z = 1.0;
      tmpvar_568[2].w = 0.0;
      tmpvar_568[3].xy = (800.2 * p_565);
      tmpvar_568[3].zw = (vec2(time) + 10000.0);
      mat4 tmpvar_569;
      tmpvar_569[0].x = 1.0;
      tmpvar_569[0].y = 0.0;
      tmpvar_569[0].z = 0.0;
      tmpvar_569[0].w = 0.0;
      tmpvar_569[1].x = 0.0;
      tmpvar_569[1].y = 1.0;
      tmpvar_569[1].z = 0.0;
      tmpvar_569[1].w = 0.0;
      tmpvar_569[2].x = -1.244444;
      tmpvar_569[2].y = 0.0;
      tmpvar_569[2].z = 0.5555556;
      tmpvar_569[2].w = 0.0;
      tmpvar_569[3].x = 0.0;
      tmpvar_569[3].y = 0.0;
      tmpvar_569[3].z = 0.0;
      tmpvar_569[3].w = 1.0;
      m_567 = (tmpvar_568 * tmpvar_569);
      mat4 tmpvar_570;
      tmpvar_570 = (m_567 * 0.4);
      m_567 = tmpvar_570;
      vec4 tmpvar_571;
      tmpvar_571 = (tmpvar_570[3] * tmpvar_570);
      m_567[3] = tmpvar_571;
      vec4 x_572;
      x_572 = (fract(tmpvar_571) - 0.5);
      mat4 tmpvar_573;
      tmpvar_573 = (m_567 * -0.6);
      m_567 = tmpvar_573;
      vec4 tmpvar_574;
      tmpvar_574 = (tmpvar_573[3] * tmpvar_573);
      m_567[3] = tmpvar_574;
      vec4 x_575;
      x_575 = (fract(tmpvar_574) - 0.5);
      mat4 tmpvar_576;
      tmpvar_576 = (m_567 * -1.6);
      m_567 = tmpvar_576;
      vec4 tmpvar_577;
      tmpvar_577 = (tmpvar_576[3] * tmpvar_576);
      m_567[3] = tmpvar_577;
      vec4 x_578;
      x_578 = (fract(tmpvar_577) - 0.5);
      k_566 = (min (min (
        sqrt(dot (x_572, x_572))
      , 
        sqrt(dot (x_575, x_575))
      ), sqrt(
        dot (x_578, x_578)
      )) / m_567[2]);
      vec2 p_579;
      float r_580;
      p_579.y = (p_565.y - 0.8505124);
      p_579.x = (p_565.x - 2.005062);
      float tmpvar_581;
      float tmpvar_582;
      tmpvar_582 = (min (abs(
        (p_579.y / p_579.x)
      ), 1.0) / max (abs(
        (p_579.y / p_579.x)
      ), 1.0));
      float tmpvar_583;
      tmpvar_583 = (tmpvar_582 * tmpvar_582);
      tmpvar_583 = (((
        ((((
          ((((-0.01213232 * tmpvar_583) + 0.05368138) * tmpvar_583) - 0.1173503)
         * tmpvar_583) + 0.1938925) * tmpvar_583) - 0.3326756)
       * tmpvar_583) + 0.9999793) * tmpvar_582);
      tmpvar_583 = (tmpvar_583 + (float(
        (abs((p_579.y / p_579.x)) > 1.0)
      ) * (
        (tmpvar_583 * -2.0)
       + 1.570796)));
      tmpvar_581 = (tmpvar_583 * sign((p_579.y / p_579.x)));
      if ((abs(p_579.x) > (1e-08 * abs(p_579.y)))) {
        if ((p_579.x < 0.0)) {
          if ((p_579.y >= 0.0)) {
            tmpvar_581 += 3.141593;
          } else {
            tmpvar_581 = (tmpvar_581 - 3.141593);
          };
        };
      } else {
        tmpvar_581 = (sign(p_579.y) * 1.570796);
      };
      float tmpvar_584;
      tmpvar_584 = clamp (((tmpvar_581 - 0.8471932) / 0.2), 0.0, 1.0);
      float tmpvar_585;
      tmpvar_585 = clamp (((tmpvar_581 - 2.094386) / 0.2), 0.0, 1.0);
      r_580 = (sin((3.14158 * 
        ((tmpvar_581 - 1.047193) / 1.047193)
      )) * 0.2);
      r_580 = (r_580 + (abs(
        sin(((r_580 * 10.0) + (time * 0.1)))
      ) * 0.2));
      r_580 += 0.1;
      float tmpvar_586;
      tmpvar_586 = clamp (((
        sqrt(dot (p_579, p_579))
       - 0.4) / 0.2), 0.0, 1.0);
      float tmpvar_587;
      tmpvar_587 = clamp (((
        sqrt(dot (p_579, p_579))
       - 0.8) / (
        ((abs(sin(
          ((r_580 * 10.0) + time)
        )) * 0.2) + 2.0)
       - 0.8)), 0.0, 1.0);
      r_580 = (r_580 * ((tmpvar_586 * 
        (tmpvar_586 * (3.0 - (2.0 * tmpvar_586)))
      ) - (tmpvar_587 * 
        (tmpvar_587 * (3.0 - (2.0 * tmpvar_587)))
      )));
      vec2 xy_588;
      xy_588 = (p_579 + (time * 0.5));
      vec2 uv_589;
      vec2 tmpvar_590;
      tmpvar_590 = floor(xy_588);
      vec2 tmpvar_591;
      tmpvar_591 = (xy_588 - tmpvar_590);
      uv_589 = ((tmpvar_591 * tmpvar_591) * (3.0 - (2.0 * tmpvar_591)));
      float tmpvar_592;
      tmpvar_592 = fract((cos(
        dot (tmpvar_590, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_593;
      tmpvar_593.x = (tmpvar_590.x + 1.0);
      tmpvar_593.y = tmpvar_590.y;
      float tmpvar_594;
      tmpvar_594 = fract((cos(
        dot (tmpvar_593, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_595;
      tmpvar_595.x = tmpvar_590.x;
      tmpvar_595.y = (tmpvar_590.y + 1.0);
      float tmpvar_596;
      tmpvar_596 = fract((cos(
        dot (tmpvar_595, vec2(21.9898, 78.233))
      ) * 43758.55));
      r_580 = (r_580 * abs((
        ((tmpvar_592 + ((tmpvar_594 - tmpvar_592) * uv_589.x)) + ((tmpvar_596 - tmpvar_592) * uv_589.y))
       + 
        ((((
          (tmpvar_592 - tmpvar_594)
         - tmpvar_596) + fract(
          (cos(dot ((tmpvar_590 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_589.x) * uv_589.y)
      )));
      r_580 = (r_580 * 15.0);
      vec4 tmpvar_597;
      tmpvar_597.w = 1.0;
      tmpvar_597.xyz = ((vec3(-1.29, -0.5, -0.1) * r_580) * ((tmpvar_584 * 
        (tmpvar_584 * (3.0 - (2.0 * tmpvar_584)))
      ) - (tmpvar_585 * 
        (tmpvar_585 * (3.0 - (2.0 * tmpvar_585)))
      )));
      float c_598;
      vec2 tmpvar_599;
      tmpvar_599 = (p_565 - vec2(0.5, 0.5));
      c_598 = ((cos(
        ((p_565.x * 80.0) - (time / 2.0))
      ) * 0.5) + 0.5);
      vec4 tmpvar_600;
      tmpvar_600.x = c_598;
      tmpvar_600.y = c_598;
      tmpvar_600.z = c_598;
      tmpvar_600.w = min (clamp ((1.0 - 
        sqrt(dot (tmpvar_599, tmpvar_599))
      ), 0.0, 1.0), c_598);
      c_559 = (tmpvar_564 + ((k_566 + tmpvar_597) + mix (vec4(-0.25, 0.0, 0.0, 1.0), tmpvar_600, tmpvar_600.w)));
      p_560 = (p_560 * 0.4);
      c_559 = (c_559 * 0.6);
      vec2 p_601;
      p_601 = (p_560 * 0.1);
      vec4 k_602;
      mat4 m_603;
      mat4 tmpvar_604;
      tmpvar_604[0].x = -1.0;
      tmpvar_604[0].y = 2.0;
      tmpvar_604[0].z = -2.0;
      tmpvar_604[0].w = 0.0;
      tmpvar_604[1].x = -2.0;
      tmpvar_604[1].y = 1.0;
      tmpvar_604[1].z = 3.0;
      tmpvar_604[1].w = 0.0;
      tmpvar_604[2].x = 3.0;
      tmpvar_604[2].y = 2.0;
      tmpvar_604[2].z = 1.0;
      tmpvar_604[2].w = 0.0;
      tmpvar_604[3].xy = (800.2 * p_601);
      tmpvar_604[3].zw = (vec2(time) + 10000.0);
      mat4 tmpvar_605;
      tmpvar_605[0].x = 1.0;
      tmpvar_605[0].y = 0.0;
      tmpvar_605[0].z = 0.0;
      tmpvar_605[0].w = 0.0;
      tmpvar_605[1].x = 0.0;
      tmpvar_605[1].y = 1.0;
      tmpvar_605[1].z = 0.0;
      tmpvar_605[1].w = 0.0;
      tmpvar_605[2].x = -1.244444;
      tmpvar_605[2].y = 0.0;
      tmpvar_605[2].z = 0.5555556;
      tmpvar_605[2].w = 0.0;
      tmpvar_605[3].x = 0.0;
      tmpvar_605[3].y = 0.0;
      tmpvar_605[3].z = 0.0;
      tmpvar_605[3].w = 1.0;
      m_603 = (tmpvar_604 * tmpvar_605);
      mat4 tmpvar_606;
      tmpvar_606 = (m_603 * 0.4);
      m_603 = tmpvar_606;
      vec4 tmpvar_607;
      tmpvar_607 = (tmpvar_606[3] * tmpvar_606);
      m_603[3] = tmpvar_607;
      vec4 x_608;
      x_608 = (fract(tmpvar_607) - 0.5);
      mat4 tmpvar_609;
      tmpvar_609 = (m_603 * -0.6);
      m_603 = tmpvar_609;
      vec4 tmpvar_610;
      tmpvar_610 = (tmpvar_609[3] * tmpvar_609);
      m_603[3] = tmpvar_610;
      vec4 x_611;
      x_611 = (fract(tmpvar_610) - 0.5);
      mat4 tmpvar_612;
      tmpvar_612 = (m_603 * -1.6);
      m_603 = tmpvar_612;
      vec4 tmpvar_613;
      tmpvar_613 = (tmpvar_612[3] * tmpvar_612);
      m_603[3] = tmpvar_613;
      vec4 x_614;
      x_614 = (fract(tmpvar_613) - 0.5);
      k_602 = (min (min (
        sqrt(dot (x_608, x_608))
      , 
        sqrt(dot (x_611, x_611))
      ), sqrt(
        dot (x_614, x_614)
      )) / m_603[2]);
      vec2 p_615;
      float r_616;
      p_615.y = (p_601.y - 0.8505124);
      p_615.x = (p_601.x - 2.005062);
      float tmpvar_617;
      float tmpvar_618;
      tmpvar_618 = (min (abs(
        (p_615.y / p_615.x)
      ), 1.0) / max (abs(
        (p_615.y / p_615.x)
      ), 1.0));
      float tmpvar_619;
      tmpvar_619 = (tmpvar_618 * tmpvar_618);
      tmpvar_619 = (((
        ((((
          ((((-0.01213232 * tmpvar_619) + 0.05368138) * tmpvar_619) - 0.1173503)
         * tmpvar_619) + 0.1938925) * tmpvar_619) - 0.3326756)
       * tmpvar_619) + 0.9999793) * tmpvar_618);
      tmpvar_619 = (tmpvar_619 + (float(
        (abs((p_615.y / p_615.x)) > 1.0)
      ) * (
        (tmpvar_619 * -2.0)
       + 1.570796)));
      tmpvar_617 = (tmpvar_619 * sign((p_615.y / p_615.x)));
      if ((abs(p_615.x) > (1e-08 * abs(p_615.y)))) {
        if ((p_615.x < 0.0)) {
          if ((p_615.y >= 0.0)) {
            tmpvar_617 += 3.141593;
          } else {
            tmpvar_617 = (tmpvar_617 - 3.141593);
          };
        };
      } else {
        tmpvar_617 = (sign(p_615.y) * 1.570796);
      };
      float tmpvar_620;
      tmpvar_620 = clamp (((tmpvar_617 - 0.8471932) / 0.2), 0.0, 1.0);
      float tmpvar_621;
      tmpvar_621 = clamp (((tmpvar_617 - 2.094386) / 0.2), 0.0, 1.0);
      r_616 = (sin((3.14158 * 
        ((tmpvar_617 - 1.047193) / 1.047193)
      )) * 0.2);
      r_616 = (r_616 + (abs(
        sin(((r_616 * 10.0) + (time * 0.1)))
      ) * 0.2));
      r_616 += 0.1;
      float tmpvar_622;
      tmpvar_622 = clamp (((
        sqrt(dot (p_615, p_615))
       - 0.4) / 0.2), 0.0, 1.0);
      float tmpvar_623;
      tmpvar_623 = clamp (((
        sqrt(dot (p_615, p_615))
       - 0.8) / (
        ((abs(sin(
          ((r_616 * 10.0) + time)
        )) * 0.2) + 2.0)
       - 0.8)), 0.0, 1.0);
      r_616 = (r_616 * ((tmpvar_622 * 
        (tmpvar_622 * (3.0 - (2.0 * tmpvar_622)))
      ) - (tmpvar_623 * 
        (tmpvar_623 * (3.0 - (2.0 * tmpvar_623)))
      )));
      vec2 xy_624;
      xy_624 = (p_615 + (time * 0.5));
      vec2 uv_625;
      vec2 tmpvar_626;
      tmpvar_626 = floor(xy_624);
      vec2 tmpvar_627;
      tmpvar_627 = (xy_624 - tmpvar_626);
      uv_625 = ((tmpvar_627 * tmpvar_627) * (3.0 - (2.0 * tmpvar_627)));
      float tmpvar_628;
      tmpvar_628 = fract((cos(
        dot (tmpvar_626, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_629;
      tmpvar_629.x = (tmpvar_626.x + 1.0);
      tmpvar_629.y = tmpvar_626.y;
      float tmpvar_630;
      tmpvar_630 = fract((cos(
        dot (tmpvar_629, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_631;
      tmpvar_631.x = tmpvar_626.x;
      tmpvar_631.y = (tmpvar_626.y + 1.0);
      float tmpvar_632;
      tmpvar_632 = fract((cos(
        dot (tmpvar_631, vec2(21.9898, 78.233))
      ) * 43758.55));
      r_616 = (r_616 * abs((
        ((tmpvar_628 + ((tmpvar_630 - tmpvar_628) * uv_625.x)) + ((tmpvar_632 - tmpvar_628) * uv_625.y))
       + 
        ((((
          (tmpvar_628 - tmpvar_630)
         - tmpvar_632) + fract(
          (cos(dot ((tmpvar_626 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_625.x) * uv_625.y)
      )));
      r_616 = (r_616 * 15.0);
      vec4 tmpvar_633;
      tmpvar_633.w = 1.0;
      tmpvar_633.xyz = ((vec3(-1.29, -0.5, -0.1) * r_616) * ((tmpvar_620 * 
        (tmpvar_620 * (3.0 - (2.0 * tmpvar_620)))
      ) - (tmpvar_621 * 
        (tmpvar_621 * (3.0 - (2.0 * tmpvar_621)))
      )));
      float c_634;
      vec2 tmpvar_635;
      tmpvar_635 = (p_601 - vec2(0.5, 0.5));
      c_634 = ((cos(
        ((p_601.x * 80.0) - (time / 2.0))
      ) * 0.5) + 0.5);
      vec4 tmpvar_636;
      tmpvar_636.x = c_634;
      tmpvar_636.y = c_634;
      tmpvar_636.z = c_634;
      tmpvar_636.w = min (clamp ((1.0 - 
        sqrt(dot (tmpvar_635, tmpvar_635))
      ), 0.0, 1.0), c_634);
      c_559 = (c_559 + ((k_602 + tmpvar_633) + mix (vec4(-0.25, 0.0, 0.0, 1.0), tmpvar_636, tmpvar_636.w)));
      p_560 = (p_560 * 0.4);
      c_559 = (c_559 * 0.6);
      vec2 p_637;
      p_637 = (p_560 * 0.1);
      vec4 k_638;
      mat4 m_639;
      mat4 tmpvar_640;
      tmpvar_640[0].x = -1.0;
      tmpvar_640[0].y = 2.0;
      tmpvar_640[0].z = -2.0;
      tmpvar_640[0].w = 0.0;
      tmpvar_640[1].x = -2.0;
      tmpvar_640[1].y = 1.0;
      tmpvar_640[1].z = 3.0;
      tmpvar_640[1].w = 0.0;
      tmpvar_640[2].x = 3.0;
      tmpvar_640[2].y = 2.0;
      tmpvar_640[2].z = 1.0;
      tmpvar_640[2].w = 0.0;
      tmpvar_640[3].xy = (800.2 * p_637);
      tmpvar_640[3].zw = (vec2(time) + 10000.0);
      mat4 tmpvar_641;
      tmpvar_641[0].x = 1.0;
      tmpvar_641[0].y = 0.0;
      tmpvar_641[0].z = 0.0;
      tmpvar_641[0].w = 0.0;
      tmpvar_641[1].x = 0.0;
      tmpvar_641[1].y = 1.0;
      tmpvar_641[1].z = 0.0;
      tmpvar_641[1].w = 0.0;
      tmpvar_641[2].x = -1.244444;
      tmpvar_641[2].y = 0.0;
      tmpvar_641[2].z = 0.5555556;
      tmpvar_641[2].w = 0.0;
      tmpvar_641[3].x = 0.0;
      tmpvar_641[3].y = 0.0;
      tmpvar_641[3].z = 0.0;
      tmpvar_641[3].w = 1.0;
      m_639 = (tmpvar_640 * tmpvar_641);
      mat4 tmpvar_642;
      tmpvar_642 = (m_639 * 0.4);
      m_639 = tmpvar_642;
      vec4 tmpvar_643;
      tmpvar_643 = (tmpvar_642[3] * tmpvar_642);
      m_639[3] = tmpvar_643;
      vec4 x_644;
      x_644 = (fract(tmpvar_643) - 0.5);
      mat4 tmpvar_645;
      tmpvar_645 = (m_639 * -0.6);
      m_639 = tmpvar_645;
      vec4 tmpvar_646;
      tmpvar_646 = (tmpvar_645[3] * tmpvar_645);
      m_639[3] = tmpvar_646;
      vec4 x_647;
      x_647 = (fract(tmpvar_646) - 0.5);
      mat4 tmpvar_648;
      tmpvar_648 = (m_639 * -1.6);
      m_639 = tmpvar_648;
      vec4 tmpvar_649;
      tmpvar_649 = (tmpvar_648[3] * tmpvar_648);
      m_639[3] = tmpvar_649;
      vec4 x_650;
      x_650 = (fract(tmpvar_649) - 0.5);
      k_638 = (min (min (
        sqrt(dot (x_644, x_644))
      , 
        sqrt(dot (x_647, x_647))
      ), sqrt(
        dot (x_650, x_650)
      )) / m_639[2]);
      vec2 p_651;
      float r_652;
      p_651.y = (p_637.y - 0.8505124);
      p_651.x = (p_637.x - 2.005062);
      float tmpvar_653;
      float tmpvar_654;
      tmpvar_654 = (min (abs(
        (p_651.y / p_651.x)
      ), 1.0) / max (abs(
        (p_651.y / p_651.x)
      ), 1.0));
      float tmpvar_655;
      tmpvar_655 = (tmpvar_654 * tmpvar_654);
      tmpvar_655 = (((
        ((((
          ((((-0.01213232 * tmpvar_655) + 0.05368138) * tmpvar_655) - 0.1173503)
         * tmpvar_655) + 0.1938925) * tmpvar_655) - 0.3326756)
       * tmpvar_655) + 0.9999793) * tmpvar_654);
      tmpvar_655 = (tmpvar_655 + (float(
        (abs((p_651.y / p_651.x)) > 1.0)
      ) * (
        (tmpvar_655 * -2.0)
       + 1.570796)));
      tmpvar_653 = (tmpvar_655 * sign((p_651.y / p_651.x)));
      if ((abs(p_651.x) > (1e-08 * abs(p_651.y)))) {
        if ((p_651.x < 0.0)) {
          if ((p_651.y >= 0.0)) {
            tmpvar_653 += 3.141593;
          } else {
            tmpvar_653 = (tmpvar_653 - 3.141593);
          };
        };
      } else {
        tmpvar_653 = (sign(p_651.y) * 1.570796);
      };
      float tmpvar_656;
      tmpvar_656 = clamp (((tmpvar_653 - 0.8471932) / 0.2), 0.0, 1.0);
      float tmpvar_657;
      tmpvar_657 = clamp (((tmpvar_653 - 2.094386) / 0.2), 0.0, 1.0);
      r_652 = (sin((3.14158 * 
        ((tmpvar_653 - 1.047193) / 1.047193)
      )) * 0.2);
      r_652 = (r_652 + (abs(
        sin(((r_652 * 10.0) + (time * 0.1)))
      ) * 0.2));
      r_652 += 0.1;
      float tmpvar_658;
      tmpvar_658 = clamp (((
        sqrt(dot (p_651, p_651))
       - 0.4) / 0.2), 0.0, 1.0);
      float tmpvar_659;
      tmpvar_659 = clamp (((
        sqrt(dot (p_651, p_651))
       - 0.8) / (
        ((abs(sin(
          ((r_652 * 10.0) + time)
        )) * 0.2) + 2.0)
       - 0.8)), 0.0, 1.0);
      r_652 = (r_652 * ((tmpvar_658 * 
        (tmpvar_658 * (3.0 - (2.0 * tmpvar_658)))
      ) - (tmpvar_659 * 
        (tmpvar_659 * (3.0 - (2.0 * tmpvar_659)))
      )));
      vec2 xy_660;
      xy_660 = (p_651 + (time * 0.5));
      vec2 uv_661;
      vec2 tmpvar_662;
      tmpvar_662 = floor(xy_660);
      vec2 tmpvar_663;
      tmpvar_663 = (xy_660 - tmpvar_662);
      uv_661 = ((tmpvar_663 * tmpvar_663) * (3.0 - (2.0 * tmpvar_663)));
      float tmpvar_664;
      tmpvar_664 = fract((cos(
        dot (tmpvar_662, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_665;
      tmpvar_665.x = (tmpvar_662.x + 1.0);
      tmpvar_665.y = tmpvar_662.y;
      float tmpvar_666;
      tmpvar_666 = fract((cos(
        dot (tmpvar_665, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_667;
      tmpvar_667.x = tmpvar_662.x;
      tmpvar_667.y = (tmpvar_662.y + 1.0);
      float tmpvar_668;
      tmpvar_668 = fract((cos(
        dot (tmpvar_667, vec2(21.9898, 78.233))
      ) * 43758.55));
      r_652 = (r_652 * abs((
        ((tmpvar_664 + ((tmpvar_666 - tmpvar_664) * uv_661.x)) + ((tmpvar_668 - tmpvar_664) * uv_661.y))
       + 
        ((((
          (tmpvar_664 - tmpvar_666)
         - tmpvar_668) + fract(
          (cos(dot ((tmpvar_662 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_661.x) * uv_661.y)
      )));
      r_652 = (r_652 * 15.0);
      vec4 tmpvar_669;
      tmpvar_669.w = 1.0;
      tmpvar_669.xyz = ((vec3(-1.29, -0.5, -0.1) * r_652) * ((tmpvar_656 * 
        (tmpvar_656 * (3.0 - (2.0 * tmpvar_656)))
      ) - (tmpvar_657 * 
        (tmpvar_657 * (3.0 - (2.0 * tmpvar_657)))
      )));
      float c_670;
      vec2 tmpvar_671;
      tmpvar_671 = (p_637 - vec2(0.5, 0.5));
      c_670 = ((cos(
        ((p_637.x * 80.0) - (time / 2.0))
      ) * 0.5) + 0.5);
      vec4 tmpvar_672;
      tmpvar_672.x = c_670;
      tmpvar_672.y = c_670;
      tmpvar_672.z = c_670;
      tmpvar_672.w = min (clamp ((1.0 - 
        sqrt(dot (tmpvar_671, tmpvar_671))
      ), 0.0, 1.0), c_670);
      c_559 = (c_559 + ((k_638 + tmpvar_669) + mix (vec4(-0.25, 0.0, 0.0, 1.0), tmpvar_672, tmpvar_672.w)));
      p_560 = (p_560 * 0.4);
      c_559 = (c_559 * 0.6);
    };
    vec2 p_673;
    p_673 = (p_560 * bval_558);
    vec4 k_674;
    mat4 m_675;
    mat4 tmpvar_676;
    tmpvar_676[0].x = -1.0;
    tmpvar_676[0].y = 2.0;
    tmpvar_676[0].z = -2.0;
    tmpvar_676[0].w = 0.0;
    tmpvar_676[1].x = -2.0;
    tmpvar_676[1].y = 1.0;
    tmpvar_676[1].z = 3.0;
    tmpvar_676[1].w = 0.0;
    tmpvar_676[2].x = 3.0;
    tmpvar_676[2].y = 2.0;
    tmpvar_676[2].z = 1.0;
    tmpvar_676[2].w = 0.0;
    tmpvar_676[3].xy = (800.2 * p_673);
    tmpvar_676[3].zw = (vec2(time) + 10000.0);
    mat4 tmpvar_677;
    tmpvar_677[0].x = 1.0;
    tmpvar_677[0].y = 0.0;
    tmpvar_677[0].z = 0.0;
    tmpvar_677[0].w = 0.0;
    tmpvar_677[1].x = 0.0;
    tmpvar_677[1].y = 1.0;
    tmpvar_677[1].z = 0.0;
    tmpvar_677[1].w = 0.0;
    tmpvar_677[2].x = -1.244444;
    tmpvar_677[2].y = 0.0;
    tmpvar_677[2].z = 0.5555556;
    tmpvar_677[2].w = 0.0;
    tmpvar_677[3].x = 0.0;
    tmpvar_677[3].y = 0.0;
    tmpvar_677[3].z = 0.0;
    tmpvar_677[3].w = 1.0;
    m_675 = (tmpvar_676 * tmpvar_677);
    mat4 tmpvar_678;
    tmpvar_678 = (m_675 * 0.4);
    m_675 = tmpvar_678;
    vec4 tmpvar_679;
    tmpvar_679 = (tmpvar_678[3] * tmpvar_678);
    m_675[3] = tmpvar_679;
    vec4 x_680;
    x_680 = (fract(tmpvar_679) - 0.5);
    mat4 tmpvar_681;
    tmpvar_681 = (m_675 * -0.6);
    m_675 = tmpvar_681;
    vec4 tmpvar_682;
    tmpvar_682 = (tmpvar_681[3] * tmpvar_681);
    m_675[3] = tmpvar_682;
    vec4 x_683;
    x_683 = (fract(tmpvar_682) - 0.5);
    mat4 tmpvar_684;
    tmpvar_684 = (m_675 * -1.6);
    m_675 = tmpvar_684;
    vec4 tmpvar_685;
    tmpvar_685 = (tmpvar_684[3] * tmpvar_684);
    m_675[3] = tmpvar_685;
    vec4 x_686;
    x_686 = (fract(tmpvar_685) - 0.5);
    k_674 = (min (min (
      sqrt(dot (x_680, x_680))
    , 
      sqrt(dot (x_683, x_683))
    ), sqrt(
      dot (x_686, x_686)
    )) / m_675[2]);
    vec2 p_687;
    float r_688;
    p_687.y = (p_673.y - 0.8505124);
    p_687.x = (p_673.x - 2.005062);
    float tmpvar_689;
    float tmpvar_690;
    tmpvar_690 = (min (abs(
      (p_687.y / p_687.x)
    ), 1.0) / max (abs(
      (p_687.y / p_687.x)
    ), 1.0));
    float tmpvar_691;
    tmpvar_691 = (tmpvar_690 * tmpvar_690);
    tmpvar_691 = (((
      ((((
        ((((-0.01213232 * tmpvar_691) + 0.05368138) * tmpvar_691) - 0.1173503)
       * tmpvar_691) + 0.1938925) * tmpvar_691) - 0.3326756)
     * tmpvar_691) + 0.9999793) * tmpvar_690);
    tmpvar_691 = (tmpvar_691 + (float(
      (abs((p_687.y / p_687.x)) > 1.0)
    ) * (
      (tmpvar_691 * -2.0)
     + 1.570796)));
    tmpvar_689 = (tmpvar_691 * sign((p_687.y / p_687.x)));
    if ((abs(p_687.x) > (1e-08 * abs(p_687.y)))) {
      if ((p_687.x < 0.0)) {
        if ((p_687.y >= 0.0)) {
          tmpvar_689 += 3.141593;
        } else {
          tmpvar_689 = (tmpvar_689 - 3.141593);
        };
      };
    } else {
      tmpvar_689 = (sign(p_687.y) * 1.570796);
    };
    float tmpvar_692;
    tmpvar_692 = clamp (((tmpvar_689 - 0.8471932) / 0.2), 0.0, 1.0);
    float tmpvar_693;
    tmpvar_693 = clamp (((tmpvar_689 - 2.094386) / 0.2), 0.0, 1.0);
    r_688 = (sin((3.14158 * 
      ((tmpvar_689 - 1.047193) / 1.047193)
    )) * 0.2);
    r_688 = (r_688 + (abs(
      sin(((r_688 * 10.0) + (time * 0.1)))
    ) * 0.2));
    r_688 += 0.1;
    float tmpvar_694;
    tmpvar_694 = clamp (((
      sqrt(dot (p_687, p_687))
     - 0.4) / 0.2), 0.0, 1.0);
    float tmpvar_695;
    tmpvar_695 = clamp (((
      sqrt(dot (p_687, p_687))
     - 0.8) / (
      ((abs(sin(
        ((r_688 * 10.0) + time)
      )) * 0.2) + 2.0)
     - 0.8)), 0.0, 1.0);
    r_688 = (r_688 * ((tmpvar_694 * 
      (tmpvar_694 * (3.0 - (2.0 * tmpvar_694)))
    ) - (tmpvar_695 * 
      (tmpvar_695 * (3.0 - (2.0 * tmpvar_695)))
    )));
    vec2 xy_696;
    xy_696 = (p_687 + (time * 0.5));
    vec2 uv_697;
    vec2 tmpvar_698;
    tmpvar_698 = floor(xy_696);
    vec2 tmpvar_699;
    tmpvar_699 = (xy_696 - tmpvar_698);
    uv_697 = ((tmpvar_699 * tmpvar_699) * (3.0 - (2.0 * tmpvar_699)));
    float tmpvar_700;
    tmpvar_700 = fract((cos(
      dot (tmpvar_698, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_701;
    tmpvar_701.x = (tmpvar_698.x + 1.0);
    tmpvar_701.y = tmpvar_698.y;
    float tmpvar_702;
    tmpvar_702 = fract((cos(
      dot (tmpvar_701, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_703;
    tmpvar_703.x = tmpvar_698.x;
    tmpvar_703.y = (tmpvar_698.y + 1.0);
    float tmpvar_704;
    tmpvar_704 = fract((cos(
      dot (tmpvar_703, vec2(21.9898, 78.233))
    ) * 43758.55));
    r_688 = (r_688 * abs((
      ((tmpvar_700 + ((tmpvar_702 - tmpvar_700) * uv_697.x)) + ((tmpvar_704 - tmpvar_700) * uv_697.y))
     + 
      ((((
        (tmpvar_700 - tmpvar_702)
       - tmpvar_704) + fract(
        (cos(dot ((tmpvar_698 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_697.x) * uv_697.y)
    )));
    r_688 = (r_688 * 15.0);
    vec4 tmpvar_705;
    tmpvar_705.w = 1.0;
    tmpvar_705.xyz = ((vec3(-1.29, -0.5, -0.1) * r_688) * ((tmpvar_692 * 
      (tmpvar_692 * (3.0 - (2.0 * tmpvar_692)))
    ) - (tmpvar_693 * 
      (tmpvar_693 * (3.0 - (2.0 * tmpvar_693)))
    )));
    float c_706;
    vec2 tmpvar_707;
    tmpvar_707 = (p_673 - vec2(0.5, 0.5));
    c_706 = ((cos(
      ((p_673.x * 80.0) - (time / 2.0))
    ) * 0.5) + 0.5);
    vec4 tmpvar_708;
    tmpvar_708.x = c_706;
    tmpvar_708.y = c_706;
    tmpvar_708.z = c_706;
    tmpvar_708.w = min (clamp ((1.0 - 
      sqrt(dot (tmpvar_707, tmpvar_707))
    ), 0.0, 1.0), c_706);
    c_559 = (c_559 + ((k_674 + tmpvar_705) + mix (vec4(-0.25, 0.0, 0.0, 1.0), tmpvar_708, tmpvar_708.w)));
    p_560 = (p_560 * 0.4);
    c_559 = (c_559 * 0.6);
    vec2 p_709;
    p_709 = (p_560 * bval_558);
    vec4 k_710;
    mat4 m_711;
    mat4 tmpvar_712;
    tmpvar_712[0].x = -1.0;
    tmpvar_712[0].y = 2.0;
    tmpvar_712[0].z = -2.0;
    tmpvar_712[0].w = 0.0;
    tmpvar_712[1].x = -2.0;
    tmpvar_712[1].y = 1.0;
    tmpvar_712[1].z = 3.0;
    tmpvar_712[1].w = 0.0;
    tmpvar_712[2].x = 3.0;
    tmpvar_712[2].y = 2.0;
    tmpvar_712[2].z = 1.0;
    tmpvar_712[2].w = 0.0;
    tmpvar_712[3].xy = (800.2 * p_709);
    tmpvar_712[3].zw = (vec2(time) + 10000.0);
    mat4 tmpvar_713;
    tmpvar_713[0].x = 1.0;
    tmpvar_713[0].y = 0.0;
    tmpvar_713[0].z = 0.0;
    tmpvar_713[0].w = 0.0;
    tmpvar_713[1].x = 0.0;
    tmpvar_713[1].y = 1.0;
    tmpvar_713[1].z = 0.0;
    tmpvar_713[1].w = 0.0;
    tmpvar_713[2].x = -1.244444;
    tmpvar_713[2].y = 0.0;
    tmpvar_713[2].z = 0.5555556;
    tmpvar_713[2].w = 0.0;
    tmpvar_713[3].x = 0.0;
    tmpvar_713[3].y = 0.0;
    tmpvar_713[3].z = 0.0;
    tmpvar_713[3].w = 1.0;
    m_711 = (tmpvar_712 * tmpvar_713);
    mat4 tmpvar_714;
    tmpvar_714 = (m_711 * 0.4);
    m_711 = tmpvar_714;
    vec4 tmpvar_715;
    tmpvar_715 = (tmpvar_714[3] * tmpvar_714);
    m_711[3] = tmpvar_715;
    vec4 x_716;
    x_716 = (fract(tmpvar_715) - 0.5);
    mat4 tmpvar_717;
    tmpvar_717 = (m_711 * -0.6);
    m_711 = tmpvar_717;
    vec4 tmpvar_718;
    tmpvar_718 = (tmpvar_717[3] * tmpvar_717);
    m_711[3] = tmpvar_718;
    vec4 x_719;
    x_719 = (fract(tmpvar_718) - 0.5);
    mat4 tmpvar_720;
    tmpvar_720 = (m_711 * -1.6);
    m_711 = tmpvar_720;
    vec4 tmpvar_721;
    tmpvar_721 = (tmpvar_720[3] * tmpvar_720);
    m_711[3] = tmpvar_721;
    vec4 x_722;
    x_722 = (fract(tmpvar_721) - 0.5);
    k_710 = (min (min (
      sqrt(dot (x_716, x_716))
    , 
      sqrt(dot (x_719, x_719))
    ), sqrt(
      dot (x_722, x_722)
    )) / m_711[2]);
    vec2 p_723;
    float r_724;
    p_723.y = (p_709.y - 0.8505124);
    p_723.x = (p_709.x - 2.005062);
    float tmpvar_725;
    float tmpvar_726;
    tmpvar_726 = (min (abs(
      (p_723.y / p_723.x)
    ), 1.0) / max (abs(
      (p_723.y / p_723.x)
    ), 1.0));
    float tmpvar_727;
    tmpvar_727 = (tmpvar_726 * tmpvar_726);
    tmpvar_727 = (((
      ((((
        ((((-0.01213232 * tmpvar_727) + 0.05368138) * tmpvar_727) - 0.1173503)
       * tmpvar_727) + 0.1938925) * tmpvar_727) - 0.3326756)
     * tmpvar_727) + 0.9999793) * tmpvar_726);
    tmpvar_727 = (tmpvar_727 + (float(
      (abs((p_723.y / p_723.x)) > 1.0)
    ) * (
      (tmpvar_727 * -2.0)
     + 1.570796)));
    tmpvar_725 = (tmpvar_727 * sign((p_723.y / p_723.x)));
    if ((abs(p_723.x) > (1e-08 * abs(p_723.y)))) {
      if ((p_723.x < 0.0)) {
        if ((p_723.y >= 0.0)) {
          tmpvar_725 += 3.141593;
        } else {
          tmpvar_725 = (tmpvar_725 - 3.141593);
        };
      };
    } else {
      tmpvar_725 = (sign(p_723.y) * 1.570796);
    };
    float tmpvar_728;
    tmpvar_728 = clamp (((tmpvar_725 - 0.8471932) / 0.2), 0.0, 1.0);
    float tmpvar_729;
    tmpvar_729 = clamp (((tmpvar_725 - 2.094386) / 0.2), 0.0, 1.0);
    r_724 = (sin((3.14158 * 
      ((tmpvar_725 - 1.047193) / 1.047193)
    )) * 0.2);
    r_724 = (r_724 + (abs(
      sin(((r_724 * 10.0) + (time * 0.1)))
    ) * 0.2));
    r_724 += 0.1;
    float tmpvar_730;
    tmpvar_730 = clamp (((
      sqrt(dot (p_723, p_723))
     - 0.4) / 0.2), 0.0, 1.0);
    float tmpvar_731;
    tmpvar_731 = clamp (((
      sqrt(dot (p_723, p_723))
     - 0.8) / (
      ((abs(sin(
        ((r_724 * 10.0) + time)
      )) * 0.2) + 2.0)
     - 0.8)), 0.0, 1.0);
    r_724 = (r_724 * ((tmpvar_730 * 
      (tmpvar_730 * (3.0 - (2.0 * tmpvar_730)))
    ) - (tmpvar_731 * 
      (tmpvar_731 * (3.0 - (2.0 * tmpvar_731)))
    )));
    vec2 xy_732;
    xy_732 = (p_723 + (time * 0.5));
    vec2 uv_733;
    vec2 tmpvar_734;
    tmpvar_734 = floor(xy_732);
    vec2 tmpvar_735;
    tmpvar_735 = (xy_732 - tmpvar_734);
    uv_733 = ((tmpvar_735 * tmpvar_735) * (3.0 - (2.0 * tmpvar_735)));
    float tmpvar_736;
    tmpvar_736 = fract((cos(
      dot (tmpvar_734, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_737;
    tmpvar_737.x = (tmpvar_734.x + 1.0);
    tmpvar_737.y = tmpvar_734.y;
    float tmpvar_738;
    tmpvar_738 = fract((cos(
      dot (tmpvar_737, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_739;
    tmpvar_739.x = tmpvar_734.x;
    tmpvar_739.y = (tmpvar_734.y + 1.0);
    float tmpvar_740;
    tmpvar_740 = fract((cos(
      dot (tmpvar_739, vec2(21.9898, 78.233))
    ) * 43758.55));
    r_724 = (r_724 * abs((
      ((tmpvar_736 + ((tmpvar_738 - tmpvar_736) * uv_733.x)) + ((tmpvar_740 - tmpvar_736) * uv_733.y))
     + 
      ((((
        (tmpvar_736 - tmpvar_738)
       - tmpvar_740) + fract(
        (cos(dot ((tmpvar_734 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_733.x) * uv_733.y)
    )));
    r_724 = (r_724 * 15.0);
    vec4 tmpvar_741;
    tmpvar_741.w = 1.0;
    tmpvar_741.xyz = ((vec3(-1.29, -0.5, -0.1) * r_724) * ((tmpvar_728 * 
      (tmpvar_728 * (3.0 - (2.0 * tmpvar_728)))
    ) - (tmpvar_729 * 
      (tmpvar_729 * (3.0 - (2.0 * tmpvar_729)))
    )));
    float c_742;
    vec2 tmpvar_743;
    tmpvar_743 = (p_709 - vec2(0.5, 0.5));
    c_742 = ((cos(
      ((p_709.x * 80.0) - (time / 2.0))
    ) * 0.5) + 0.5);
    vec4 tmpvar_744;
    tmpvar_744.x = c_742;
    tmpvar_744.y = c_742;
    tmpvar_744.z = c_742;
    tmpvar_744.w = min (clamp ((1.0 - 
      sqrt(dot (tmpvar_743, tmpvar_743))
    ), 0.0, 1.0), c_742);
    c_559 = (c_559 + ((k_710 + tmpvar_741) + mix (vec4(-0.25, 0.0, 0.0, 1.0), tmpvar_744, tmpvar_744.w)));
    p_560 = (p_560 * 0.4);
    c_559 = (c_559 * 0.6);
    vec4 tmpvar_745;
    tmpvar_745 = max (vec4(0.0, 0.0, 0.0, 0.0), ((
      (c_559.y + ((tmpvar_564 - c_559.y) * c_559.x))
     * 
      clamp ((9.0 - ((tmpvar_563 * tmpvar_563) * 9.0)), 0.0, 1.0)
    ) + (tmpvar_311 * 
      (1.0 - clamp ((9.0 - (
        (tmpvar_563 * tmpvar_563)
       * 9.0)), 0.0, 1.0))
    )));
    tmpc_557.zw = tmpvar_745.zw;
    tmpc_557.x = (tmpvar_745.x * 0.55);
    tmpc_557.y = (tmpvar_745.y * 0.725);
    tmpvar_552 = tmpc_557;
  } else {
    tmpvar_552 = tmpvar_311;
  };
  buff_11 = tmpvar_552;
  vec4 tmpvar_746;
  vec2 tmpvar_747;
  tmpvar_747 = ((tmpvar_2 - (planetpos3 * zoom)) - shippos);
  vec2 x_748;
  float tmpvar_749;
  tmpvar_749 = (10000.0 * zoom);
  x_748 = (tmpvar_747 - tmpvar_749);
  float tmpvar_750;
  tmpvar_750 = float((sqrt(
    dot (x_748, x_748)
  ) >= tmpvar_749));
  if (((1.0 - tmpvar_750) > 0.0)) {
    vec4 c_751;
    vec2 p_752;
    vec2 tmpvar_753;
    tmpvar_753 = vec2((20000.0 * zoom));
    vec2 tmpvar_754;
    tmpvar_754 = (((tmpvar_747 * 2.0) - tmpvar_753) / tmpvar_753.y);
    float tmpvar_755;
    tmpvar_755 = sqrt(dot (tmpvar_754, tmpvar_754));
    vec4 tmpvar_756;
    tmpvar_756 = (vec4(0.43, 0.442, 0.4, 1.0) + tmpvar_754.y);
    c_751 = tmpvar_756;
    p_752 = (((tmpvar_754 * 
      (sign(tmpvar_755) * (1.570796 - (sqrt(
        (1.0 - abs(tmpvar_755))
      ) * (1.570796 + 
        (abs(tmpvar_755) * (-0.2146018 + (abs(tmpvar_755) * (0.08656672 + 
          (abs(tmpvar_755) * -0.03102955)
        ))))
      ))))
    ) / tmpvar_755) - 5.0);
    p_752 = (p_752 * p_752.y);
    if (best) {
      vec2 fragCoord_757;
      fragCoord_757 = (p_752 * 0.0390151);
      vec3 color_758;
      vec2 tmpvar_759;
      tmpvar_759 = (fragCoord_757 * 0.51);
      vec2 tmpvar_760;
      tmpvar_760.y = 0.5;
      tmpvar_760.x = (0.5 - (0.015 * sin(
        (time / 3.0)
      )));
      vec2 tmpvar_761;
      tmpvar_761.x = tmpvar_760.x;
      tmpvar_761.y = 0.5;
      vec2 tmpvar_762;
      tmpvar_762 = (mat2(0.866, 0.5, -0.5, 0.866) * (tmpvar_759 - tmpvar_761));
      vec2 x_763;
      x_763 = (tmpvar_759 - tmpvar_761);
      vec3 tmpvar_764;
      tmpvar_764 = mix (mix (mix (vec3(1.5, 1.294, 1.908235), vec3(1.0, 0.0504019, -0.806), 
        (0.5 * (1.0 + sin((60.0 * tmpvar_762.y))))
      ), vec3(1.0, 1.0, 0.5), (0.5 * 
        (1.0 + sin(((80.0 * tmpvar_762.y) * tmpvar_762.y)))
      )), color_758, pow (sqrt(
        dot (x_763, x_763)
      ), 80.0));
      color_758 = tmpvar_764;
      vec4 tmpvar_765;
      tmpvar_765.w = 1.0;
      tmpvar_765.xyz = tmpvar_764;
      vec4 d_766;
      vec2 tmpvar_767;
      tmpvar_767 = ((fragCoord_757 * 0.525) + 2.9);
      d_766.zw = vec2((time * 0.081));
      d_766.y = (tmpvar_767.y * 0.015);
      d_766.x = (tmpvar_767.x * 0.725);
      d_766.xyw = (d_766.xyw * mat3(-1.0, -0.5, 1.0, 1.5, -1.0, 0.5, 0.5, 1.0, 1.0));
      vec3 x_768;
      x_768 = (0.5 - fract(d_766.xyw));
      d_766.xyw = (d_766.xyw * mat3(-0.8, -0.4, 0.8, 1.2, -0.8, 0.4, 0.4, 0.8, 0.8));
      vec3 x_769;
      x_769 = (0.5 - fract(d_766.xyw));
      d_766.xyw = (d_766.xyw * mat3(-0.6, -0.3, 0.6, 0.9, -0.6, 0.3, 0.3, 0.6, 0.6));
      vec3 x_770;
      x_770 = (0.5 - fract(d_766.xyw));
      c_751 = (tmpvar_756 + (tmpvar_765 * mix (vec4(0.208, 0.108, 0.0, 1.0), vec4(0.462, 0.44, 0.81, 1.0), 
        ((pow (min (
          min (sqrt(dot (x_768, x_768)), sqrt(dot (x_769, x_769)))
        , 
          sqrt(dot (x_770, x_770))
        ), 4.0) * 13.37) + (tmpvar_767.y * 1.55))
      )));
      p_752 = (p_752 * 0.4);
      c_751 = (c_751 * 0.3856);
    };
    vec2 fragCoord_771;
    fragCoord_771 = (p_752 * 0.0390151);
    vec3 color_772;
    vec2 tmpvar_773;
    tmpvar_773 = (fragCoord_771 * 0.51);
    vec2 tmpvar_774;
    tmpvar_774.y = 0.5;
    tmpvar_774.x = (0.5 - (0.015 * sin(
      (time / 3.0)
    )));
    vec2 tmpvar_775;
    tmpvar_775.x = tmpvar_774.x;
    tmpvar_775.y = 0.5;
    vec2 tmpvar_776;
    tmpvar_776 = (mat2(0.866, 0.5, -0.5, 0.866) * (tmpvar_773 - tmpvar_775));
    vec2 x_777;
    x_777 = (tmpvar_773 - tmpvar_775);
    vec3 tmpvar_778;
    tmpvar_778 = mix (mix (mix (vec3(1.5, 1.294, 1.908235), vec3(1.0, 0.0504019, -0.806), 
      (0.5 * (1.0 + sin((60.0 * tmpvar_776.y))))
    ), vec3(1.0, 1.0, 0.5), (0.5 * 
      (1.0 + sin(((80.0 * tmpvar_776.y) * tmpvar_776.y)))
    )), color_772, pow (sqrt(
      dot (x_777, x_777)
    ), 80.0));
    color_772 = tmpvar_778;
    vec4 tmpvar_779;
    tmpvar_779.w = 1.0;
    tmpvar_779.xyz = tmpvar_778;
    vec4 d_780;
    vec2 tmpvar_781;
    tmpvar_781 = ((fragCoord_771 * 0.525) + 2.9);
    d_780.zw = vec2((time * 0.081));
    d_780.y = (tmpvar_781.y * 0.015);
    d_780.x = (tmpvar_781.x * 0.725);
    d_780.xyw = (d_780.xyw * mat3(-1.0, -0.5, 1.0, 1.5, -1.0, 0.5, 0.5, 1.0, 1.0));
    vec3 x_782;
    x_782 = (0.5 - fract(d_780.xyw));
    d_780.xyw = (d_780.xyw * mat3(-0.8, -0.4, 0.8, 1.2, -0.8, 0.4, 0.4, 0.8, 0.8));
    vec3 x_783;
    x_783 = (0.5 - fract(d_780.xyw));
    d_780.xyw = (d_780.xyw * mat3(-0.6, -0.3, 0.6, 0.9, -0.6, 0.3, 0.3, 0.6, 0.6));
    vec3 x_784;
    x_784 = (0.5 - fract(d_780.xyw));
    c_751 = (c_751 + (tmpvar_779 * mix (vec4(0.208, 0.108, 0.0, 1.0), vec4(0.462, 0.44, 0.81, 1.0), 
      ((pow (min (
        min (sqrt(dot (x_782, x_782)), sqrt(dot (x_783, x_783)))
      , 
        sqrt(dot (x_784, x_784))
      ), 4.0) * 13.37) + (tmpvar_781.y * 1.55))
    )));
    p_752 = (p_752 * 0.4);
    c_751 = (c_751 * 0.3856);
    tmpvar_746 = (max (vec4(0.0, 0.0, 0.0, 0.0), (
      (c_751 * clamp ((9.0 - (
        (tmpvar_755 * tmpvar_755)
       * 9.0)), 0.0, 1.0))
     + 
      (tmpvar_552 * (1.0 - clamp ((9.0 - 
        ((tmpvar_755 * tmpvar_755) * 9.0)
      ), 0.0, 1.0)))
    )) * 0.755);
  } else {
    tmpvar_746 = tmpvar_552;
  };
  buff_11 = tmpvar_746;
  vec4 tmpvar_785;
  vec2 tmpvar_786;
  tmpvar_786 = ((tmpvar_2 - (planetpos4 * zoom)) - shippos);
  vec2 x_787;
  float tmpvar_788;
  tmpvar_788 = (12500.0 * zoom);
  x_787 = (tmpvar_786 - tmpvar_788);
  float tmpvar_789;
  tmpvar_789 = float((sqrt(
    dot (x_787, x_787)
  ) >= tmpvar_788));
  if (((1.0 - tmpvar_789) > 0.0)) {
    vec4 tmpc_790;
    vec4 c_791;
    vec2 p_792;
    vec2 tmpvar_793;
    tmpvar_793 = vec2((25000.0 * zoom));
    vec2 tmpvar_794;
    tmpvar_794 = (((tmpvar_786 * 2.0) - tmpvar_793) / tmpvar_793.y);
    float tmpvar_795;
    tmpvar_795 = sqrt(dot (tmpvar_794, tmpvar_794));
    vec4 tmpvar_796;
    tmpvar_796 = (vec4(0.43, 0.42, 0.678, 1.0) - min (0.59, abs(tmpvar_794.y)));
    c_791 = tmpvar_796;
    p_792 = (((tmpvar_794 * 
      (sign(tmpvar_795) * (1.570796 - (sqrt(
        (1.0 - abs(tmpvar_795))
      ) * (1.570796 + 
        (abs(tmpvar_795) * (-0.2146018 + (abs(tmpvar_795) * (0.08656672 + 
          (abs(tmpvar_795) * -0.03102955)
        ))))
      ))))
    ) / tmpvar_795) - 5.0);
    p_792 = (p_792 * p_792.y);
    vec4 col_797;
    float gg_799;
    float b_800;
    vec2 p_801;
    vec2 uv_802;
    vec2 tmpvar_803;
    tmpvar_803 = ((0.1851 * p_792) - 4.5);
    uv_802 = tmpvar_803;
    p_801 = tmpvar_803;
    float tmpvar_804;
    tmpvar_804 = (1.0 + sqrt(dot (tmpvar_803, tmpvar_803)));
    b_800 = tmpvar_804;
    vec2 g_805;
    g_805 = (tmpvar_803 * 1.4);
    vec4 f_806;
    f_806 = vec4(1.0, 1.0, 1.0, 1.0);
    vec2 U_807;
    vec4 O_808;
    U_807 = (g_805 * 200.0);
    O_808 = vec4(1.0, 1.0, 1.0, 1.0);
    vec2 tmpvar_809;
    tmpvar_809 = (U_807 / 8.0);
    U_807 = tmpvar_809;
    vec2 tmpvar_810;
    tmpvar_810 = ceil(tmpvar_809);
    float tmpvar_811;
    tmpvar_811 = sin((100000.0 * sqrt(
      dot (tmpvar_810, tmpvar_810)
    )));
    float tmpvar_812;
    if ((tmpvar_811 < 0.0)) {
      tmpvar_812 = tmpvar_809.x;
    } else {
      tmpvar_812 = tmpvar_809.y;
    };
    O_808 = (vec4(1.0, 1.0, 1.0, 1.0) + ((0.1 / 
      fract(tmpvar_812)
    ) - vec4(1.0, 1.0, 1.0, 1.0)));
    g_805 = (g_805 * 8.0);
    g_805.x = (g_805.x * 5.25);
    float tmpvar_813;
    float tmpvar_814;
    tmpvar_814 = (min (abs(
      (g_805.x / g_805.y)
    ), 1.0) / max (abs(
      (g_805.x / g_805.y)
    ), 1.0));
    float tmpvar_815;
    tmpvar_815 = (tmpvar_814 * tmpvar_814);
    tmpvar_815 = (((
      ((((
        ((((-0.01213232 * tmpvar_815) + 0.05368138) * tmpvar_815) - 0.1173503)
       * tmpvar_815) + 0.1938925) * tmpvar_815) - 0.3326756)
     * tmpvar_815) + 0.9999793) * tmpvar_814);
    tmpvar_815 = (tmpvar_815 + (float(
      (abs((g_805.x / g_805.y)) > 1.0)
    ) * (
      (tmpvar_815 * -2.0)
     + 1.570796)));
    tmpvar_813 = (tmpvar_815 * sign((g_805.x / g_805.y)));
    if ((abs(g_805.y) > (1e-08 * abs(g_805.x)))) {
      if ((g_805.y < 0.0)) {
        if ((g_805.x >= 0.0)) {
          tmpvar_813 += 3.141593;
        } else {
          tmpvar_813 = (tmpvar_813 - 3.141593);
        };
      };
    } else {
      tmpvar_813 = (sign(g_805.x) * 1.570796);
    };
    float tmpvar_816;
    tmpvar_816 = sqrt(dot (g_805, g_805));
    g_805.y = tmpvar_816;
    g_805.x = ((tmpvar_813 * 1.7) * floor(tmpvar_816));
    vec2 tmpvar_817;
    tmpvar_817 = floor(g_805);
    float tmpvar_818;
    tmpvar_818 = cos((60000.0 * sqrt(
      dot (tmpvar_817, tmpvar_817)
    )));
    float tmpvar_819;
    if ((tmpvar_818 < -0.8)) {
      tmpvar_819 = g_805.x;
    } else {
      tmpvar_819 = g_805.y;
    };
    f_806 = (vec4(1.0, 1.0, 1.0, 1.0) + (float(
      (0.6 >= (0.1 / fract(tmpvar_819)))
    ) - vec4(1.0, 1.0, 1.0, 1.0)));
    b_800 = (tmpvar_804 + ((f_806 * 
      max (0.0, (0.6 - O_808.x))
    ).x * 0.1));
    b_800 = (b_800 + (sin(time) * 0.01));
    p_801 = (tmpvar_803 * b_800);
    float tmpvar_820;
    tmpvar_820 = (time * 0.2);
    p_801.x = (p_801.x + (sin(tmpvar_820) * 2.0));
    p_801.y = (p_801.y + (cos(tmpvar_820) * 2.0));
    vec2 p_821;
    p_821 = ((p_801 * 0.1) + tmpvar_803);
    float q_823;
    q_823 = 0.0;
    for (float i_822 = 0.0; i_822 < 5.0; i_822 += 1.0) {
      q_823 = (q_823 + (0.028 + (i_822 * 0.01)));
      p_821.x = (p_821.x + ((
        (p_821.y * sin((iTime * 0.021)))
       * 0.1) + (
        sin((iTime * 0.05))
       * 1.2)));
      p_821.y = (p_821.y - ((
        (p_821.x * cos((iTime * 0.031)))
       * 0.1) + (
        cos((iTime * 0.05))
       * 1.2)));
      vec4 tmpvar_824;
      vec2 g_825;
      g_825 = ((vec2(mod (p_821, 4.0))) * 0.25);
      vec4 f_826;
      f_826 = vec4(1.0, 1.0, 1.0, 1.0);
      vec2 U_827;
      vec4 O_828;
      U_827 = (g_825 * 200.0);
      O_828 = vec4(1.0, 1.0, 1.0, 1.0);
      vec2 tmpvar_829;
      tmpvar_829 = (U_827 / 8.0);
      U_827 = tmpvar_829;
      vec2 tmpvar_830;
      tmpvar_830 = ceil(tmpvar_829);
      float tmpvar_831;
      tmpvar_831 = sin((100000.0 * sqrt(
        dot (tmpvar_830, tmpvar_830)
      )));
      float tmpvar_832;
      if ((tmpvar_831 < 0.0)) {
        tmpvar_832 = tmpvar_829.x;
      } else {
        tmpvar_832 = tmpvar_829.y;
      };
      O_828 = (vec4(1.0, 1.0, 1.0, 1.0) + ((0.1 / 
        fract(tmpvar_832)
      ) - vec4(1.0, 1.0, 1.0, 1.0)));
      g_825 = (g_825 * 8.0);
      g_825.x = (g_825.x * 5.25);
      float tmpvar_833;
      float tmpvar_834;
      tmpvar_834 = (min (abs(
        (g_825.x / g_825.y)
      ), 1.0) / max (abs(
        (g_825.x / g_825.y)
      ), 1.0));
      float tmpvar_835;
      tmpvar_835 = (tmpvar_834 * tmpvar_834);
      tmpvar_835 = (((
        ((((
          ((((-0.01213232 * tmpvar_835) + 0.05368138) * tmpvar_835) - 0.1173503)
         * tmpvar_835) + 0.1938925) * tmpvar_835) - 0.3326756)
       * tmpvar_835) + 0.9999793) * tmpvar_834);
      tmpvar_835 = (tmpvar_835 + (float(
        (abs((g_825.x / g_825.y)) > 1.0)
      ) * (
        (tmpvar_835 * -2.0)
       + 1.570796)));
      tmpvar_833 = (tmpvar_835 * sign((g_825.x / g_825.y)));
      if ((abs(g_825.y) > (1e-08 * abs(g_825.x)))) {
        if ((g_825.y < 0.0)) {
          if ((g_825.x >= 0.0)) {
            tmpvar_833 += 3.141593;
          } else {
            tmpvar_833 = (tmpvar_833 - 3.141593);
          };
        };
      } else {
        tmpvar_833 = (sign(g_825.x) * 1.570796);
      };
      float tmpvar_836;
      tmpvar_836 = sqrt(dot (g_825, g_825));
      g_825.y = tmpvar_836;
      g_825.x = ((tmpvar_833 * 1.7) * floor(tmpvar_836));
      vec2 tmpvar_837;
      tmpvar_837 = floor(g_825);
      float tmpvar_838;
      tmpvar_838 = cos((60000.0 * sqrt(
        dot (tmpvar_837, tmpvar_837)
      )));
      float tmpvar_839;
      if ((tmpvar_838 < -0.8)) {
        tmpvar_839 = g_825.x;
      } else {
        tmpvar_839 = g_825.y;
      };
      f_826 = (vec4(1.0, 1.0, 1.0, 1.0) + (float(
        (0.6 >= (0.1 / fract(tmpvar_839)))
      ) - vec4(1.0, 1.0, 1.0, 1.0)));
      tmpvar_824 = (f_826 * max (0.0, (0.6 - O_828.x)));
      if ((tmpvar_824.x < 0.1360704)) {
        break;
      };
      p_821 = (p_821 * 1.2);
    };
    gg_799 = 0.0;
    for (float g_798 = 0.0; g_798 < 6.0; g_798 += 1.0) {
      float tmpvar_840;
      tmpvar_840 = pow ((g_798 / 20.0), 0.5);
      vec2 p_841;
      p_841 = ((p_801 * 0.1) + (uv_802 * (tmpvar_840 + 
        (fract((cos(
          (dot ((uv_802 + p_801), vec2(2.31, 53.21)) * 124.123)
        ) * 412.0)) * (tmpvar_840 - pow ((
          (g_798 - 1.0)
         / 20.0), 0.5)))
      )));
      float q_843;
      q_843 = 0.0;
      for (float i_842 = 0.0; i_842 < 5.0; i_842 += 1.0) {
        q_843 = (q_843 + (0.028 + (i_842 * 0.01)));
        p_841.x = (p_841.x + ((
          (p_841.y * sin((iTime * 0.021)))
         * 0.1) + (
          sin((iTime * 0.05))
         * 1.2)));
        p_841.y = (p_841.y - ((
          (p_841.x * cos((iTime * 0.031)))
         * 0.1) + (
          cos((iTime * 0.05))
         * 1.2)));
        vec4 tmpvar_844;
        vec2 g_845;
        g_845 = ((vec2(mod (p_841, 4.0))) * 0.25);
        vec4 f_846;
        f_846 = vec4(1.0, 1.0, 1.0, 1.0);
        vec2 U_847;
        vec4 O_848;
        U_847 = (g_845 * 200.0);
        O_848 = vec4(1.0, 1.0, 1.0, 1.0);
        vec2 tmpvar_849;
        tmpvar_849 = (U_847 / 8.0);
        U_847 = tmpvar_849;
        vec2 tmpvar_850;
        tmpvar_850 = ceil(tmpvar_849);
        float tmpvar_851;
        tmpvar_851 = sin((100000.0 * sqrt(
          dot (tmpvar_850, tmpvar_850)
        )));
        float tmpvar_852;
        if ((tmpvar_851 < 0.0)) {
          tmpvar_852 = tmpvar_849.x;
        } else {
          tmpvar_852 = tmpvar_849.y;
        };
        O_848 = (vec4(1.0, 1.0, 1.0, 1.0) + ((0.1 / 
          fract(tmpvar_852)
        ) - vec4(1.0, 1.0, 1.0, 1.0)));
        g_845 = (g_845 * 8.0);
        g_845.x = (g_845.x * 5.25);
        float tmpvar_853;
        float tmpvar_854;
        tmpvar_854 = (min (abs(
          (g_845.x / g_845.y)
        ), 1.0) / max (abs(
          (g_845.x / g_845.y)
        ), 1.0));
        float tmpvar_855;
        tmpvar_855 = (tmpvar_854 * tmpvar_854);
        tmpvar_855 = (((
          ((((
            ((((-0.01213232 * tmpvar_855) + 0.05368138) * tmpvar_855) - 0.1173503)
           * tmpvar_855) + 0.1938925) * tmpvar_855) - 0.3326756)
         * tmpvar_855) + 0.9999793) * tmpvar_854);
        tmpvar_855 = (tmpvar_855 + (float(
          (abs((g_845.x / g_845.y)) > 1.0)
        ) * (
          (tmpvar_855 * -2.0)
         + 1.570796)));
        tmpvar_853 = (tmpvar_855 * sign((g_845.x / g_845.y)));
        if ((abs(g_845.y) > (1e-08 * abs(g_845.x)))) {
          if ((g_845.y < 0.0)) {
            if ((g_845.x >= 0.0)) {
              tmpvar_853 += 3.141593;
            } else {
              tmpvar_853 = (tmpvar_853 - 3.141593);
            };
          };
        } else {
          tmpvar_853 = (sign(g_845.x) * 1.570796);
        };
        float tmpvar_856;
        tmpvar_856 = sqrt(dot (g_845, g_845));
        g_845.y = tmpvar_856;
        g_845.x = ((tmpvar_853 * 1.7) * floor(tmpvar_856));
        vec2 tmpvar_857;
        tmpvar_857 = floor(g_845);
        float tmpvar_858;
        tmpvar_858 = cos((60000.0 * sqrt(
          dot (tmpvar_857, tmpvar_857)
        )));
        float tmpvar_859;
        if ((tmpvar_858 < -0.8)) {
          tmpvar_859 = g_845.x;
        } else {
          tmpvar_859 = g_845.y;
        };
        f_846 = (vec4(1.0, 1.0, 1.0, 1.0) + (float(
          (0.6 >= (0.1 / fract(tmpvar_859)))
        ) - vec4(1.0, 1.0, 1.0, 1.0)));
        tmpvar_844 = (f_846 * max (0.0, (0.6 - O_848.x)));
        if ((tmpvar_844.x < 0.1360704)) {
          break;
        };
        p_841 = (p_841 * 1.2);
      };
      gg_799 = (gg_799 + q_843);
    };
    float tmpvar_860;
    tmpvar_860 = mix ((gg_799 * 0.125), q_823, 0.25);
    vec4 tmpvar_861;
    tmpvar_861.w = 1.0;
    tmpvar_861.x = (tmpvar_860 * 4.0);
    tmpvar_861.y = (tmpvar_860 * 3.0);
    tmpvar_861.z = tmpvar_860;
    col_797 = (tmpvar_861 / (b_800 - 0.61));
    float tmpvar_862;
    tmpvar_862 = fract((cos(
      (dot ((tmpvar_803 + col_797.xy), vec2(2.31, 53.21)) * 124.123)
    ) * 412.0));
    vec4 tmpvar_863;
    tmpvar_863.w = 0.0;
    tmpvar_863.x = tmpvar_862;
    tmpvar_863.y = tmpvar_862;
    tmpvar_863.z = tmpvar_862;
    col_797 = (col_797 - (tmpvar_863 * 0.025));
    float tmpvar_864;
    tmpvar_864 = ((col_797.x + col_797.y) + col_797.z);
    vec4 tmpvar_865;
    tmpvar_865.w = 1.0;
    tmpvar_865.x = tmpvar_864;
    tmpvar_865.y = tmpvar_864;
    tmpvar_865.z = tmpvar_864;
    c_791 = (tmpvar_796 + mix (col_797, (tmpvar_865 * 0.85), tmpvar_864));
    p_792 = (p_792 * 0.4);
    c_791 = (c_791 * 0.76);
    vec4 tmpvar_866;
    tmpvar_866 = max (vec4(0.0, 0.0, 0.0, 0.0), ((c_791 * 
      clamp ((9.0 - ((tmpvar_795 * tmpvar_795) * 9.0)), 0.0, 1.0)
    ) + (tmpvar_746 * 
      (1.0 - clamp ((9.0 - (
        (tmpvar_795 * tmpvar_795)
       * 9.0)), 0.0, 1.0))
    )));
    tmpc_790.xyw = tmpvar_866.xyw;
    tmpc_790.z = (tmpvar_866.z * 0.51);
    tmpvar_785 = tmpc_790;
  } else {
    tmpvar_785 = tmpvar_746;
  };
  buff_11 = tmpvar_785;
  vec4 tmpvar_867;
  vec2 tmpvar_868;
  tmpvar_868 = ((tmpvar_2 - (planetpos5 * zoom)) - shippos);
  vec2 x_869;
  float tmpvar_870;
  tmpvar_870 = (4000.0 * zoom);
  x_869 = (tmpvar_868 - tmpvar_870);
  float tmpvar_871;
  tmpvar_871 = float((sqrt(
    dot (x_869, x_869)
  ) >= tmpvar_870));
  if (((1.0 - tmpvar_871) > 0.0)) {
    vec4 tmpc_872;
    vec4 c_873;
    vec2 p_874;
    vec2 tmpvar_875;
    tmpvar_875 = vec2((8000.0 * zoom));
    vec2 tmpvar_876;
    tmpvar_876 = (((tmpvar_868 * 2.0) - tmpvar_875) / tmpvar_875.y);
    float tmpvar_877;
    tmpvar_877 = sqrt(dot (tmpvar_876, tmpvar_876));
    vec4 tmpvar_878;
    tmpvar_878 = (vec4(0.4643, 0.22, 0.28, 1.0) + (tmpvar_876.y / 1.5));
    c_873 = tmpvar_878;
    p_874 = (((tmpvar_876 * 
      (sign(tmpvar_877) * (1.570796 - (sqrt(
        (1.0 - abs(tmpvar_877))
      ) * (1.570796 + 
        (abs(tmpvar_877) * (-0.2146018 + (abs(tmpvar_877) * (0.08656672 + 
          (abs(tmpvar_877) * -0.03102955)
        ))))
      ))))
    ) / tmpvar_877) - 5.0);
    p_874 = (p_874 * p_874.y);
    if (best) {
      vec4 fcx_879;
      vec2 uv_880;
      vec2 tmpvar_881;
      tmpvar_881 = (0.45 * p_874);
      uv_880.y = tmpvar_881.y;
      uv_880.x = (tmpvar_881.x + (time * 0.11));
      vec2 uv_882;
      vec2 frac_884;
      vec2 cell_885;
      float minDistance_886;
      vec3 tmpvar_887;
      tmpvar_887.yz = vec2(0.02, 0.02);
      tmpvar_887.x = (0.09 + (abs(
        sin((time * 0.75))
      ) * 0.03));
      minDistance_886 = 1.0;
      uv_882 = (uv_880 * 3.0);
      cell_885 = floor(uv_882);
      frac_884 = fract(uv_882);
      for (int i_883 = -1; i_883 <= 1; i_883++) {
        for (int j_888 = -1; j_888 <= 1; j_888++) {
          vec2 tmpvar_889;
          tmpvar_889.x = float(i_883);
          tmpvar_889.y = float(j_888);
          vec2 tmpvar_890;
          tmpvar_890.x = dot ((cell_885 + tmpvar_889), vec2(127.1, 311.7));
          tmpvar_890.y = dot ((cell_885 + tmpvar_889), vec2(269.5, 183.3));
          vec2 uv_891;
          vec2 tmpvar_892;
          tmpvar_892 = floor(uv_882);
          vec2 tmpvar_893;
          tmpvar_893 = (uv_882 - tmpvar_892);
          uv_891 = ((tmpvar_893 * tmpvar_893) * (3.0 - (2.0 * tmpvar_893)));
          float tmpvar_894;
          tmpvar_894 = fract((cos(
            dot (tmpvar_892, vec2(21.9898, 78.233))
          ) * 43758.55));
          vec2 tmpvar_895;
          tmpvar_895.x = (tmpvar_892.x + 1.0);
          tmpvar_895.y = tmpvar_892.y;
          float tmpvar_896;
          tmpvar_896 = fract((cos(
            dot (tmpvar_895, vec2(21.9898, 78.233))
          ) * 43758.55));
          vec2 tmpvar_897;
          tmpvar_897.x = tmpvar_892.x;
          tmpvar_897.y = (tmpvar_892.y + 1.0);
          float tmpvar_898;
          tmpvar_898 = fract((cos(
            dot (tmpvar_897, vec2(21.9898, 78.233))
          ) * 43758.55));
          vec2 x_899;
          x_899 = ((tmpvar_889 + (
            fract((sin(tmpvar_890) * 43758.55))
           + 
            ((((
              (tmpvar_894 + ((tmpvar_896 - tmpvar_894) * uv_891.x))
             + 
              ((tmpvar_898 - tmpvar_894) * uv_891.y)
            ) + (
              ((((tmpvar_894 - tmpvar_896) - tmpvar_898) + fract((
                cos(dot ((tmpvar_892 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
               * 43758.55))) * uv_891.x)
             * uv_891.y)) / 5.0) * 1.5)
          )) - frac_884);
          minDistance_886 = min (minDistance_886, sqrt(dot (x_899, x_899)));
        };
      };
      float tmpvar_900;
      tmpvar_900 = (time * 1.5);
      fcx_879.xyz = (fcx_879.xyz + mix (tmpvar_887, (vec3(1.725, 0.5175, 0.0) * 
        pow (minDistance_886, (2.5 + ((
          sin(((uv_882.x * 2.0) + tmpvar_900))
         + 
          sin(((uv_882.y * 2.0) + tmpvar_900))
        ) * 0.95)))
      ), minDistance_886));
      vec2 uv_901;
      vec2 frac_902;
      vec2 cell_903;
      float minDistance_904;
      vec3 tmpvar_905;
      tmpvar_905.yz = vec2(0.02, 0.02);
      float tmpvar_906;
      tmpvar_906 = (time * 0.75);
      tmpvar_905.x = (0.09 + (abs(
        sin(tmpvar_906)
      ) * 0.03));
      uv_901 = (uv_880 * 6.0);
      cell_903 = floor(uv_901);
      frac_902 = fract(uv_901);
      vec2 tmpvar_907;
      tmpvar_907.x = dot ((cell_903 + vec2(-1.0, -1.0)), vec2(127.1, 311.7));
      tmpvar_907.y = dot ((cell_903 + vec2(-1.0, -1.0)), vec2(269.5, 183.3));
      vec2 x_908;
      x_908 = ((vec2(-1.0, -1.0) + fract(
        (sin(tmpvar_907) * 43758.55)
      )) - frac_902);
      minDistance_904 = min (1.0, sqrt(dot (x_908, x_908)));
      vec2 tmpvar_909;
      tmpvar_909.x = dot ((cell_903 + vec2(-1.0, 0.0)), vec2(127.1, 311.7));
      tmpvar_909.y = dot ((cell_903 + vec2(-1.0, 0.0)), vec2(269.5, 183.3));
      vec2 x_910;
      x_910 = ((vec2(-1.0, 0.0) + fract(
        (sin(tmpvar_909) * 43758.55)
      )) - frac_902);
      minDistance_904 = min (minDistance_904, sqrt(dot (x_910, x_910)));
      vec2 tmpvar_911;
      tmpvar_911.x = dot ((cell_903 + vec2(-1.0, 1.0)), vec2(127.1, 311.7));
      tmpvar_911.y = dot ((cell_903 + vec2(-1.0, 1.0)), vec2(269.5, 183.3));
      vec2 x_912;
      x_912 = ((vec2(-1.0, 1.0) + fract(
        (sin(tmpvar_911) * 43758.55)
      )) - frac_902);
      minDistance_904 = min (minDistance_904, sqrt(dot (x_912, x_912)));
      vec2 tmpvar_913;
      tmpvar_913.x = dot ((cell_903 + vec2(0.0, -1.0)), vec2(127.1, 311.7));
      tmpvar_913.y = dot ((cell_903 + vec2(0.0, -1.0)), vec2(269.5, 183.3));
      vec2 x_914;
      x_914 = ((vec2(0.0, -1.0) + fract(
        (sin(tmpvar_913) * 43758.55)
      )) - frac_902);
      minDistance_904 = min (minDistance_904, sqrt(dot (x_914, x_914)));
      vec2 tmpvar_915;
      tmpvar_915.x = dot (cell_903, vec2(127.1, 311.7));
      tmpvar_915.y = dot (cell_903, vec2(269.5, 183.3));
      vec2 x_916;
      x_916 = (fract((
        sin(tmpvar_915)
       * 43758.55)) - frac_902);
      minDistance_904 = min (minDistance_904, sqrt(dot (x_916, x_916)));
      vec2 tmpvar_917;
      tmpvar_917.x = dot ((cell_903 + vec2(0.0, 1.0)), vec2(127.1, 311.7));
      tmpvar_917.y = dot ((cell_903 + vec2(0.0, 1.0)), vec2(269.5, 183.3));
      vec2 x_918;
      x_918 = ((vec2(0.0, 1.0) + fract(
        (sin(tmpvar_917) * 43758.55)
      )) - frac_902);
      minDistance_904 = min (minDistance_904, sqrt(dot (x_918, x_918)));
      vec2 tmpvar_919;
      tmpvar_919.x = dot ((cell_903 + vec2(1.0, -1.0)), vec2(127.1, 311.7));
      tmpvar_919.y = dot ((cell_903 + vec2(1.0, -1.0)), vec2(269.5, 183.3));
      vec2 x_920;
      x_920 = ((vec2(1.0, -1.0) + fract(
        (sin(tmpvar_919) * 43758.55)
      )) - frac_902);
      minDistance_904 = min (minDistance_904, sqrt(dot (x_920, x_920)));
      vec2 tmpvar_921;
      tmpvar_921.x = dot ((cell_903 + vec2(1.0, 0.0)), vec2(127.1, 311.7));
      tmpvar_921.y = dot ((cell_903 + vec2(1.0, 0.0)), vec2(269.5, 183.3));
      vec2 x_922;
      x_922 = ((vec2(1.0, 0.0) + fract(
        (sin(tmpvar_921) * 43758.55)
      )) - frac_902);
      minDistance_904 = min (minDistance_904, sqrt(dot (x_922, x_922)));
      vec2 tmpvar_923;
      tmpvar_923.x = dot ((cell_903 + vec2(1.0, 1.0)), vec2(127.1, 311.7));
      tmpvar_923.y = dot ((cell_903 + vec2(1.0, 1.0)), vec2(269.5, 183.3));
      vec2 x_924;
      x_924 = ((vec2(1.0, 1.0) + fract(
        (sin(tmpvar_923) * 43758.55)
      )) - frac_902);
      minDistance_904 = min (minDistance_904, sqrt(dot (x_924, x_924)));
      fcx_879.xyz = (fcx_879.xyz + mix (tmpvar_905, (vec3(0.6, 0.0, 0.0) * 
        pow (minDistance_904, (3.0 + ((
          sin(((uv_901.x * 2.0) + time))
         + 
          sin(((uv_901.y * 2.0) + time))
        ) * 0.95)))
      ), minDistance_904));
      vec2 uv_925;
      vec2 frac_927;
      vec2 cell_928;
      float minDistance_929;
      vec3 tmpvar_930;
      tmpvar_930.yz = vec2(0.02, 0.02);
      tmpvar_930.x = (0.09 + (abs(
        sin(tmpvar_906)
      ) * 0.03));
      minDistance_929 = 1.0;
      uv_925 = (uv_880 * 8.0);
      cell_928 = floor(uv_925);
      frac_927 = fract(uv_925);
      for (int i_926 = -1; i_926 <= 1; i_926++) {
        for (int j_931 = -1; j_931 <= 1; j_931++) {
          vec2 randPoint_932;
          vec2 tmpvar_933;
          tmpvar_933.x = float(i_926);
          tmpvar_933.y = float(j_931);
          vec2 tmpvar_934;
          tmpvar_934.x = dot ((cell_928 + tmpvar_933), vec2(127.1, 311.7));
          tmpvar_934.y = dot ((cell_928 + tmpvar_933), vec2(269.5, 183.3));
          vec2 uv_935;
          vec2 tmpvar_936;
          tmpvar_936 = floor(uv_925);
          vec2 tmpvar_937;
          tmpvar_937 = (uv_925 - tmpvar_936);
          uv_935 = ((tmpvar_937 * tmpvar_937) * (3.0 - (2.0 * tmpvar_937)));
          float tmpvar_938;
          tmpvar_938 = fract((cos(
            dot (tmpvar_936, vec2(21.9898, 78.233))
          ) * 43758.55));
          vec2 tmpvar_939;
          tmpvar_939.x = (tmpvar_936.x + 1.0);
          tmpvar_939.y = tmpvar_936.y;
          float tmpvar_940;
          tmpvar_940 = fract((cos(
            dot (tmpvar_939, vec2(21.9898, 78.233))
          ) * 43758.55));
          vec2 tmpvar_941;
          tmpvar_941.x = tmpvar_936.x;
          tmpvar_941.y = (tmpvar_936.y + 1.0);
          float tmpvar_942;
          tmpvar_942 = fract((cos(
            dot (tmpvar_941, vec2(21.9898, 78.233))
          ) * 43758.55));
          randPoint_932 = (fract((
            sin(tmpvar_934)
           * 43758.55)) + ((
            (((tmpvar_938 + (
              (tmpvar_940 - tmpvar_938)
             * uv_935.x)) + ((tmpvar_942 - tmpvar_938) * uv_935.y)) + (((
              ((tmpvar_938 - tmpvar_940) - tmpvar_942)
             + 
              fract((cos(dot (
                (tmpvar_936 + vec2(1.0, 1.0))
              , vec2(21.9898, 78.233))) * 43758.55))
            ) * uv_935.x) * uv_935.y))
           / 5.0) * 0.5));
          vec2 tmpvar_943;
          tmpvar_943 = (0.5 + (0.5 * sin(
            ((iTime * 0.35) + (6.2831 * randPoint_932))
          )));
          randPoint_932 = tmpvar_943;
          vec2 x_944;
          x_944 = ((tmpvar_933 + tmpvar_943) - frac_927);
          minDistance_929 = min (minDistance_929, sqrt(dot (x_944, x_944)));
        };
      };
      float tmpvar_945;
      tmpvar_945 = (time * 1.9);
      fcx_879.xyz = (fcx_879.xyz + mix (tmpvar_930, (vec3(0.24, 0.08000001, 0.0) * 
        pow (minDistance_929, (4.0 + ((
          sin(((uv_925.x * 2.0) + tmpvar_945))
         + 
          sin(((uv_925.y * 2.0) + tmpvar_945))
        ) * 0.95)))
      ), minDistance_929));
      c_873 = (tmpvar_878 + fcx_879);
      p_874 = (p_874 * 0.4);
      c_873 = (c_873 * 0.6);
    };
    vec4 fcx_946;
    vec2 uv_947;
    vec2 tmpvar_948;
    tmpvar_948 = (0.45 * p_874);
    uv_947.y = tmpvar_948.y;
    uv_947.x = (tmpvar_948.x + (time * 0.11));
    vec2 uv_949;
    vec2 frac_951;
    vec2 cell_952;
    float minDistance_953;
    vec3 tmpvar_954;
    tmpvar_954.yz = vec2(0.02, 0.02);
    tmpvar_954.x = (0.09 + (abs(
      sin((time * 0.75))
    ) * 0.03));
    minDistance_953 = 1.0;
    uv_949 = (uv_947 * 3.0);
    cell_952 = floor(uv_949);
    frac_951 = fract(uv_949);
    for (int i_950 = -1; i_950 <= 1; i_950++) {
      for (int j_955 = -1; j_955 <= 1; j_955++) {
        vec2 tmpvar_956;
        tmpvar_956.x = float(i_950);
        tmpvar_956.y = float(j_955);
        vec2 tmpvar_957;
        tmpvar_957.x = dot ((cell_952 + tmpvar_956), vec2(127.1, 311.7));
        tmpvar_957.y = dot ((cell_952 + tmpvar_956), vec2(269.5, 183.3));
        vec2 uv_958;
        vec2 tmpvar_959;
        tmpvar_959 = floor(uv_949);
        vec2 tmpvar_960;
        tmpvar_960 = (uv_949 - tmpvar_959);
        uv_958 = ((tmpvar_960 * tmpvar_960) * (3.0 - (2.0 * tmpvar_960)));
        float tmpvar_961;
        tmpvar_961 = fract((cos(
          dot (tmpvar_959, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_962;
        tmpvar_962.x = (tmpvar_959.x + 1.0);
        tmpvar_962.y = tmpvar_959.y;
        float tmpvar_963;
        tmpvar_963 = fract((cos(
          dot (tmpvar_962, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_964;
        tmpvar_964.x = tmpvar_959.x;
        tmpvar_964.y = (tmpvar_959.y + 1.0);
        float tmpvar_965;
        tmpvar_965 = fract((cos(
          dot (tmpvar_964, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 x_966;
        x_966 = ((tmpvar_956 + (
          fract((sin(tmpvar_957) * 43758.55))
         + 
          ((((
            (tmpvar_961 + ((tmpvar_963 - tmpvar_961) * uv_958.x))
           + 
            ((tmpvar_965 - tmpvar_961) * uv_958.y)
          ) + (
            ((((tmpvar_961 - tmpvar_963) - tmpvar_965) + fract((
              cos(dot ((tmpvar_959 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
             * 43758.55))) * uv_958.x)
           * uv_958.y)) / 5.0) * 1.5)
        )) - frac_951);
        minDistance_953 = min (minDistance_953, sqrt(dot (x_966, x_966)));
      };
    };
    float tmpvar_967;
    tmpvar_967 = (time * 1.5);
    fcx_946.xyz = (fcx_946.xyz + mix (tmpvar_954, (vec3(1.725, 0.5175, 0.0) * 
      pow (minDistance_953, (2.5 + ((
        sin(((uv_949.x * 2.0) + tmpvar_967))
       + 
        sin(((uv_949.y * 2.0) + tmpvar_967))
      ) * 0.95)))
    ), minDistance_953));
    vec2 uv_968;
    vec2 frac_969;
    vec2 cell_970;
    float minDistance_971;
    vec3 tmpvar_972;
    tmpvar_972.yz = vec2(0.02, 0.02);
    float tmpvar_973;
    tmpvar_973 = (time * 0.75);
    tmpvar_972.x = (0.09 + (abs(
      sin(tmpvar_973)
    ) * 0.03));
    uv_968 = (uv_947 * 6.0);
    cell_970 = floor(uv_968);
    frac_969 = fract(uv_968);
    vec2 tmpvar_974;
    tmpvar_974.x = dot ((cell_970 + vec2(-1.0, -1.0)), vec2(127.1, 311.7));
    tmpvar_974.y = dot ((cell_970 + vec2(-1.0, -1.0)), vec2(269.5, 183.3));
    vec2 x_975;
    x_975 = ((vec2(-1.0, -1.0) + fract(
      (sin(tmpvar_974) * 43758.55)
    )) - frac_969);
    minDistance_971 = min (1.0, sqrt(dot (x_975, x_975)));
    vec2 tmpvar_976;
    tmpvar_976.x = dot ((cell_970 + vec2(-1.0, 0.0)), vec2(127.1, 311.7));
    tmpvar_976.y = dot ((cell_970 + vec2(-1.0, 0.0)), vec2(269.5, 183.3));
    vec2 x_977;
    x_977 = ((vec2(-1.0, 0.0) + fract(
      (sin(tmpvar_976) * 43758.55)
    )) - frac_969);
    minDistance_971 = min (minDistance_971, sqrt(dot (x_977, x_977)));
    vec2 tmpvar_978;
    tmpvar_978.x = dot ((cell_970 + vec2(-1.0, 1.0)), vec2(127.1, 311.7));
    tmpvar_978.y = dot ((cell_970 + vec2(-1.0, 1.0)), vec2(269.5, 183.3));
    vec2 x_979;
    x_979 = ((vec2(-1.0, 1.0) + fract(
      (sin(tmpvar_978) * 43758.55)
    )) - frac_969);
    minDistance_971 = min (minDistance_971, sqrt(dot (x_979, x_979)));
    vec2 tmpvar_980;
    tmpvar_980.x = dot ((cell_970 + vec2(0.0, -1.0)), vec2(127.1, 311.7));
    tmpvar_980.y = dot ((cell_970 + vec2(0.0, -1.0)), vec2(269.5, 183.3));
    vec2 x_981;
    x_981 = ((vec2(0.0, -1.0) + fract(
      (sin(tmpvar_980) * 43758.55)
    )) - frac_969);
    minDistance_971 = min (minDistance_971, sqrt(dot (x_981, x_981)));
    vec2 tmpvar_982;
    tmpvar_982.x = dot (cell_970, vec2(127.1, 311.7));
    tmpvar_982.y = dot (cell_970, vec2(269.5, 183.3));
    vec2 x_983;
    x_983 = (fract((
      sin(tmpvar_982)
     * 43758.55)) - frac_969);
    minDistance_971 = min (minDistance_971, sqrt(dot (x_983, x_983)));
    vec2 tmpvar_984;
    tmpvar_984.x = dot ((cell_970 + vec2(0.0, 1.0)), vec2(127.1, 311.7));
    tmpvar_984.y = dot ((cell_970 + vec2(0.0, 1.0)), vec2(269.5, 183.3));
    vec2 x_985;
    x_985 = ((vec2(0.0, 1.0) + fract(
      (sin(tmpvar_984) * 43758.55)
    )) - frac_969);
    minDistance_971 = min (minDistance_971, sqrt(dot (x_985, x_985)));
    vec2 tmpvar_986;
    tmpvar_986.x = dot ((cell_970 + vec2(1.0, -1.0)), vec2(127.1, 311.7));
    tmpvar_986.y = dot ((cell_970 + vec2(1.0, -1.0)), vec2(269.5, 183.3));
    vec2 x_987;
    x_987 = ((vec2(1.0, -1.0) + fract(
      (sin(tmpvar_986) * 43758.55)
    )) - frac_969);
    minDistance_971 = min (minDistance_971, sqrt(dot (x_987, x_987)));
    vec2 tmpvar_988;
    tmpvar_988.x = dot ((cell_970 + vec2(1.0, 0.0)), vec2(127.1, 311.7));
    tmpvar_988.y = dot ((cell_970 + vec2(1.0, 0.0)), vec2(269.5, 183.3));
    vec2 x_989;
    x_989 = ((vec2(1.0, 0.0) + fract(
      (sin(tmpvar_988) * 43758.55)
    )) - frac_969);
    minDistance_971 = min (minDistance_971, sqrt(dot (x_989, x_989)));
    vec2 tmpvar_990;
    tmpvar_990.x = dot ((cell_970 + vec2(1.0, 1.0)), vec2(127.1, 311.7));
    tmpvar_990.y = dot ((cell_970 + vec2(1.0, 1.0)), vec2(269.5, 183.3));
    vec2 x_991;
    x_991 = ((vec2(1.0, 1.0) + fract(
      (sin(tmpvar_990) * 43758.55)
    )) - frac_969);
    minDistance_971 = min (minDistance_971, sqrt(dot (x_991, x_991)));
    fcx_946.xyz = (fcx_946.xyz + mix (tmpvar_972, (vec3(0.6, 0.0, 0.0) * 
      pow (minDistance_971, (3.0 + ((
        sin(((uv_968.x * 2.0) + time))
       + 
        sin(((uv_968.y * 2.0) + time))
      ) * 0.95)))
    ), minDistance_971));
    vec2 uv_992;
    vec2 frac_994;
    vec2 cell_995;
    float minDistance_996;
    vec3 tmpvar_997;
    tmpvar_997.yz = vec2(0.02, 0.02);
    tmpvar_997.x = (0.09 + (abs(
      sin(tmpvar_973)
    ) * 0.03));
    minDistance_996 = 1.0;
    uv_992 = (uv_947 * 8.0);
    cell_995 = floor(uv_992);
    frac_994 = fract(uv_992);
    for (int i_993 = -1; i_993 <= 1; i_993++) {
      for (int j_998 = -1; j_998 <= 1; j_998++) {
        vec2 randPoint_999;
        vec2 tmpvar_1000;
        tmpvar_1000.x = float(i_993);
        tmpvar_1000.y = float(j_998);
        vec2 tmpvar_1001;
        tmpvar_1001.x = dot ((cell_995 + tmpvar_1000), vec2(127.1, 311.7));
        tmpvar_1001.y = dot ((cell_995 + tmpvar_1000), vec2(269.5, 183.3));
        vec2 uv_1002;
        vec2 tmpvar_1003;
        tmpvar_1003 = floor(uv_992);
        vec2 tmpvar_1004;
        tmpvar_1004 = (uv_992 - tmpvar_1003);
        uv_1002 = ((tmpvar_1004 * tmpvar_1004) * (3.0 - (2.0 * tmpvar_1004)));
        float tmpvar_1005;
        tmpvar_1005 = fract((cos(
          dot (tmpvar_1003, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_1006;
        tmpvar_1006.x = (tmpvar_1003.x + 1.0);
        tmpvar_1006.y = tmpvar_1003.y;
        float tmpvar_1007;
        tmpvar_1007 = fract((cos(
          dot (tmpvar_1006, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_1008;
        tmpvar_1008.x = tmpvar_1003.x;
        tmpvar_1008.y = (tmpvar_1003.y + 1.0);
        float tmpvar_1009;
        tmpvar_1009 = fract((cos(
          dot (tmpvar_1008, vec2(21.9898, 78.233))
        ) * 43758.55));
        randPoint_999 = (fract((
          sin(tmpvar_1001)
         * 43758.55)) + ((
          (((tmpvar_1005 + (
            (tmpvar_1007 - tmpvar_1005)
           * uv_1002.x)) + ((tmpvar_1009 - tmpvar_1005) * uv_1002.y)) + (((
            ((tmpvar_1005 - tmpvar_1007) - tmpvar_1009)
           + 
            fract((cos(dot (
              (tmpvar_1003 + vec2(1.0, 1.0))
            , vec2(21.9898, 78.233))) * 43758.55))
          ) * uv_1002.x) * uv_1002.y))
         / 5.0) * 0.5));
        vec2 tmpvar_1010;
        tmpvar_1010 = (0.5 + (0.5 * sin(
          ((iTime * 0.35) + (6.2831 * randPoint_999))
        )));
        randPoint_999 = tmpvar_1010;
        vec2 x_1011;
        x_1011 = ((tmpvar_1000 + tmpvar_1010) - frac_994);
        minDistance_996 = min (minDistance_996, sqrt(dot (x_1011, x_1011)));
      };
    };
    float tmpvar_1012;
    tmpvar_1012 = (time * 1.9);
    fcx_946.xyz = (fcx_946.xyz + mix (tmpvar_997, (vec3(0.24, 0.08000001, 0.0) * 
      pow (minDistance_996, (4.0 + ((
        sin(((uv_992.x * 2.0) + tmpvar_1012))
       + 
        sin(((uv_992.y * 2.0) + tmpvar_1012))
      ) * 0.95)))
    ), minDistance_996));
    c_873 = (c_873 + fcx_946);
    p_874 = (p_874 * 0.4);
    c_873 = (c_873 * 0.6);
    vec4 tmpvar_1013;
    tmpvar_1013 = max (vec4(0.0, 0.0, 0.0, 0.0), ((c_873 * 
      clamp ((9.0 - ((tmpvar_877 * tmpvar_877) * 9.0)), 0.0, 1.0)
    ) + (tmpvar_785 * 
      (1.0 - clamp ((9.0 - (
        (tmpvar_877 * tmpvar_877)
       * 9.0)), 0.0, 1.0))
    )));
    tmpc_872.xyw = tmpvar_1013.xyw;
    tmpc_872.z = (tmpvar_1013.z * -2.51);
    tmpvar_867 = tmpc_872;
  } else {
    tmpvar_867 = tmpvar_785;
  };
  buff_11 = tmpvar_867;
  vec4 tmpvar_1014;
  vec2 tmpvar_1015;
  tmpvar_1015 = ((tmpvar_2 - (planetpos6 * zoom)) - shippos);
  vec2 x_1016;
  float tmpvar_1017;
  tmpvar_1017 = (5250.0 * zoom);
  x_1016 = (tmpvar_1015 - tmpvar_1017);
  float tmpvar_1018;
  tmpvar_1018 = float((sqrt(
    dot (x_1016, x_1016)
  ) >= tmpvar_1017));
  if (((1.0 - tmpvar_1018) > 0.0)) {
    vec3 p_1019;
    vec4 s_1020;
    vec2 v_1021;
    vec2 tmpvar_1022;
    tmpvar_1022 = (vec2(10500.0, 10500.0) * zoom);
    float tmpvar_1023;
    vec2 fragCoord_1024;
    fragCoord_1024 = ((tmpvar_1015 - (tmpvar_1022 / vec2(2.0, 2.0))) / tmpvar_1022.y);
    vec2 p_1025;
    p_1025 = ((fragCoord_1024 + vec2(0.25, 0.25)) * 2.0);
    vec2 tmpvar_1026;
    tmpvar_1026 = (p_1025 - 0.5);
    p_1025 = tmpvar_1026;
    float tmpvar_1027;
    tmpvar_1027 = (0.1 + (0.5 * (1.0 - 
      dot (tmpvar_1026, tmpvar_1026)
    )));
    vec2 tmpvar_1028;
    tmpvar_1028 = (fract((
      ((fragCoord_1024 / tmpvar_1027) * 25.0)
     + 
      (time / 2.0)
    )) - 0.5);
    float tmpvar_1029;
    tmpvar_1029 = (3.0 * (1.0 - dot (tmpvar_1028, tmpvar_1028)));
    float tmpvar_1030;
    tmpvar_1030 = (((
      (tmpvar_1029 * tmpvar_1027)
     / 6.0) * tmpvar_1029) * tmpvar_1027);
    tmpvar_1023 = (abs((
      pow ((tmpvar_1030 * 9.9), 7.6)
     * 
      cos((tmpvar_1030 * 9.0))
    )) + sin((tmpvar_1030 * 10.5)));
    float tmpvar_1031;
    tmpvar_1031 = clamp (((tax - 0.19) / 0.3), 0.0, 1.0);
    float tmpvar_1032;
    tmpvar_1032 = clamp (((tax - 0.7) / -0.21), 0.0, 1.0);
    float tmpvar_1033;
    tmpvar_1033 = ((1.0 - (tmpvar_1031 * 
      (tmpvar_1031 * (3.0 - (2.0 * tmpvar_1031)))
    )) + (1.0 - (tmpvar_1032 * 
      (tmpvar_1032 * (3.0 - (2.0 * tmpvar_1032)))
    )));
    float tmpvar_1034;
    tmpvar_1034 = -(tmpvar_1033);
    vec3 tmpvar_1035;
    tmpvar_1035.x = 1.0;
    tmpvar_1035.y = (tmpvar_1034 / 5.0);
    tmpvar_1035.z = tmpvar_1034;
    vec3 tmpvar_1036;
    tmpvar_1036 = normalize(tmpvar_1035);
    float tmpvar_1037;
    tmpvar_1037 = min (tmpvar_1022.x, tmpvar_1022.y);
    mat2 tmpvar_1038;
    float tmpvar_1039;
    tmpvar_1039 = (tax + 0.7305999);
    tmpvar_1038[0].x = cos((tmpvar_1039 - (0.2617983 * tmpvar_1033)));
    tmpvar_1038[0].y = -(sin((tmpvar_1039 - 
      (0.2617983 * tmpvar_1033)
    )));
    tmpvar_1038[1].x = sin((tmpvar_1039 - (0.2617983 * tmpvar_1033)));
    tmpvar_1038[1].y = cos((tmpvar_1039 - (0.2617983 * tmpvar_1033)));
    v_1021 = (((tmpvar_1015 - 
      (tmpvar_1022 / 2.0)
    ) / tmpvar_1037) * tmpvar_1038);
    float tmpvar_1040;
    tmpvar_1040 = (sqrt(dot (v_1021, v_1021)) - 0.4);
    float edge0_1041;
    edge0_1041 = -((5.0 / tmpvar_1037));
    float tmpvar_1042;
    tmpvar_1042 = clamp (((tmpvar_1040 - edge0_1041) / -(edge0_1041)), 0.0, 1.0);
    float tmpvar_1043;
    tmpvar_1043 = (1.0 - (tmpvar_1042 * (tmpvar_1042 * 
      (3.0 - (2.0 * tmpvar_1042))
    )));
    vec3 tmpvar_1044;
    tmpvar_1044.z = 0.0;
    tmpvar_1044.xy = (v_1021 / 0.4);
    float tmpvar_1045;
    tmpvar_1045 = sqrt(dot (tmpvar_1044, tmpvar_1044));
    if ((tmpvar_1045 < 1.0)) {
      vec3 tmpvar_1046;
      tmpvar_1046.xy = tmpvar_1044.xy;
      tmpvar_1046.z = sqrt(((1.0 - 
        (tmpvar_1044.x * tmpvar_1044.x)
      ) - (tmpvar_1044.y * tmpvar_1044.y)));
      float tmpvar_1047;
      tmpvar_1047 = clamp (((
        (pow ((dot (tmpvar_1046, tmpvar_1036) * (1.0 - tmpvar_1033)), 0.75) - 0.5)
       - -0.05) / 0.1), 0.0, 1.0);
      s_1020 = (tmpvar_1043 * mix ((0.1 * vec4(tmpvar_1023)), vec4(tmpvar_1023), (tmpvar_1047 * 
        (tmpvar_1047 * (3.0 - (2.0 * tmpvar_1047)))
      )));
    } else {
      s_1020 = vec4(0.0, 0.0, 0.0, 0.0);
    };
    vec3 tmpvar_1048;
    tmpvar_1048.z = 0.0;
    tmpvar_1048.xy = (v_1021 / 0.4);
    p_1019 = tmpvar_1048;
    float tmpvar_1049;
    tmpvar_1049 = sqrt(dot (tmpvar_1048, tmpvar_1048));
    if ((tmpvar_1049 < 1.0)) {
      vec3 tmpvar_1050;
      tmpvar_1050.xy = tmpvar_1048.xy;
      tmpvar_1050.z = sqrt(((1.0 - 
        (tmpvar_1048.x * tmpvar_1048.x)
      ) - (tmpvar_1048.y * tmpvar_1048.y)));
      p_1019 = tmpvar_1050;
    } else {
      p_1019 = normalize(p_1019);
    };
    p_1019 = (p_1019 - vec3(0.0, 0.0, 0.406));
    float tmpvar_1051;
    tmpvar_1051 = clamp ((tmpvar_1040 / 0.006), 0.0, 1.0);
    vec2 x_1052;
    x_1052 = (tmpvar_1015 - (5250.0 * zoom));
    tmpvar_1014 = ((s_1020 + (
      clamp ((dot (p_1019, tmpvar_1036) * (1.0 - tmpvar_1033)), 0.0, 1.0)
     * 
      (vec4(5.0, 1.225, 0.7, 0.25) * (1.0 - (tmpvar_1051 * (tmpvar_1051 * 
        (3.0 - (2.0 * tmpvar_1051))
      ))))
    )) + (tmpvar_867 * float(
      (sqrt(dot (x_1052, x_1052)) >= (4195.0 * zoom))
    )));
  } else {
    tmpvar_1014 = tmpvar_867;
  };
  buff_11 = tmpvar_1014;
  vec4 tmpvar_1053;
  if (paused) {
    tmpvar_1053 = vec4(0.0, 0.0, 0.0, 1.0);
  } else {
    vec2 tmpvar_1054;
    float tmpvar_1055;
    tmpvar_1055 = (radius / 2.0);
    tmpvar_1054 = (((shippos + tmpvar_1055) / iResolution.xy) - 0.5);
    vec2 tmpvar_1056;
    tmpvar_1056 = (((
      (tmpvar_2 - (-(shippos) + iResolution.xy))
     + tmpvar_1055) + (
      (radius * 3.0)
     * tmpvar_1054)) / iResolution.xy);
    float tmpvar_1057;
    float tmpvar_1058;
    tmpvar_1058 = (min (abs(
      (tmpvar_1056.x / tmpvar_1056.y)
    ), 1.0) / max (abs(
      (tmpvar_1056.x / tmpvar_1056.y)
    ), 1.0));
    float tmpvar_1059;
    tmpvar_1059 = (tmpvar_1058 * tmpvar_1058);
    tmpvar_1059 = (((
      ((((
        ((((-0.01213232 * tmpvar_1059) + 0.05368138) * tmpvar_1059) - 0.1173503)
       * tmpvar_1059) + 0.1938925) * tmpvar_1059) - 0.3326756)
     * tmpvar_1059) + 0.9999793) * tmpvar_1058);
    tmpvar_1059 = (tmpvar_1059 + (float(
      (abs((tmpvar_1056.x / tmpvar_1056.y)) > 1.0)
    ) * (
      (tmpvar_1059 * -2.0)
     + 1.570796)));
    tmpvar_1057 = (tmpvar_1059 * sign((tmpvar_1056.x / tmpvar_1056.y)));
    if ((abs(tmpvar_1056.y) > (1e-08 * abs(tmpvar_1056.x)))) {
      if ((tmpvar_1056.y < 0.0)) {
        if ((tmpvar_1056.x >= 0.0)) {
          tmpvar_1057 += 3.141593;
        } else {
          tmpvar_1057 = (tmpvar_1057 - 3.141593);
        };
      };
    } else {
      tmpvar_1057 = (sign(tmpvar_1056.x) * 1.570796);
    };
    float tmpvar_1060;
    tmpvar_1060 = ceil((tmpvar_1057 * 600.0));
    float tmpvar_1061;
    tmpvar_1061 = cos(tmpvar_1060);
    float tmpvar_1062;
    tmpvar_1062 = (tmpvar_1061 / dot (tmpvar_1056, tmpvar_1056));
    vec2 x_1063;
    x_1063 = (tmpvar_1054 * zoom);
    tmpvar_1053 = vec4(max (0.0, (min (1.0, 
      (exp((fract(
        ((tmpvar_1062 + (tmpvar_1061 * tmpvar_1060)) + time)
      ) * -100.0)) / tmpvar_1062)
    ) * abs(
      sqrt(dot (x_1063, x_1063))
    ))));
  };
  buff_11 = (tmpvar_1014 + tmpvar_1053);
  mcol_10 = buff_11;
  vec2 pos_1064;
  pos_1064 = ((tmpvar_2 - (en3pos * zoom)) - shippos);
  mat2 tmpvar_1065;
  float tmpvar_1066;
  tmpvar_1066 = (tax + 1.57079);
  tmpvar_1065[0].x = cos((tmpvar_1066 + 0.7305999));
  tmpvar_1065[0].y = -(sin((tmpvar_1066 + 0.7305999)));
  tmpvar_1065[1].x = sin((tmpvar_1066 + 0.7305999));
  tmpvar_1065[1].y = cos((tmpvar_1066 + 0.7305999));
  pos_1064 = (pos_1064 * tmpvar_1065);
  vec4 tmpvar_1067;
  float tmpvar_1068;
  tmpvar_1068 = (900.0 * zoom);
  if ((((
    (pos_1064.x > -((300.0 * zoom)))
   && 
    (pos_1064.x < (tmpvar_1068 + (300.0 * zoom)))
  ) && (pos_1064.y > 
    -((300.0 * zoom))
  )) && (pos_1064.y < (tmpvar_1068 + 
    (300.0 * zoom)
  )))) {
    float boxx_1069;
    vec3 color_1070;
    vec2 tmpvar_1071;
    tmpvar_1071 = (pos_1064 / tmpvar_1068);
    vec2 tmpvar_1072;
    tmpvar_1072 = (-(tmpvar_1071) + 0.5);
    float tmpvar_1073;
    tmpvar_1073 = (0.9 + cos((time + 
      (sqrt(dot (tmpvar_1072, tmpvar_1072)) * 10.0)
    )));
    color_1070 = vec3(0.0, 0.0, 0.0);
    float tmpvar_1074;
    float tmpvar_1075;
    tmpvar_1075 = (tax / 0.29);
    tmpvar_1074 = clamp (tmpvar_1075, 0.0, 1.0);
    float tmpvar_1076;
    float tmpvar_1077;
    tmpvar_1077 = (tax - 0.7);
    tmpvar_1076 = clamp ((tmpvar_1077 / -0.41), 0.0, 1.0);
    float tmpvar_1078;
    tmpvar_1078 = ((1.0 - (tmpvar_1074 * 
      (tmpvar_1074 * (3.0 - (2.0 * tmpvar_1074)))
    )) + (1.0 - (tmpvar_1076 * 
      (tmpvar_1076 * (3.0 - (2.0 * tmpvar_1076)))
    )));
    vec2 tmpvar_1079;
    tmpvar_1079.x = 0.08;
    tmpvar_1079.y = (0.3 - (0.07 * tmpvar_1078));
    float tmpvar_1080;
    tmpvar_1080 = clamp (tmpvar_1075, 0.0, 1.0);
    float tmpvar_1081;
    tmpvar_1081 = clamp ((tmpvar_1077 / -0.41), 0.0, 1.0);
    vec2 tmpvar_1082;
    tmpvar_1082.x = 9.0;
    tmpvar_1082.y = (((
      (1.0 - (tmpvar_1080 * (tmpvar_1080 * (3.0 - 
        (2.0 * tmpvar_1080)
      ))))
     + 
      (1.0 - (tmpvar_1081 * (tmpvar_1081 * (3.0 - 
        (2.0 * tmpvar_1081)
      ))))
    ) * 2.0) + 7.0);
    vec2 pos_1083;
    pos_1083 = (abs((
      ((pos_1064 / (900.0 * zoom)) - 0.5)
     * 50.0)) - tmpvar_1082);
    if ((pos_1083.x < pos_1083.y)) {
      pos_1083 = pos_1083.yx;
    };
    pos_1083 = (abs(pos_1083) - (tmpvar_1082 * 0.5));
    if ((pos_1083.x < pos_1083.y)) {
      pos_1083 = pos_1083.yx;
    };
    pos_1083 = (abs(pos_1083) - (tmpvar_1082 * 0.25));
    if ((pos_1083.x < pos_1083.y)) {
      pos_1083 = pos_1083.yx;
    };
    pos_1083 = (abs(pos_1083) - (tmpvar_1082 * 0.125));
    if ((pos_1083.x < pos_1083.y)) {
      pos_1083 = pos_1083.yx;
    };
    pos_1083 = (abs(pos_1083) - (tmpvar_1082 * 0.0625));
    if ((pos_1083.x < pos_1083.y)) {
      pos_1083 = pos_1083.yx;
    };
    pos_1083 = (abs(pos_1083) - (tmpvar_1082 * 0.03125));
    if ((pos_1083.x < pos_1083.y)) {
      pos_1083 = pos_1083.yx;
    };
    float tmpvar_1084;
    tmpvar_1084 = abs(pos_1083.x);
    bool tmpvar_1085;
    if ((tmpvar_1084 < 0.683)) {
      tmpvar_1085 = (abs(pos_1083.y) < 0.83);
    } else {
      tmpvar_1085 = bool(0);
    };
    vec2 tmpvar_1086;
    if (tmpvar_1085) {
      float tmpvar_1087;
      tmpvar_1087 = clamp (((
        sqrt(dot (pos_1083, pos_1083))
       - 0.1) / 2.9), 0.0, 1.0);
      vec2 tmpvar_1088;
      tmpvar_1088.x = 1.0;
      tmpvar_1088.y = (tmpvar_1087 * (tmpvar_1087 * (3.0 - 
        (2.0 * tmpvar_1087)
      )));
      tmpvar_1086 = tmpvar_1088;
    } else {
      float tmpvar_1089;
      tmpvar_1089 = clamp (((
        sqrt(dot (pos_1083, pos_1083))
       - 1.5) / -1.5), 0.0, 1.0);
      vec2 tmpvar_1090;
      tmpvar_1090.x = 0.0;
      tmpvar_1090.y = (tmpvar_1089 * (tmpvar_1089 * (3.0 - 
        (2.0 * tmpvar_1089)
      )));
      tmpvar_1086 = tmpvar_1090;
    };
    vec2 tmpvar_1091;
    tmpvar_1091 = max ((abs(
      (tmpvar_1071 - vec2(0.5, 0.5))
    ) - tmpvar_1079), 0.0);
    float tmpvar_1092;
    tmpvar_1092 = clamp (((tax - 0.19) / 0.2), 0.0, 1.0);
    float tmpvar_1093;
    tmpvar_1093 = clamp (((tax - 0.65) / -0.26), 0.0, 1.0);
    boxx_1069 = ((1.0 - float(
      (sqrt(dot (tmpvar_1091, tmpvar_1091)) >= 0.001)
    )) * (float(
      (abs((pos_1064.x - (
        (sin(((pos_1064.y / -0.22) + time)) * 222.0)
       + 
        ((900.0 * zoom) / 2.0)
      ))) < (15.0 / zoom))
    ) * (1.0 - 
      (0.9 * ((1.0 - (tmpvar_1092 * 
        (tmpvar_1092 * (3.0 - (2.0 * tmpvar_1092)))
      )) + (1.0 - (tmpvar_1093 * 
        (tmpvar_1093 * (3.0 - (2.0 * tmpvar_1093)))
      ))))
    )));
    float tmpvar_1094;
    tmpvar_1094 = clamp (((tmpvar_1086.y - 0.05) / -0.05), 0.0, 1.0);
    float tmpvar_1095;
    tmpvar_1095 = clamp (((tmpvar_1086.y - 0.001) / -0.001), 0.0, 1.0);
    float tmpvar_1096;
    tmpvar_1096 = clamp ((0.039 / (tmpvar_1086.y - -0.002)), 0.0, 1.0);
    vec3 tmpvar_1097;
    tmpvar_1097.xz = vec2(0.0, 1.0);
    tmpvar_1097.y = (0.4 + (0.9 * (1.0 - tmpvar_1078)));
    color_1070 = (((
      (0.85 * (tmpvar_1094 * (tmpvar_1094 * (3.0 - 
        (2.0 * tmpvar_1094)
      ))))
     * tmpvar_1086.x) + (
      (0.1 * (tmpvar_1095 * (tmpvar_1095 * (3.0 - 
        (2.0 * tmpvar_1095)
      ))))
     * tmpvar_1086.x)) + ((tmpvar_1073 * 
      (tmpvar_1096 * (tmpvar_1096 * (3.0 - (2.0 * tmpvar_1096))))
    ) * (tmpvar_1097 * tmpvar_1086.x)));
    vec4 tmpvar_1098;
    tmpvar_1098.w = 1.0;
    tmpvar_1098.xyz = color_1070;
    vec3 finalColor_1099;
    float tmpvar_1100;
    if (en3hit) {
      float tmpvar_1101;
      tmpvar_1101 = clamp (((lpower - 20.0) / -20.0), 0.0, 1.0);
      tmpvar_1100 = (2.0 * (tmpvar_1101 * (tmpvar_1101 * 
        (3.0 - (2.0 * tmpvar_1101))
      )));
    } else {
      tmpvar_1100 = 0.0;
    };
    float tmpvar_1102;
    float tmpvar_1103;
    tmpvar_1103 = sin(time);
    tmpvar_1102 = (0.015 + ((tmpvar_1100 / 50.0) * cos(tmpvar_1103)));
    vec2 tmpvar_1104;
    tmpvar_1104 = (((pos_1064 / 
      (900.0 * zoom)
    ) * 2.0) - 1.0);
    finalColor_1099 = vec3(0.0, 0.0, 0.0);
    vec3 tmpvar_1105;
    tmpvar_1105.y = 0.5;
    tmpvar_1105.x = (0.3 + tmpvar_1100);
    tmpvar_1105.z = (2.5 - abs((tmpvar_1100 * 
      cos(tmpvar_1103)
    )));
    vec2 x_1106;
    x_1106 = ((tmpvar_1104 / 1.6) * 0.5);
    vec2 tmpvar_1107;
    tmpvar_1107 = max (((
      -(tmpvar_1104)
     / 1.6) - vec2(0.572, 0.0915)), sqrt(dot (x_1106, x_1106)));
    float tmpvar_1108;
    tmpvar_1108 = sqrt(dot (tmpvar_1107, tmpvar_1107));
    float y_over_x_1109;
    y_over_x_1109 = (tmpvar_1104.y / tmpvar_1104.x);
    float tmpvar_1110;
    tmpvar_1110 = (min (abs(y_over_x_1109), 1.0) / max (abs(y_over_x_1109), 1.0));
    float tmpvar_1111;
    tmpvar_1111 = (tmpvar_1110 * tmpvar_1110);
    tmpvar_1111 = (((
      ((((
        ((((-0.01213232 * tmpvar_1111) + 0.05368138) * tmpvar_1111) - 0.1173503)
       * tmpvar_1111) + 0.1938925) * tmpvar_1111) - 0.3326756)
     * tmpvar_1111) + 0.9999793) * tmpvar_1110);
    tmpvar_1111 = (tmpvar_1111 + (float(
      (abs(y_over_x_1109) > 1.0)
    ) * (
      (tmpvar_1111 * -2.0)
     + 1.570796)));
    float tmpvar_1112;
    tmpvar_1112 = sin(((
      (tmpvar_1111 * sign(y_over_x_1109))
     * 30.0) + (time * -10.0)));
    float v_1113;
    vec2 xy_1114;
    xy_1114 = (tmpvar_1104 * 200.0);
    vec2 uv_1115;
    vec2 tmpvar_1116;
    tmpvar_1116 = floor(xy_1114);
    vec2 tmpvar_1117;
    tmpvar_1117 = (xy_1114 - tmpvar_1116);
    uv_1115 = ((tmpvar_1117 * tmpvar_1117) * (3.0 - (2.0 * tmpvar_1117)));
    float tmpvar_1118;
    tmpvar_1118 = fract((cos(
      dot (tmpvar_1116, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1119;
    tmpvar_1119.x = (tmpvar_1116.x + 1.0);
    tmpvar_1119.y = tmpvar_1116.y;
    float tmpvar_1120;
    tmpvar_1120 = fract((cos(
      dot (tmpvar_1119, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1121;
    tmpvar_1121.x = tmpvar_1116.x;
    tmpvar_1121.y = (tmpvar_1116.y + 1.0);
    float tmpvar_1122;
    tmpvar_1122 = fract((cos(
      dot (tmpvar_1121, vec2(21.9898, 78.233))
    ) * 43758.55));
    v_1113 = (((
      (tmpvar_1118 + ((tmpvar_1120 - tmpvar_1118) * uv_1115.x))
     + 
      ((tmpvar_1122 - tmpvar_1118) * uv_1115.y)
    ) + (
      ((((tmpvar_1118 - tmpvar_1120) - tmpvar_1122) + fract((
        cos(dot ((tmpvar_1116 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
       * 43758.55))) * uv_1115.x)
     * uv_1115.y)) * 0.5);
    if (best) {
      vec2 xy_1123;
      xy_1123 = (tmpvar_1104 * 100.0);
      vec2 uv_1124;
      vec2 tmpvar_1125;
      tmpvar_1125 = floor(xy_1123);
      vec2 tmpvar_1126;
      tmpvar_1126 = (xy_1123 - tmpvar_1125);
      uv_1124 = ((tmpvar_1126 * tmpvar_1126) * (3.0 - (2.0 * tmpvar_1126)));
      float tmpvar_1127;
      tmpvar_1127 = fract((cos(
        dot (tmpvar_1125, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1128;
      tmpvar_1128.x = (tmpvar_1125.x + 1.0);
      tmpvar_1128.y = tmpvar_1125.y;
      float tmpvar_1129;
      tmpvar_1129 = fract((cos(
        dot (tmpvar_1128, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1130;
      tmpvar_1130.x = tmpvar_1125.x;
      tmpvar_1130.y = (tmpvar_1125.y + 1.0);
      float tmpvar_1131;
      tmpvar_1131 = fract((cos(
        dot (tmpvar_1130, vec2(21.9898, 78.233))
      ) * 43758.55));
      v_1113 = (v_1113 + ((
        ((tmpvar_1127 + ((tmpvar_1129 - tmpvar_1127) * uv_1124.x)) + ((tmpvar_1131 - tmpvar_1127) * uv_1124.y))
       + 
        ((((
          (tmpvar_1127 - tmpvar_1129)
         - tmpvar_1131) + fract(
          (cos(dot ((tmpvar_1125 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_1124.x) * uv_1124.y)
      ) * 0.25));
      vec2 xy_1132;
      xy_1132 = (tmpvar_1104 * 50.0);
      vec2 uv_1133;
      vec2 tmpvar_1134;
      tmpvar_1134 = floor(xy_1132);
      vec2 tmpvar_1135;
      tmpvar_1135 = (xy_1132 - tmpvar_1134);
      uv_1133 = ((tmpvar_1135 * tmpvar_1135) * (3.0 - (2.0 * tmpvar_1135)));
      float tmpvar_1136;
      tmpvar_1136 = fract((cos(
        dot (tmpvar_1134, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1137;
      tmpvar_1137.x = (tmpvar_1134.x + 1.0);
      tmpvar_1137.y = tmpvar_1134.y;
      float tmpvar_1138;
      tmpvar_1138 = fract((cos(
        dot (tmpvar_1137, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1139;
      tmpvar_1139.x = tmpvar_1134.x;
      tmpvar_1139.y = (tmpvar_1134.y + 1.0);
      float tmpvar_1140;
      tmpvar_1140 = fract((cos(
        dot (tmpvar_1139, vec2(21.9898, 78.233))
      ) * 43758.55));
      v_1113 = (v_1113 + ((
        ((tmpvar_1136 + ((tmpvar_1138 - tmpvar_1136) * uv_1133.x)) + ((tmpvar_1140 - tmpvar_1136) * uv_1133.y))
       + 
        ((((
          (tmpvar_1136 - tmpvar_1138)
         - tmpvar_1140) + fract(
          (cos(dot ((tmpvar_1134 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_1133.x) * uv_1133.y)
      ) * 0.125));
    };
    finalColor_1099 = (tmpvar_1105 * abs((0.003 / 
      (tmpvar_1108 - (0.206 + (0.5 * (
        (((tmpvar_1102 * tmpvar_1112) * 0.5) + 0.5)
       + 
        (v_1113 * 0.15)
      ))))
    )));
    vec3 tmpvar_1141;
    tmpvar_1141.z = 0.5;
    tmpvar_1141.x = (1.3 + tmpvar_1100);
    tmpvar_1141.y = (0.5 + abs((tmpvar_1100 * 
      sin(cos(time))
    )));
    vec2 x_1142;
    x_1142 = ((tmpvar_1104 / 1.6) * 0.5);
    vec2 tmpvar_1143;
    tmpvar_1143 = max (((
      -(tmpvar_1104)
     / 1.6) - vec2(0.572, 0.0915)), sqrt(dot (x_1142, x_1142)));
    float tmpvar_1144;
    tmpvar_1144 = sqrt(dot (tmpvar_1143, tmpvar_1143));
    float y_over_x_1145;
    y_over_x_1145 = (tmpvar_1104.y / tmpvar_1104.x);
    float tmpvar_1146;
    tmpvar_1146 = (min (abs(y_over_x_1145), 1.0) / max (abs(y_over_x_1145), 1.0));
    float tmpvar_1147;
    tmpvar_1147 = (tmpvar_1146 * tmpvar_1146);
    tmpvar_1147 = (((
      ((((
        ((((-0.01213232 * tmpvar_1147) + 0.05368138) * tmpvar_1147) - 0.1173503)
       * tmpvar_1147) + 0.1938925) * tmpvar_1147) - 0.3326756)
     * tmpvar_1147) + 0.9999793) * tmpvar_1146);
    tmpvar_1147 = (tmpvar_1147 + (float(
      (abs(y_over_x_1145) > 1.0)
    ) * (
      (tmpvar_1147 * -2.0)
     + 1.570796)));
    float tmpvar_1148;
    tmpvar_1148 = sin(((
      (tmpvar_1147 * sign(y_over_x_1145))
     * 30.0) + (time * 5.0)));
    float v_1149;
    vec2 xy_1150;
    xy_1150 = (tmpvar_1104 * 30.0);
    vec2 uv_1151;
    vec2 tmpvar_1152;
    tmpvar_1152 = floor(xy_1150);
    vec2 tmpvar_1153;
    tmpvar_1153 = (xy_1150 - tmpvar_1152);
    uv_1151 = ((tmpvar_1153 * tmpvar_1153) * (3.0 - (2.0 * tmpvar_1153)));
    float tmpvar_1154;
    tmpvar_1154 = fract((cos(
      dot (tmpvar_1152, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1155;
    tmpvar_1155.x = (tmpvar_1152.x + 1.0);
    tmpvar_1155.y = tmpvar_1152.y;
    float tmpvar_1156;
    tmpvar_1156 = fract((cos(
      dot (tmpvar_1155, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1157;
    tmpvar_1157.x = tmpvar_1152.x;
    tmpvar_1157.y = (tmpvar_1152.y + 1.0);
    float tmpvar_1158;
    tmpvar_1158 = fract((cos(
      dot (tmpvar_1157, vec2(21.9898, 78.233))
    ) * 43758.55));
    v_1149 = (((
      (tmpvar_1154 + ((tmpvar_1156 - tmpvar_1154) * uv_1151.x))
     + 
      ((tmpvar_1158 - tmpvar_1154) * uv_1151.y)
    ) + (
      ((((tmpvar_1154 - tmpvar_1156) - tmpvar_1158) + fract((
        cos(dot ((tmpvar_1152 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
       * 43758.55))) * uv_1151.x)
     * uv_1151.y)) * 0.5);
    if (best) {
      vec2 xy_1159;
      xy_1159 = (tmpvar_1104 * 6.0);
      vec2 uv_1160;
      vec2 tmpvar_1161;
      tmpvar_1161 = floor(xy_1159);
      vec2 tmpvar_1162;
      tmpvar_1162 = (xy_1159 - tmpvar_1161);
      uv_1160 = ((tmpvar_1162 * tmpvar_1162) * (3.0 - (2.0 * tmpvar_1162)));
      float tmpvar_1163;
      tmpvar_1163 = fract((cos(
        dot (tmpvar_1161, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1164;
      tmpvar_1164.x = (tmpvar_1161.x + 1.0);
      tmpvar_1164.y = tmpvar_1161.y;
      float tmpvar_1165;
      tmpvar_1165 = fract((cos(
        dot (tmpvar_1164, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1166;
      tmpvar_1166.x = tmpvar_1161.x;
      tmpvar_1166.y = (tmpvar_1161.y + 1.0);
      float tmpvar_1167;
      tmpvar_1167 = fract((cos(
        dot (tmpvar_1166, vec2(21.9898, 78.233))
      ) * 43758.55));
      v_1149 = (v_1149 + ((
        ((tmpvar_1163 + ((tmpvar_1165 - tmpvar_1163) * uv_1160.x)) + ((tmpvar_1167 - tmpvar_1163) * uv_1160.y))
       + 
        ((((
          (tmpvar_1163 - tmpvar_1165)
         - tmpvar_1167) + fract(
          (cos(dot ((tmpvar_1161 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_1160.x) * uv_1160.y)
      ) * 0.25));
      vec2 xy_1168;
      xy_1168 = (tmpvar_1104 * 5.0);
      vec2 uv_1169;
      vec2 tmpvar_1170;
      tmpvar_1170 = floor(xy_1168);
      vec2 tmpvar_1171;
      tmpvar_1171 = (xy_1168 - tmpvar_1170);
      uv_1169 = ((tmpvar_1171 * tmpvar_1171) * (3.0 - (2.0 * tmpvar_1171)));
      float tmpvar_1172;
      tmpvar_1172 = fract((cos(
        dot (tmpvar_1170, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1173;
      tmpvar_1173.x = (tmpvar_1170.x + 1.0);
      tmpvar_1173.y = tmpvar_1170.y;
      float tmpvar_1174;
      tmpvar_1174 = fract((cos(
        dot (tmpvar_1173, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1175;
      tmpvar_1175.x = tmpvar_1170.x;
      tmpvar_1175.y = (tmpvar_1170.y + 1.0);
      float tmpvar_1176;
      tmpvar_1176 = fract((cos(
        dot (tmpvar_1175, vec2(21.9898, 78.233))
      ) * 43758.55));
      v_1149 = (v_1149 + ((
        ((tmpvar_1172 + ((tmpvar_1174 - tmpvar_1172) * uv_1169.x)) + ((tmpvar_1176 - tmpvar_1172) * uv_1169.y))
       + 
        ((((
          (tmpvar_1172 - tmpvar_1174)
         - tmpvar_1176) + fract(
          (cos(dot ((tmpvar_1170 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
        )) * uv_1169.x) * uv_1169.y)
      ) * 0.125));
    };
    finalColor_1099 = (finalColor_1099 + (tmpvar_1141 * abs(
      (0.003 / (tmpvar_1144 - (0.2 + (0.5 * 
        ((((tmpvar_1102 * tmpvar_1148) * 0.5) + 0.5) + (v_1149 * 0.15))
      ))))
    )));
    if (best) {
      vec3 tmpvar_1177;
      tmpvar_1177.z = 0.652;
      tmpvar_1177.x = (0.1 + tmpvar_1100);
      tmpvar_1177.y = (0.951 + abs((tmpvar_1100 * 
        sin(cos(time))
      )));
      vec2 x_1178;
      x_1178 = ((tmpvar_1104 / 1.6) * 0.5);
      vec2 tmpvar_1179;
      tmpvar_1179 = max (((
        -(tmpvar_1104)
       / 1.6) - vec2(0.572, 0.0915)), sqrt(dot (x_1178, x_1178)));
      float tmpvar_1180;
      tmpvar_1180 = sqrt(dot (tmpvar_1179, tmpvar_1179));
      float y_over_x_1181;
      y_over_x_1181 = (tmpvar_1104.y / tmpvar_1104.x);
      float tmpvar_1182;
      tmpvar_1182 = (min (abs(y_over_x_1181), 1.0) / max (abs(y_over_x_1181), 1.0));
      float tmpvar_1183;
      tmpvar_1183 = (tmpvar_1182 * tmpvar_1182);
      tmpvar_1183 = (((
        ((((
          ((((-0.01213232 * tmpvar_1183) + 0.05368138) * tmpvar_1183) - 0.1173503)
         * tmpvar_1183) + 0.1938925) * tmpvar_1183) - 0.3326756)
       * tmpvar_1183) + 0.9999793) * tmpvar_1182);
      tmpvar_1183 = (tmpvar_1183 + (float(
        (abs(y_over_x_1181) > 1.0)
      ) * (
        (tmpvar_1183 * -2.0)
       + 1.570796)));
      float tmpvar_1184;
      tmpvar_1184 = sin(((
        (tmpvar_1183 * sign(y_over_x_1181))
       * 30.0) + (time * 4.0)));
      float v_1185;
      vec2 xy_1186;
      xy_1186 = (tmpvar_1104 * 20.0);
      vec2 uv_1187;
      vec2 tmpvar_1188;
      tmpvar_1188 = floor(xy_1186);
      vec2 tmpvar_1189;
      tmpvar_1189 = (xy_1186 - tmpvar_1188);
      uv_1187 = ((tmpvar_1189 * tmpvar_1189) * (3.0 - (2.0 * tmpvar_1189)));
      float tmpvar_1190;
      tmpvar_1190 = fract((cos(
        dot (tmpvar_1188, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1191;
      tmpvar_1191.x = (tmpvar_1188.x + 1.0);
      tmpvar_1191.y = tmpvar_1188.y;
      float tmpvar_1192;
      tmpvar_1192 = fract((cos(
        dot (tmpvar_1191, vec2(21.9898, 78.233))
      ) * 43758.55));
      vec2 tmpvar_1193;
      tmpvar_1193.x = tmpvar_1188.x;
      tmpvar_1193.y = (tmpvar_1188.y + 1.0);
      float tmpvar_1194;
      tmpvar_1194 = fract((cos(
        dot (tmpvar_1193, vec2(21.9898, 78.233))
      ) * 43758.55));
      v_1185 = (((
        (tmpvar_1190 + ((tmpvar_1192 - tmpvar_1190) * uv_1187.x))
       + 
        ((tmpvar_1194 - tmpvar_1190) * uv_1187.y)
      ) + (
        ((((tmpvar_1190 - tmpvar_1192) - tmpvar_1194) + fract((
          cos(dot ((tmpvar_1188 + vec2(1.0, 1.0)), vec2(21.9898, 78.233)))
         * 43758.55))) * uv_1187.x)
       * uv_1187.y)) * 0.5);
      if (best) {
        vec2 xy_1195;
        xy_1195 = (tmpvar_1104 * 30.0);
        vec2 uv_1196;
        vec2 tmpvar_1197;
        tmpvar_1197 = floor(xy_1195);
        vec2 tmpvar_1198;
        tmpvar_1198 = (xy_1195 - tmpvar_1197);
        uv_1196 = ((tmpvar_1198 * tmpvar_1198) * (3.0 - (2.0 * tmpvar_1198)));
        float tmpvar_1199;
        tmpvar_1199 = fract((cos(
          dot (tmpvar_1197, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_1200;
        tmpvar_1200.x = (tmpvar_1197.x + 1.0);
        tmpvar_1200.y = tmpvar_1197.y;
        float tmpvar_1201;
        tmpvar_1201 = fract((cos(
          dot (tmpvar_1200, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_1202;
        tmpvar_1202.x = tmpvar_1197.x;
        tmpvar_1202.y = (tmpvar_1197.y + 1.0);
        float tmpvar_1203;
        tmpvar_1203 = fract((cos(
          dot (tmpvar_1202, vec2(21.9898, 78.233))
        ) * 43758.55));
        v_1185 = (v_1185 + ((
          ((tmpvar_1199 + ((tmpvar_1201 - tmpvar_1199) * uv_1196.x)) + ((tmpvar_1203 - tmpvar_1199) * uv_1196.y))
         + 
          ((((
            (tmpvar_1199 - tmpvar_1201)
           - tmpvar_1203) + fract(
            (cos(dot ((tmpvar_1197 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
          )) * uv_1196.x) * uv_1196.y)
        ) * 0.25));
        vec2 xy_1204;
        xy_1204 = (tmpvar_1104 * 70.0);
        vec2 uv_1205;
        vec2 tmpvar_1206;
        tmpvar_1206 = floor(xy_1204);
        vec2 tmpvar_1207;
        tmpvar_1207 = (xy_1204 - tmpvar_1206);
        uv_1205 = ((tmpvar_1207 * tmpvar_1207) * (3.0 - (2.0 * tmpvar_1207)));
        float tmpvar_1208;
        tmpvar_1208 = fract((cos(
          dot (tmpvar_1206, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_1209;
        tmpvar_1209.x = (tmpvar_1206.x + 1.0);
        tmpvar_1209.y = tmpvar_1206.y;
        float tmpvar_1210;
        tmpvar_1210 = fract((cos(
          dot (tmpvar_1209, vec2(21.9898, 78.233))
        ) * 43758.55));
        vec2 tmpvar_1211;
        tmpvar_1211.x = tmpvar_1206.x;
        tmpvar_1211.y = (tmpvar_1206.y + 1.0);
        float tmpvar_1212;
        tmpvar_1212 = fract((cos(
          dot (tmpvar_1211, vec2(21.9898, 78.233))
        ) * 43758.55));
        v_1185 = (v_1185 + ((
          ((tmpvar_1208 + ((tmpvar_1210 - tmpvar_1208) * uv_1205.x)) + ((tmpvar_1212 - tmpvar_1208) * uv_1205.y))
         + 
          ((((
            (tmpvar_1208 - tmpvar_1210)
           - tmpvar_1212) + fract(
            (cos(dot ((tmpvar_1206 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
          )) * uv_1205.x) * uv_1205.y)
        ) * 0.125));
      };
      finalColor_1099 = (finalColor_1099 + (tmpvar_1177 * (0.51 * 
        abs((0.003 / (tmpvar_1180 - (0.186 + 
          (0.5 * (((
            (tmpvar_1102 * tmpvar_1184)
           * 0.5) + 0.5) + (v_1185 * 0.15)))
        ))))
      )));
    };
    vec4 tmpvar_1213;
    tmpvar_1213.w = 1.0;
    tmpvar_1213.xyz = finalColor_1099;
    float tmpvar_1214;
    float tmpvar_1215;
    tmpvar_1215 = clamp (((tmpvar_1071.y - 1.3) / -0.4), 0.0, 1.0);
    tmpvar_1214 = (tmpvar_1215 * (tmpvar_1215 * (3.0 - 
      (2.0 * tmpvar_1215)
    )));
    float tmpvar_1216;
    float tmpvar_1217;
    tmpvar_1217 = clamp ((tmpvar_1071.y / 0.1), 0.0, 1.0);
    tmpvar_1216 = (tmpvar_1217 * (tmpvar_1217 * (3.0 - 
      (2.0 * tmpvar_1217)
    )));
    float tmpvar_1218;
    float tmpvar_1219;
    tmpvar_1219 = clamp (((tmpvar_1071.x - -0.3) / 0.4), 0.0, 1.0);
    tmpvar_1218 = (tmpvar_1219 * (tmpvar_1219 * (3.0 - 
      (2.0 * tmpvar_1219)
    )));
    float tmpvar_1220;
    float tmpvar_1221;
    tmpvar_1221 = clamp (((tmpvar_1071.x - 1.3) / -0.4), 0.0, 1.0);
    tmpvar_1220 = (tmpvar_1221 * (tmpvar_1221 * (3.0 - 
      (2.0 * tmpvar_1221)
    )));
    vec2 pos_1222;
    pos_1222.x = pos_1064.x;
    float R_1224;
    vec3 color_1225;
    color_1225 = vec3(0.0, 0.0, 0.0);
    pos_1222.y = (pos_1064.y - (pos_1064.x / 4.0));
    R_1224 = (900.0 * zoom);
    for (float blur_1223 = 0.0; blur_1223 < 2.0; blur_1223 += 1.0) {
      float timed_1227;
      timed_1227 = (((blur_1223 / 2.0) / 4.0) + (iTime * 6.0));
      for (float x_1226 = 0.0; x_1226 < 2.0; x_1226 += 1.0) {
        vec2 position_1228;
        vec2 tmpvar_1229;
        tmpvar_1229.x = (x_1226 / 2.0);
        tmpvar_1229.y = 0.0;
        position_1228 = ((pos_1222 + tmpvar_1229) / R_1224);
        position_1228 = (position_1228 * 2.0);
        position_1228 = (position_1228 - 1.25);
        position_1228.x = (position_1228.x + 0.8632537);
        position_1228.x = (position_1228.x * 8.5);
        position_1228.y = (position_1228.y * 1.4);
        position_1228.y = (position_1228.y + 0.4);
        position_1228 = -(position_1228);
        vec2 tmpvar_1230;
        tmpvar_1230.x = 0.04;
        tmpvar_1230.y = (((2.0 * position_1228.y) * (position_1228.x * position_1228.x)) - pow (sin(
          ((pow (position_1228.x, 3.0) * 2.5) - timed_1227)
        ), 0.5));
        color_1225 = (color_1225 + ((0.1 / 
          sqrt(dot (tmpvar_1230, tmpvar_1230))
        ) * vec3(0.0, 0.4, 1.0)));
        vec2 tmpvar_1231;
        tmpvar_1231.x = 0.04;
        tmpvar_1231.y = (((2.0 * position_1228.y) * (position_1228.x * position_1228.x)) + pow (sin(
          ((pow (position_1228.x, 3.0) * 2.5) - timed_1227)
        ), 0.5));
        color_1225 = (color_1225 + ((0.1 / 
          sqrt(dot (tmpvar_1231, tmpvar_1231))
        ) * vec3(0.0, 0.4, 1.0)));
        vec2 tmpvar_1232;
        tmpvar_1232.x = 0.01;
        tmpvar_1232.y = (((3.0 * position_1228.y) * (position_1228.x * position_1228.x)) + (sin(
          (((pow (position_1228.x, 3.0) * 8.0) + ((position_1228.x * position_1228.x) * 32.0)) + timed_1227)
        ) * sin(
          (((position_1228.y * position_1228.x) * (position_1228.x * 16.0)) + sin((timed_1227 / 8.0)))
        )));
        color_1225 = (color_1225 + ((0.1 / 
          sqrt(dot (tmpvar_1232, tmpvar_1232))
        ) * vec3(2.0, 0.3525, 1.8)));
        color_1225 = (color_1225 * float((
          (position_1228.x - 0.9)
         >= 0.0)));
        vec2 position_1233;
        vec2 tmpvar_1234;
        tmpvar_1234.x = (x_1226 / 2.0);
        tmpvar_1234.y = 0.5;
        position_1233 = ((pos_1222 + tmpvar_1234) / R_1224);
        position_1233 = (position_1233 * 2.0);
        position_1233 = (position_1233 - 1.25);
        position_1233.x = (position_1233.x + 0.8632537);
        position_1233.x = (position_1233.x * 8.5);
        position_1233.y = (position_1233.y * 1.4);
        position_1233.y = (position_1233.y + 0.4);
        position_1233 = -(position_1233);
        vec2 tmpvar_1235;
        tmpvar_1235.x = 0.04;
        tmpvar_1235.y = (((2.0 * position_1233.y) * (position_1233.x * position_1233.x)) - pow (sin(
          ((pow (position_1233.x, 3.0) * 2.5) - timed_1227)
        ), 0.5));
        color_1225 = (color_1225 + ((0.1 / 
          sqrt(dot (tmpvar_1235, tmpvar_1235))
        ) * vec3(0.0, 0.4, 1.0)));
        vec2 tmpvar_1236;
        tmpvar_1236.x = 0.04;
        tmpvar_1236.y = (((2.0 * position_1233.y) * (position_1233.x * position_1233.x)) + pow (sin(
          ((pow (position_1233.x, 3.0) * 2.5) - timed_1227)
        ), 0.5));
        color_1225 = (color_1225 + ((0.1 / 
          sqrt(dot (tmpvar_1236, tmpvar_1236))
        ) * vec3(0.0, 0.4, 1.0)));
        vec2 tmpvar_1237;
        tmpvar_1237.x = 0.01;
        tmpvar_1237.y = (((3.0 * position_1233.y) * (position_1233.x * position_1233.x)) + (sin(
          (((pow (position_1233.x, 3.0) * 8.0) + ((position_1233.x * position_1233.x) * 32.0)) + timed_1227)
        ) * sin(
          (((position_1233.y * position_1233.x) * (position_1233.x * 16.0)) + sin((timed_1227 / 8.0)))
        )));
        color_1225 = (color_1225 + ((0.1 / 
          sqrt(dot (tmpvar_1237, tmpvar_1237))
        ) * vec3(2.0, 0.3525, 1.8)));
        color_1225 = (color_1225 * float((
          (position_1233.x - 0.9)
         >= 0.0)));
      };
    };
    vec4 tmpvar_1238;
    tmpvar_1238.w = 1.0;
    tmpvar_1238.xyz = (((color_1225 / 2.0) * 2.0) / 2.0);
    vec4 tmpvar_1239;
    tmpvar_1239 = max (vec4(0.0, 0.0, 0.0, 0.0), tmpvar_1238);
    float tmpvar_1240;
    float tmpvar_1241;
    float tmpvar_1242;
    tmpvar_1242 = sin(time);
    tmpvar_1241 = clamp (((
      (tmpvar_1071.y - (0.1 * tmpvar_1242))
     - 0.8) / -0.1), 0.0, 1.0);
    tmpvar_1240 = (tmpvar_1241 * (tmpvar_1241 * (3.0 - 
      (2.0 * tmpvar_1241)
    )));
    float tmpvar_1243;
    float tmpvar_1244;
    tmpvar_1244 = clamp (((
      (tmpvar_1071.y + (0.1 * tmpvar_1242))
     - 0.2) / 0.1), 0.0, 1.0);
    tmpvar_1243 = (tmpvar_1244 * (tmpvar_1244 * (3.0 - 
      (2.0 * tmpvar_1244)
    )));
    float tmpvar_1245;
    float tmpvar_1246;
    tmpvar_1246 = clamp (((tmpvar_1071.x - -0.3) / 0.4), 0.0, 1.0);
    tmpvar_1245 = (tmpvar_1246 * (tmpvar_1246 * (3.0 - 
      (2.0 * tmpvar_1246)
    )));
    vec2 pos_1247;
    pos_1247.x = pos_1064.x;
    float R_1249;
    vec3 color_1250;
    color_1250 = vec3(0.0, 0.0, 0.0);
    pos_1247.y = (pos_1064.y + (pos_1064.x / 4.0));
    R_1249 = (900.0 * zoom);
    for (float blur_1248 = 0.0; blur_1248 < 2.0; blur_1248 += 1.0) {
      float timed_1252;
      timed_1252 = (((blur_1248 / 2.0) / 4.0) + (-(iTime) * 6.0));
      for (float x_1251 = 0.0; x_1251 < 2.0; x_1251 += 1.0) {
        vec2 position_1253;
        vec2 tmpvar_1254;
        tmpvar_1254.x = (x_1251 / 2.0);
        tmpvar_1254.y = 0.0;
        position_1253 = ((pos_1247 + tmpvar_1254) / R_1249);
        position_1253 = (position_1253 * 2.0);
        position_1253 = (position_1253 - 1.25);
        position_1253.x = (position_1253.x + -0.3674636);
        position_1253.y = (position_1253.y + -0.5);
        position_1253.x = (position_1253.x * 8.5);
        position_1253.y = (position_1253.y * 1.4);
        position_1253.y = (position_1253.y + 0.4);
        vec2 tmpvar_1255;
        tmpvar_1255.x = 0.04;
        tmpvar_1255.y = (((2.0 * position_1253.y) * (position_1253.x * position_1253.x)) - pow (sin(
          ((pow (position_1253.x, 3.0) * 2.5) - timed_1252)
        ), 0.5));
        color_1250 = (color_1250 + ((0.1 / 
          sqrt(dot (tmpvar_1255, tmpvar_1255))
        ) * vec3(0.0, 0.4, 1.0)));
        vec2 tmpvar_1256;
        tmpvar_1256.x = 0.04;
        tmpvar_1256.y = (((2.0 * position_1253.y) * (position_1253.x * position_1253.x)) + pow (sin(
          ((pow (position_1253.x, 3.0) * 2.5) - timed_1252)
        ), 0.5));
        color_1250 = (color_1250 + ((0.1 / 
          sqrt(dot (tmpvar_1256, tmpvar_1256))
        ) * vec3(0.0, 0.4, 1.0)));
        vec2 tmpvar_1257;
        tmpvar_1257.x = 0.01;
        tmpvar_1257.y = (((3.0 * position_1253.y) * (position_1253.x * position_1253.x)) + (sin(
          (((pow (position_1253.x, 3.0) * 8.0) + ((position_1253.x * position_1253.x) * 32.0)) + timed_1252)
        ) * sin(
          (((position_1253.y * position_1253.x) * (position_1253.x * 16.0)) + sin((timed_1252 / 8.0)))
        )));
        color_1250 = (color_1250 + ((0.1 / 
          sqrt(dot (tmpvar_1257, tmpvar_1257))
        ) * vec3(2.0, 0.3525, 1.8)));
        color_1250 = (color_1250 * float((
          (position_1253.x - 0.9)
         >= 0.0)));
        vec2 position_1258;
        vec2 tmpvar_1259;
        tmpvar_1259.x = (x_1251 / 2.0);
        tmpvar_1259.y = 0.5;
        position_1258 = ((pos_1247 + tmpvar_1259) / R_1249);
        position_1258 = (position_1258 * 2.0);
        position_1258 = (position_1258 - 1.25);
        position_1258.x = (position_1258.x + -0.3674636);
        position_1258.y = (position_1258.y + -0.5);
        position_1258.x = (position_1258.x * 8.5);
        position_1258.y = (position_1258.y * 1.4);
        position_1258.y = (position_1258.y + 0.4);
        vec2 tmpvar_1260;
        tmpvar_1260.x = 0.04;
        tmpvar_1260.y = (((2.0 * position_1258.y) * (position_1258.x * position_1258.x)) - pow (sin(
          ((pow (position_1258.x, 3.0) * 2.5) - timed_1252)
        ), 0.5));
        color_1250 = (color_1250 + ((0.1 / 
          sqrt(dot (tmpvar_1260, tmpvar_1260))
        ) * vec3(0.0, 0.4, 1.0)));
        vec2 tmpvar_1261;
        tmpvar_1261.x = 0.04;
        tmpvar_1261.y = (((2.0 * position_1258.y) * (position_1258.x * position_1258.x)) + pow (sin(
          ((pow (position_1258.x, 3.0) * 2.5) - timed_1252)
        ), 0.5));
        color_1250 = (color_1250 + ((0.1 / 
          sqrt(dot (tmpvar_1261, tmpvar_1261))
        ) * vec3(0.0, 0.4, 1.0)));
        vec2 tmpvar_1262;
        tmpvar_1262.x = 0.01;
        tmpvar_1262.y = (((3.0 * position_1258.y) * (position_1258.x * position_1258.x)) + (sin(
          (((pow (position_1258.x, 3.0) * 8.0) + ((position_1258.x * position_1258.x) * 32.0)) + timed_1252)
        ) * sin(
          (((position_1258.y * position_1258.x) * (position_1258.x * 16.0)) + sin((timed_1252 / 8.0)))
        )));
        color_1250 = (color_1250 + ((0.1 / 
          sqrt(dot (tmpvar_1262, tmpvar_1262))
        ) * vec3(2.0, 0.3525, 1.8)));
        color_1250 = (color_1250 * float((
          (position_1258.x - 0.9)
         >= 0.0)));
      };
    };
    vec4 tmpvar_1263;
    tmpvar_1263.w = 1.0;
    tmpvar_1263.xyz = (((color_1250 / 2.0) * 2.0) / 2.0);
    vec4 tmpvar_1264;
    tmpvar_1264 = max (vec4(0.0, 0.0, 0.0, 0.0), tmpvar_1263);
    float tmpvar_1265;
    float tmpvar_1266;
    float tmpvar_1267;
    tmpvar_1267 = sin(time);
    tmpvar_1266 = clamp (((
      (tmpvar_1071.y - (0.1 * tmpvar_1267))
     - 0.8) / -0.1), 0.0, 1.0);
    tmpvar_1265 = (tmpvar_1266 * (tmpvar_1266 * (3.0 - 
      (2.0 * tmpvar_1266)
    )));
    float tmpvar_1268;
    float tmpvar_1269;
    tmpvar_1269 = clamp (((
      (tmpvar_1071.y + (0.1 * tmpvar_1267))
     - 0.2) / 0.1), 0.0, 1.0);
    tmpvar_1268 = (tmpvar_1269 * (tmpvar_1269 * (3.0 - 
      (2.0 * tmpvar_1269)
    )));
    float tmpvar_1270;
    float tmpvar_1271;
    tmpvar_1271 = clamp (((tmpvar_1071.x - 1.3) / -0.4), 0.0, 1.0);
    tmpvar_1270 = (tmpvar_1271 * (tmpvar_1271 * (3.0 - 
      (2.0 * tmpvar_1271)
    )));
    vec3 final_1272;
    vec3 color_1273;
    vec2 st_1274;
    vec2 tmpvar_1275;
    tmpvar_1275 = (pos_1064 / (900.0 * zoom));
    st_1274.x = tmpvar_1275.x;
    st_1274.y = (tmpvar_1275.y + 0.4);
    st_1274 = (st_1274 - vec2(0.5, 0.5));
    float tmpvar_1276;
    tmpvar_1276 = clamp (((tax - 0.19) / 0.2), 0.0, 1.0);
    float tmpvar_1277;
    tmpvar_1277 = clamp (((tax - 0.65) / -0.26), 0.0, 1.0);
    float tmpvar_1278;
    tmpvar_1278 = ((1.0 - (tmpvar_1276 * 
      (tmpvar_1276 * (3.0 - (2.0 * tmpvar_1276)))
    )) + (1.0 - (tmpvar_1277 * 
      (tmpvar_1277 * (3.0 - (2.0 * tmpvar_1277)))
    )));
    float tmpvar_1279;
    tmpvar_1279 = (0.8 * (1.0 - tmpvar_1278));
    vec3 tmpvar_1280;
    tmpvar_1280 = (vec3(pow (abs(st_1274.y), (
      (0.5 - (tmpvar_1279 * 0.4))
     * 5.0))) * vec3(0.849, 0.08369, 0.08));
    color_1273 = tmpvar_1280;
    final_1272 = ((vec3(0.08, 0.003, 0.02) + tmpvar_1280) + vec3(((0.75 + 
      (tmpvar_1279 * 0.2)
    ) - pow (
      abs(st_1274.x)
    , 0.324))));
    float tmpvar_1281;
    tmpvar_1281 = (0.5 + (tmpvar_1279 * 0.5));
    float tmpvar_1282;
    tmpvar_1282 = (sqrt(dot (st_1274, st_1274)) * 2.0);
    float tmpvar_1283;
    float tmpvar_1284;
    tmpvar_1284 = (min (abs(
      (st_1274.y / st_1274.x)
    ), 1.0) / max (abs(
      (st_1274.y / st_1274.x)
    ), 1.0));
    float tmpvar_1285;
    tmpvar_1285 = (tmpvar_1284 * tmpvar_1284);
    tmpvar_1285 = (((
      ((((
        ((((-0.01213232 * tmpvar_1285) + 0.05368138) * tmpvar_1285) - 0.1173503)
       * tmpvar_1285) + 0.1938925) * tmpvar_1285) - 0.3326756)
     * tmpvar_1285) + 0.9999793) * tmpvar_1284);
    tmpvar_1285 = (tmpvar_1285 + (float(
      (abs((st_1274.y / st_1274.x)) > 1.0)
    ) * (
      (tmpvar_1285 * -2.0)
     + 1.570796)));
    tmpvar_1283 = (tmpvar_1285 * sign((st_1274.y / st_1274.x)));
    if ((abs(st_1274.x) > (1e-08 * abs(st_1274.y)))) {
      if ((st_1274.x < 0.0)) {
        if ((st_1274.y >= 0.0)) {
          tmpvar_1283 += 3.141593;
        } else {
          tmpvar_1283 = (tmpvar_1283 - 3.141593);
        };
      };
    } else {
      tmpvar_1283 = (sign(st_1274.y) * 1.570796);
    };
    float tmpvar_1286;
    tmpvar_1286 = (abs(cos(tmpvar_1283)) * 0.01);
    float tmpvar_1287;
    tmpvar_1287 = clamp (((tmpvar_1282 - tmpvar_1286) / (
      ((tmpvar_1286 + 0.02) + (tmpvar_1281 * 0.1))
     - tmpvar_1286)), 0.0, 1.0);
    color_1273 = (vec3((1.0 - (tmpvar_1287 * 
      (tmpvar_1287 * (3.0 - (2.0 * tmpvar_1287)))
    ))) * vec3(0.86, 0.759, 0.41));
    final_1272 = (final_1272 + color_1273);
    float tmpvar_1288;
    tmpvar_1288 = clamp (((tax - 0.19) / 0.46), 0.0, 1.0);
    vec4 tmpvar_1289;
    tmpvar_1289.w = 1.0;
    tmpvar_1289.xyz = final_1272;
    float edge0_1290;
    edge0_1290 = (0.05 + (0.05 * st_1274.y));
    float tmpvar_1291;
    tmpvar_1291 = clamp (((
      abs(st_1274.x)
     - edge0_1290) / (0.04 - edge0_1290)), 0.0, 1.0);
    float edge0_1292;
    edge0_1292 = (2.5 + (3.0 * (1.0 - 
      (1.0 - (tmpvar_1288 * (tmpvar_1288 * (3.0 - 
        (2.0 * tmpvar_1288)
      ))))
    )));
    float tmpvar_1293;
    tmpvar_1293 = clamp (((
      sqrt(dot (st_1274, st_1274))
     - edge0_1292) / -(edge0_1292)), 0.0, 1.0);
    tmpvar_1067 = (((
      (((tmpvar_1098 + (boxx_1069 * 
        ((1.0 - (tmpvar_1086.y * 2.0)) - tmpvar_1086.x)
      )) + ((tmpvar_1213 * tmpvar_1214) * (
        (tmpvar_1216 * tmpvar_1218)
       * tmpvar_1220))) + (((
        (tmpvar_1239 * tmpvar_1240)
       * tmpvar_1243) * (1.0 - tmpvar_1086.x)) * tmpvar_1245))
     + 
      ((((tmpvar_1264 * tmpvar_1265) * tmpvar_1268) * (1.0 - tmpvar_1086.x)) * tmpvar_1270)
    ) + (
      (((tmpvar_1289 * (tmpvar_1291 * 
        (tmpvar_1291 * (3.0 - (2.0 * tmpvar_1291)))
      )) * float((st_1274.y >= 0.0))) * (1.0 - tmpvar_1278))
     * 
      (tmpvar_1293 * (tmpvar_1293 * (3.0 - (2.0 * tmpvar_1293))))
    )) + (buff_11 * (1.0 - tmpvar_1086.x)));
  } else {
    vec3 final_1294;
    vec3 color_1295;
    vec2 st_1296;
    vec2 tmpvar_1297;
    tmpvar_1297 = (pos_1064 / (900.0 * zoom));
    st_1296.x = tmpvar_1297.x;
    st_1296.y = (tmpvar_1297.y + 0.4);
    st_1296 = (st_1296 - vec2(0.5, 0.5));
    float tmpvar_1298;
    tmpvar_1298 = clamp (((tax - 0.19) / 0.2), 0.0, 1.0);
    float tmpvar_1299;
    tmpvar_1299 = clamp (((tax - 0.65) / -0.26), 0.0, 1.0);
    float tmpvar_1300;
    tmpvar_1300 = ((1.0 - (tmpvar_1298 * 
      (tmpvar_1298 * (3.0 - (2.0 * tmpvar_1298)))
    )) + (1.0 - (tmpvar_1299 * 
      (tmpvar_1299 * (3.0 - (2.0 * tmpvar_1299)))
    )));
    float tmpvar_1301;
    tmpvar_1301 = (0.8 * (1.0 - tmpvar_1300));
    vec3 tmpvar_1302;
    tmpvar_1302 = (vec3(pow (abs(st_1296.y), (
      (0.5 - (tmpvar_1301 * 0.4))
     * 5.0))) * vec3(0.849, 0.08369, 0.08));
    color_1295 = tmpvar_1302;
    final_1294 = ((vec3(0.08, 0.003, 0.02) + tmpvar_1302) + vec3(((0.75 + 
      (tmpvar_1301 * 0.2)
    ) - pow (
      abs(st_1296.x)
    , 0.324))));
    float tmpvar_1303;
    tmpvar_1303 = (0.5 + (tmpvar_1301 * 0.5));
    float tmpvar_1304;
    tmpvar_1304 = (sqrt(dot (st_1296, st_1296)) * 2.0);
    float tmpvar_1305;
    float tmpvar_1306;
    tmpvar_1306 = (min (abs(
      (st_1296.y / st_1296.x)
    ), 1.0) / max (abs(
      (st_1296.y / st_1296.x)
    ), 1.0));
    float tmpvar_1307;
    tmpvar_1307 = (tmpvar_1306 * tmpvar_1306);
    tmpvar_1307 = (((
      ((((
        ((((-0.01213232 * tmpvar_1307) + 0.05368138) * tmpvar_1307) - 0.1173503)
       * tmpvar_1307) + 0.1938925) * tmpvar_1307) - 0.3326756)
     * tmpvar_1307) + 0.9999793) * tmpvar_1306);
    tmpvar_1307 = (tmpvar_1307 + (float(
      (abs((st_1296.y / st_1296.x)) > 1.0)
    ) * (
      (tmpvar_1307 * -2.0)
     + 1.570796)));
    tmpvar_1305 = (tmpvar_1307 * sign((st_1296.y / st_1296.x)));
    if ((abs(st_1296.x) > (1e-08 * abs(st_1296.y)))) {
      if ((st_1296.x < 0.0)) {
        if ((st_1296.y >= 0.0)) {
          tmpvar_1305 += 3.141593;
        } else {
          tmpvar_1305 = (tmpvar_1305 - 3.141593);
        };
      };
    } else {
      tmpvar_1305 = (sign(st_1296.y) * 1.570796);
    };
    float tmpvar_1308;
    tmpvar_1308 = (abs(cos(tmpvar_1305)) * 0.01);
    float tmpvar_1309;
    tmpvar_1309 = clamp (((tmpvar_1304 - tmpvar_1308) / (
      ((tmpvar_1308 + 0.02) + (tmpvar_1303 * 0.1))
     - tmpvar_1308)), 0.0, 1.0);
    color_1295 = (vec3((1.0 - (tmpvar_1309 * 
      (tmpvar_1309 * (3.0 - (2.0 * tmpvar_1309)))
    ))) * vec3(0.86, 0.759, 0.41));
    final_1294 = (final_1294 + color_1295);
    float tmpvar_1310;
    tmpvar_1310 = clamp (((tax - 0.19) / 0.46), 0.0, 1.0);
    vec4 tmpvar_1311;
    tmpvar_1311.w = 1.0;
    tmpvar_1311.xyz = final_1294;
    float edge0_1312;
    edge0_1312 = (0.05 + (0.05 * st_1296.y));
    float tmpvar_1313;
    tmpvar_1313 = clamp (((
      abs(st_1296.x)
     - edge0_1312) / (0.04 - edge0_1312)), 0.0, 1.0);
    float edge0_1314;
    edge0_1314 = (2.5 + (3.0 * (1.0 - 
      (1.0 - (tmpvar_1310 * (tmpvar_1310 * (3.0 - 
        (2.0 * tmpvar_1310)
      ))))
    )));
    float tmpvar_1315;
    tmpvar_1315 = clamp (((
      sqrt(dot (st_1296, st_1296))
     - edge0_1314) / -(edge0_1314)), 0.0, 1.0);
    tmpvar_1067 = (buff_11 + ((
      ((tmpvar_1311 * (tmpvar_1313 * (tmpvar_1313 * 
        (3.0 - (2.0 * tmpvar_1313))
      ))) * float((st_1296.y >= 0.0)))
     * 
      (1.0 - tmpvar_1300)
    ) * (tmpvar_1315 * 
      (tmpvar_1315 * (3.0 - (2.0 * tmpvar_1315)))
    )));
  };
  buff_11 = tmpvar_1067;
  tb_9 = mcol_10;
  exbff_8 = vec4(0.0, 0.0, 0.0, 0.0);

  for(int i_7=0;i_7<50;i_7++) {
    if ((i_7 >= 50)) {
      break;
    };
    if ((i_7 >= en1counter)) {
      break;
    };
    vec2 tmpvar_1316;
    tmpvar_1316.x = en1posx[i_7];
    tmpvar_1316.y = en1posy[i_7];
    float tshift_1317;
    tshift_1317 = en1timer[i_7];
    vec2 pos_1318;
    pos_1318 = fragCoord_3;
    float cpower_1319;
    cpower_1319 = en1exval[i_7];
    float chpower_1320;
    chpower_1320 = en1lval[i_7];
    vec4 tcc_1321;
    bool xxex_1322;
    xxex_1322 = en1llisex[i_7];
    vec4 tmpvar_1323;
    float R_1324;
    float tmpvar_1325;
    float tmpvar_1326;
    tmpvar_1326 = (125.0 * zoom);
    tmpvar_1325 = ((tmpvar_1316.y * zoom) - tmpvar_1326);
    float tmpvar_1327;
    tmpvar_1327 = ((tmpvar_1316.x * zoom) - tmpvar_1326);
    float tmpvar_1328;
    float tmpvar_1329;
    tmpvar_1329 = (min (abs(
      (tmpvar_1325 / tmpvar_1327)
    ), 1.0) / max (abs(
      (tmpvar_1325 / tmpvar_1327)
    ), 1.0));
    float tmpvar_1330;
    tmpvar_1330 = (tmpvar_1329 * tmpvar_1329);
    tmpvar_1330 = (((
      ((((
        ((((-0.01213232 * tmpvar_1330) + 0.05368138) * tmpvar_1330) - 0.1173503)
       * tmpvar_1330) + 0.1938925) * tmpvar_1330) - 0.3326756)
     * tmpvar_1330) + 0.9999793) * tmpvar_1329);
    tmpvar_1330 = (tmpvar_1330 + (float(
      (abs((tmpvar_1325 / tmpvar_1327)) > 1.0)
    ) * (
      (tmpvar_1330 * -2.0)
     + 1.570796)));
    tmpvar_1328 = (tmpvar_1330 * sign((tmpvar_1325 / tmpvar_1327)));
    if ((abs(tmpvar_1327) > (1e-08 * abs(tmpvar_1325)))) {
      if ((tmpvar_1327 < 0.0)) {
        if ((tmpvar_1325 >= 0.0)) {
          tmpvar_1328 += 3.141593;
        } else {
          tmpvar_1328 = (tmpvar_1328 - 3.141593);
        };
      };
    } else {
      tmpvar_1328 = (sign(tmpvar_1325) * 1.570796);
    };
    float tmpvar_1331;
    tmpvar_1331 = -(tmpvar_1328);
    pos_1318 = ((fragCoord_3 - (tmpvar_1316 * zoom)) - shippos);
    R_1324 = 250.0;
    vec2 x_1332;
    x_1332 = (pos_1318 - (125.0 * zoom));
    float tmpvar_1333;
    tmpvar_1333 = float((sqrt(
      dot (x_1332, x_1332)
    ) >= (
      ((300.0 + (500.0 * cpower_1319)) / 2.0)
     * zoom)));
    if (((1.0 - tmpvar_1333) > 0.0)) {
      vec4 tr2_1334;
      float b_1335;
      vec2 uv_1336;
      R_1324 = (250.0 * zoom);
      uv_1336 = (((pos_1318 / R_1324) - 0.5) * 2.0);
      mat2 tmpvar_1337;
      tmpvar_1337[0].x = cos(tmpvar_1331);
      tmpvar_1337[0].y = -(sin(tmpvar_1331));
      tmpvar_1337[1].x = sin(tmpvar_1331);
      tmpvar_1337[1].y = cos(tmpvar_1331);
      uv_1336 = (uv_1336 * tmpvar_1337);
      float tmpvar_1338;
      float tmpvar_1339;
      tmpvar_1339 = (min (abs(
        (uv_1336.y / uv_1336.x)
      ), 1.0) / max (abs(
        (uv_1336.y / uv_1336.x)
      ), 1.0));
      float tmpvar_1340;
      tmpvar_1340 = (tmpvar_1339 * tmpvar_1339);
      tmpvar_1340 = (((
        ((((
          ((((-0.01213232 * tmpvar_1340) + 0.05368138) * tmpvar_1340) - 0.1173503)
         * tmpvar_1340) + 0.1938925) * tmpvar_1340) - 0.3326756)
       * tmpvar_1340) + 0.9999793) * tmpvar_1339);
      tmpvar_1340 = (tmpvar_1340 + (float(
        (abs((uv_1336.y / uv_1336.x)) > 1.0)
      ) * (
        (tmpvar_1340 * -2.0)
       + 1.570796)));
      tmpvar_1338 = (tmpvar_1340 * sign((uv_1336.y / uv_1336.x)));
      if ((abs(uv_1336.x) > (1e-08 * abs(uv_1336.y)))) {
        if ((uv_1336.x < 0.0)) {
          if ((uv_1336.y >= 0.0)) {
            tmpvar_1338 += 3.141593;
          } else {
            tmpvar_1338 = (tmpvar_1338 - 3.141593);
          };
        };
      } else {
        tmpvar_1338 = (sign(uv_1336.y) * 1.570796);
      };
      float radius_1341;
      radius_1341 = (0.6 + ((
        ((chpower_1320 - 1.0) * max (0.0, (exp(
          (-(((
            -(cos(tmpvar_1338))
           * 0.5) + 0.5)) * 14.0)
        ) - 0.05)))
       * 
        (0.5 + (0.5 * sin((
          (tmpvar_1338 - tshift_1317)
         * 15.0))))
      ) / 10.0));
      float tmpvar_1342;
      tmpvar_1342 = (0.1 * ((
        -(cos(tmpvar_1338))
       * 0.5) + 0.5));
      float tmpvar_1343;
      tmpvar_1343 = sqrt(dot (uv_1336, uv_1336));
      float edge0_1344;
      edge0_1344 = ((radius_1341 - tmpvar_1342) - 0.01);
      float tmpvar_1345;
      tmpvar_1345 = clamp (((tmpvar_1343 - edge0_1344) / (
        (radius_1341 - tmpvar_1342)
       - edge0_1344)), 0.0, 1.0);
      float edge0_1346;
      edge0_1346 = (radius_1341 + tmpvar_1342);
      float tmpvar_1347;
      tmpvar_1347 = clamp (((tmpvar_1343 - edge0_1346) / (
        ((radius_1341 + tmpvar_1342) + 0.01)
       - edge0_1346)), 0.0, 1.0);
      float edge0_1348;
      edge0_1348 = (radius_1341 + tmpvar_1342);
      float tmpvar_1349;
      tmpvar_1349 = clamp (((tmpvar_1343 - edge0_1348) / (
        ((radius_1341 + tmpvar_1342) + 0.01)
       - edge0_1348)), 0.0, 1.0);
      float tmpvar_1350;
      float edge0_1351;
      edge0_1351 = ((radius_1341 - tmpvar_1342) - 0.01);
      float tmpvar_1352;
      tmpvar_1352 = clamp (((tmpvar_1343 - edge0_1351) / (
        (radius_1341 - tmpvar_1342)
       - edge0_1351)), 0.0, 1.0);
      tmpvar_1350 = (tmpvar_1352 * (tmpvar_1352 * (3.0 - 
        (2.0 * tmpvar_1352)
      )));
      vec3 tmpvar_1353;
      tmpvar_1353.x = ((tmpvar_1345 * (tmpvar_1345 * 
        (3.0 - (2.0 * tmpvar_1345))
      )) - (tmpvar_1347 * (tmpvar_1347 * 
        (3.0 - (2.0 * tmpvar_1347))
      )));
      tmpvar_1353.y = (1.0 - (tmpvar_1349 * (tmpvar_1349 * 
        (3.0 - (2.0 * tmpvar_1349))
      )));
      tmpvar_1353.z = tmpvar_1350;
      float tmpvar_1354;
      tmpvar_1354 = tmpvar_1353.x;
      b_1335 = 0.0;
      if ((tshift_1317 < 1.2)) {
        float timex_1355;
        vec2 tmpvar_1356;
        tmpvar_1356 = (((pos_1318 / 
          (250.0 * zoom)
        ) * 2.0) - 1.0);
        timex_1355 = (tshift_1317 + 5.7);
        float tmpvar_1357;
        tmpvar_1357 = ((sin(
          (timex_1355 * 2.0)
        ) + 1.0) * 5.0);
        float tmpvar_1358;
        tmpvar_1358 = ((sin(
          (timex_1355 * 3.0)
        ) / 2.0) + 0.5);
        float tmpvar_1359;
        tmpvar_1359 = (((
          sin((timex_1355 * 5.0))
         / 2.0) + 1.0) * 40.0);
        float tmpvar_1360;
        tmpvar_1360 = sqrt((pow (
          abs(tmpvar_1356.x)
        , tmpvar_1357) + pow (
          abs(tmpvar_1356.y)
        , tmpvar_1357)));
        float tmpvar_1361;
        tmpvar_1361 = clamp (((tmpvar_1358 - tmpvar_1360) * 250.0), 0.0, 1.0);
        b_1335 = max (0.0, (tmpvar_1361 + (
          (1.0 - tmpvar_1361)
         * 
          (1.0 + (((
            (tmpvar_1358 - tmpvar_1360)
           * 250.0) + tmpvar_1359) / tmpvar_1359))
        )));
      } else {
        b_1335 = 1.0;
      };
      vec2 uv_1362;
      uv_1362.y = uv_1336.y;
      float dir_1363;
      vec2 relative_1364;
      vec2 branch_1365;
      uv_1362.x = (uv_1336.x - 0.05);
      uv_1362 = (uv_1362 * 0.08);
      branch_1365 = vec2(0.0, 0.0);
      relative_1364 = (uv_1362 * (uv_1362 * uv_1362));
      float tmpvar_1366;
      float tmpvar_1367;
      tmpvar_1367 = (min (abs(
        (relative_1364.y / relative_1364.x)
      ), 1.0) / max (abs(
        (relative_1364.y / relative_1364.x)
      ), 1.0));
      float tmpvar_1368;
      tmpvar_1368 = (tmpvar_1367 * tmpvar_1367);
      tmpvar_1368 = (((
        ((((
          ((((-0.01213232 * tmpvar_1368) + 0.05368138) * tmpvar_1368) - 0.1173503)
         * tmpvar_1368) + 0.1938925) * tmpvar_1368) - 0.3326756)
       * tmpvar_1368) + 0.9999793) * tmpvar_1367);
      tmpvar_1368 = (tmpvar_1368 + (float(
        (abs((relative_1364.y / relative_1364.x)) > 1.0)
      ) * (
        (tmpvar_1368 * -2.0)
       + 1.570796)));
      tmpvar_1366 = (tmpvar_1368 * sign((relative_1364.y / relative_1364.x)));
      if ((abs(relative_1364.x) > (1e-08 * abs(relative_1364.y)))) {
        if ((relative_1364.x < 0.0)) {
          if ((relative_1364.y >= 0.0)) {
            tmpvar_1366 += 3.141593;
          } else {
            tmpvar_1366 = (tmpvar_1366 - 3.141593);
          };
        };
      } else {
        tmpvar_1366 = (sign(relative_1364.y) * 1.570796);
      };
      dir_1363 = (tmpvar_1366 * 3.0);
      dir_1363 = (dir_1363 - (tshift_1317 * 1.5));
      vec2 tmpvar_1369;
      tmpvar_1369.x = cos(dir_1363);
      tmpvar_1369.y = sin(dir_1363);
      relative_1364 = ((tmpvar_1369 / 3.0) - 0.7831919);
      branch_1365 = ((relative_1364 / 100.0) / sqrt(dot (uv_1362, uv_1362)));
      vec2 tmpvar_1370;
      tmpvar_1370 = (uv_1362 - branch_1365);
      float tmpvar_1371;
      tmpvar_1371 = ((2.0 + (0.5 * 
        sin(tshift_1317)
      )) + (10.0 * chpower_1320));
      float tmpvar_1372;
      tmpvar_1372 = clamp (((
        (sqrt(dot (uv_1362, uv_1362)) * 2.0)
       - 0.1) / -0.1), 0.0, 1.0);
      float tmpvar_1373;
      tmpvar_1373 = clamp (((
        (sqrt(dot (uv_1362, uv_1362)) * 2.0)
       - 0.1) / -0.1), 0.0, 1.0);
      float tmpvar_1374;
      tmpvar_1374 = clamp (((
        (sqrt(dot (uv_1362, uv_1362)) * 2.0)
       - 0.1) / -0.1), 0.0, 1.0);
      vec4 tmpvar_1375;
      tmpvar_1375.w = 1.0;
      tmpvar_1375.x = abs(((
        sin(tmpvar_1371)
       - 1.0) - (
        (1.0 - sin(tshift_1317))
       * 
        (tmpvar_1372 * (tmpvar_1372 * (3.0 - (2.0 * tmpvar_1372))))
      )));
      tmpvar_1375.y = abs(((0.5 + 
        sin(tmpvar_1371)
      ) - (
        (0.5 - sin(tshift_1317))
       * 
        (tmpvar_1373 * (tmpvar_1373 * (3.0 - (2.0 * tmpvar_1373))))
      )));
      tmpvar_1375.z = abs(((0.5 - 
        sin(tmpvar_1371)
      ) - (
        (0.5 - sin(tshift_1317))
       * 
        (tmpvar_1374 * (tmpvar_1374 * (3.0 - (2.0 * tmpvar_1374))))
      )));
      float tmpvar_1376;
      tmpvar_1376 = clamp (((
        (sqrt(dot (uv_1362, uv_1362)) / 2.0)
       - 0.1) / 0.8), 0.0, 1.0);
      vec4 tmpvar_1377;
      tmpvar_1377 = (min (vec4(1.0, 1.0, 1.0, 1.0), (tmpvar_1375 * 
        (sqrt(dot (tmpvar_1370, tmpvar_1370)) / chpower_1320)
      )) - (tmpvar_1376 * (tmpvar_1376 * 
        (3.0 - (2.0 * tmpvar_1376))
      )));
      tr2_1334 = ((tmpvar_1377 * b_1335) + ((
        (5.0 * tmpvar_1377)
       * 
        (1.0 - b_1335)
      ) * b_1335));
      vec2 p_1378;
      vec2 tmpvar_1379;
      float tmpvar_1380;
      tmpvar_1380 = (250.0 * zoom);
      tmpvar_1379 = (((pos_1318 / tmpvar_1380) * 2.0) - 1.0);
      p_1378.y = tmpvar_1379.y;
      p_1378.x = (tmpvar_1379.x - 0.051);
      vec4 tmpvar_1381;
      tmpvar_1381.w = 1.0;
      tmpvar_1381.xyz = (vec3(0.1, 0.1, 0.2) * abs((0.32076 / 
        (((p_1378.x * p_1378.x) + (tmpvar_1379.y * tmpvar_1379.y)) - (0.2880836 * abs(sin(
          ((((
            (p_1378.x * tmpvar_1379.y)
           * 50.0) + iTime) + (tmpvar_1380 * p_1378.x)) + (tmpvar_1380 * tmpvar_1379.y))
        ))))
      )));
      vec4 tmpvar_1382;
      tmpvar_1382 = (-(tmpvar_1381) * b_1335);
      float intensity_1383;
      vec2 tmpvar_1384;
      tmpvar_1384 = vec2((tmpvar_1380 / 2.0));
      vec2 x_1385;
      x_1385 = (tmpvar_1384 - pos_1318);
      float tmpvar_1386;
      tmpvar_1386 = exp((-(
        abs((pos_1318.x - tmpvar_1384.x))
      ) * (0.02 / 
        (tmpvar_1380 / 500.0)
      )));
      intensity_1383 = (pow ((
        (cpower_1319 * (tmpvar_1380 / 2.0))
       / 
        sqrt(dot (x_1385, x_1385))
      ), 4.0) + pow ((
        (32.0 * (tmpvar_1386 * tmpvar_1386))
       / 
        abs(((tmpvar_1380 / 2.0) - pos_1318.y))
      ), 0.5));
      intensity_1383 = (intensity_1383 + (intensity_1383 * intensity_1383));
      vec3 tmpvar_1387;
      tmpvar_1387.yz = vec2(0.25, 0.97);
      tmpvar_1387.x = (0.91 + ((0.05 * 
        sin((-(tshift_1317) * 50.0))
      ) * float(
        (cpower_1319 >= 0.5)
      )));
      vec4 tmpvar_1388;
      tmpvar_1388.w = 1.0;
      tmpvar_1388.xyz = ((tmpvar_1387 * intensity_1383) * 0.8);
      vec4 tmpvar_1389;
      tmpvar_1389 = ((min (vec4(1.0, 1.0, 1.0, 1.0), tmpvar_1388) * cpower_1319) * b_1335);
      uv_1336.x = (uv_1336.x + 0.1);
      if ((xxex_1322 || (cpower_1319 > 0.0))) {
        float edge0_1390;
        edge0_1390 = (0.7 + (2.0 * cpower_1319));
        float tmpvar_1391;
        tmpvar_1391 = clamp (((
          sqrt(dot (uv_1336, uv_1336))
         - edge0_1390) / (0.5 - edge0_1390)), 0.0, 1.0);
        tcc_1321 = (tmpvar_1389 * (tmpvar_1391 * (tmpvar_1391 * 
          (3.0 - (2.0 * tmpvar_1391))
        )));
        tmpvar_1323 = tcc_1321;
      } else {
        vec3 tmpvar_1392;
        tmpvar_1392.x = -(tmpvar_1353.x);
        tmpvar_1392.y = tmpvar_1354;
        tmpvar_1392.z = tmpvar_1354;
        vec4 tmpvar_1393;
        tmpvar_1393.w = 1.0;
        tmpvar_1393.xyz = -(tmpvar_1392);
        float tmpvar_1394;
        tmpvar_1394 = clamp (((
          sqrt(dot (uv_1336, uv_1336))
         - 0.7) / -0.2), 0.0, 1.0);
        float edge0_1395;
        edge0_1395 = (0.7 + (2.0 * cpower_1319));
        float tmpvar_1396;
        tmpvar_1396 = clamp (((
          sqrt(dot (uv_1336, uv_1336))
         - edge0_1395) / (0.5 - edge0_1395)), 0.0, 1.0);
        tcc_1321 = ((max (vec4(0.0, 0.0, 0.0, 0.0), 
          ((((
            (tmpvar_1393 * tr2_1334)
           * 
            (tmpvar_1353.y * 0.57)
          ) + (tr2_1334 * tmpvar_1353.y)) + (tmpvar_1382 * tmpvar_1353.y)) + ((tr2_1334 * (1.0 - tmpvar_1353.y)) * (tmpvar_1394 * (tmpvar_1394 * 
            (3.0 - (2.0 * tmpvar_1394))
          ))))
        ) + (tmpvar_1389 * 
          (tmpvar_1396 * (tmpvar_1396 * (3.0 - (2.0 * tmpvar_1396))))
        )) + (tb_9 * (1.0 - tmpvar_1353.x)));
        vec3 tmpvar_1397;
        tmpvar_1397.x = -(tmpvar_1353.x);
        tmpvar_1397.y = tmpvar_1354;
        tmpvar_1397.z = tmpvar_1354;
        vec4 tmpvar_1398;
        tmpvar_1398.w = 1.0;
        tmpvar_1398.xyz = -(tmpvar_1397);
        float tmpvar_1399;
        tmpvar_1399 = clamp (((
          sqrt(dot (uv_1336, uv_1336))
         - 0.7) / -0.2), 0.0, 1.0);
        float edge0_1400;
        edge0_1400 = (0.7 + (2.0 * cpower_1319));
        float tmpvar_1401;
        tmpvar_1401 = clamp (((
          sqrt(dot (uv_1336, uv_1336))
         - edge0_1400) / (0.5 - edge0_1400)), 0.0, 1.0);
        tmpvar_1323 = (((
          max (vec4(0.0, 0.0, 0.0, 0.0), (((
            ((tmpvar_1398 * tr2_1334) * (tmpvar_1353.y * 0.57))
           + 
            (tr2_1334 * tmpvar_1353.y)
          ) + (tmpvar_1382 * tmpvar_1353.y)) + ((tr2_1334 * 
            (1.0 - tmpvar_1353.y)
          ) * (tmpvar_1399 * 
            (tmpvar_1399 * (3.0 - (2.0 * tmpvar_1399)))
          ))))
         + 
          (tmpvar_1389 * (tmpvar_1401 * (tmpvar_1401 * (3.0 - 
            (2.0 * tmpvar_1401)
          ))))
        ) + (buff_11 * 
          (1.0 - (tmpvar_1353.y * b_1335))
        )) + (tb_9 * (1.0 - 
          (tmpvar_1350 * b_1335)
        )));
      };
    } else {
      if ((xxex_1322 || (cpower_1319 > 0.0))) {
        tcc_1321 = vec4(0.0, 0.0, 0.0, 0.0);
        tmpvar_1323 = vec4(0.0, 0.0, 0.0, 0.0);
      } else {
        tcc_1321 = tb_9;
        tmpvar_1323 = buff_11;
      };
    };
    if ((en1llisex[i_7] || (en1exval[i_7] > 0.0))) {
      exbff_8 = (exbff_8 + min (vec4(1.0, 1.0, 1.0, 1.0), tmpvar_1323));
    } else {
      buff_11 = tmpvar_1323;
      tb_9 = tcc_1321;
    };
  };
  mcol_10 = buff_11;
  txeb_6 = vec4(0.0, 0.0, 0.0, 0.0);
  for(int i_5=0;i_5<50;i_5++) {
    if ((i_5 >= 50)) {
      break;
    };
    if ((i_5 >= en2counter)) {
      break;
    };
    vec2 tmpvar_1402;
    tmpvar_1402.x = en2posx[i_5];
    tmpvar_1402.y = en2posy[i_5];
    vec4 col_1403;
    col_1403 = mcol_10;
    vec2 pos_1404;
    float tshift_1405;
    tshift_1405 = en2timer[i_5];
    vec4 lux_1406;
    bool naa_1407;
    naa_1407 = en2llishit[i_5];
    float botmr_1408;
    botmr_1408 = en2extimer[i_5];
    vec4 tmpvar_1409;
    vec2 tmpvar_1410;
    float tmpvar_1411;
    tmpvar_1411 = (125.0 * zoom);
    tmpvar_1410 = ((tmpvar_1402 * zoom) - tmpvar_1411);
    pos_1404 = ((fragCoord_3 - (tmpvar_1402 * zoom)) - shippos);
    bool tmpvar_1412;
    tmpvar_1412 = ((float(
      ((1500.0 * zoom) >= sqrt(dot (tmpvar_1410, tmpvar_1410)))
    ) > 0.0) && (botmr_1408 < 0.001));
    float tmpvar_1413;
    tmpvar_1413 = ((tmpvar_1402.y * zoom) - tmpvar_1411);
    float tmpvar_1414;
    tmpvar_1414 = ((tmpvar_1402.x * zoom) - tmpvar_1411);
    float tmpvar_1415;
    float tmpvar_1416;
    tmpvar_1416 = (min (abs(
      (tmpvar_1413 / tmpvar_1414)
    ), 1.0) / max (abs(
      (tmpvar_1413 / tmpvar_1414)
    ), 1.0));
    float tmpvar_1417;
    tmpvar_1417 = (tmpvar_1416 * tmpvar_1416);
    tmpvar_1417 = (((
      ((((
        ((((-0.01213232 * tmpvar_1417) + 0.05368138) * tmpvar_1417) - 0.1173503)
       * tmpvar_1417) + 0.1938925) * tmpvar_1417) - 0.3326756)
     * tmpvar_1417) + 0.9999793) * tmpvar_1416);
    tmpvar_1417 = (tmpvar_1417 + (float(
      (abs((tmpvar_1413 / tmpvar_1414)) > 1.0)
    ) * (
      (tmpvar_1417 * -2.0)
     + 1.570796)));
    tmpvar_1415 = (tmpvar_1417 * sign((tmpvar_1413 / tmpvar_1414)));
    if ((abs(tmpvar_1414) > (1e-08 * abs(tmpvar_1413)))) {
      if ((tmpvar_1414 < 0.0)) {
        if ((tmpvar_1413 >= 0.0)) {
          tmpvar_1415 += 3.141593;
        } else {
          tmpvar_1415 = (tmpvar_1415 - 3.141593);
        };
      };
    } else {
      tmpvar_1415 = (sign(tmpvar_1413) * 1.570796);
    };
    float tmpvar_1418;
    tmpvar_1418 = (-(tmpvar_1415) - 1.57079);
    vec2 x_1419;
    x_1419 = (pos_1404 - (125.0 * zoom));
    float tmpvar_1420;
    tmpvar_1420 = float((sqrt(
      dot (x_1419, x_1419)
    ) >= (150.0 * zoom)));
    if ((((1.0 - tmpvar_1420) > 0.0) || tmpvar_1412)) {
      vec4 lc_1421;
      vec4 tret_1422;
      float b_1423;
      vec2 tuvv_1424;
      float tuv_1425;
      vec4 cl1_1426;
      vec2 z_1427;
      vec2 sp_1428;
      vec2 uv_1429;
      vec2 tmpvar_1430;
      tmpvar_1430 = vec2((250.0 * zoom));
      mat2 tmpvar_1431;
      tmpvar_1431[0].x = cos(tmpvar_1418);
      tmpvar_1431[0].y = -(sin(tmpvar_1418));
      tmpvar_1431[1].x = sin(tmpvar_1418);
      tmpvar_1431[1].y = cos(tmpvar_1418);
      uv_1429 = (abs((
        ((pos_1404 - (tmpvar_1430 / 2.0)) / tmpvar_1430.y)
       * 8.0)) * tmpvar_1431);
      vec3 tmpvar_1432;
      tmpvar_1432.x = dot (uv_1429, vec2(1.5, 0.5));
      tmpvar_1432.y = dot (uv_1429, vec2(-1.0, 0.5));
      tmpvar_1432.z = uv_1429.y;
      vec3 tmpvar_1433;
      tmpvar_1433 = fract(tmpvar_1432);
      vec3 tmpvar_1434;
      tmpvar_1434 = fract(-(tmpvar_1432));
      float tmpvar_1435;
      tmpvar_1435 = (uv_1429.x - (uv_1429.y / 2.0));
      vec2 tmpvar_1436;
      tmpvar_1436.x = ((floor(tmpvar_1435) * 2.0) + float((
        fract(tmpvar_1435)
       >= 
        fract((1.0 - uv_1429.y))
      )));
      tmpvar_1436.y = floor(uv_1429.y);
      float tmpvar_1437;
      tmpvar_1437 = float((min (
        (0.2 + min (min (tmpvar_1433.x, tmpvar_1433.y), tmpvar_1433.z))
      , 
        min (min (tmpvar_1434.x, tmpvar_1434.y), tmpvar_1434.z)
      ) >= (0.12 + 
        (sin(((
          (fract((cos(
            dot (tmpvar_1436, vec2(21.9898, 78.233))
          ) * 43758.55)) * 2.0)
         + 
          (tmpvar_1436.x / 16.0)
        ) + (
          -(tshift_1405)
         * 2.0))) * 0.2)
      )));
      uv_1429 = ((pos_1404 / tmpvar_1430) - 0.5);
      mat2 tmpvar_1438;
      tmpvar_1438[0].x = cos(tmpvar_1418);
      tmpvar_1438[0].y = -(sin(tmpvar_1418));
      tmpvar_1438[1].x = sin(tmpvar_1418);
      tmpvar_1438[1].y = cos(tmpvar_1418);
      uv_1429 = (uv_1429 * tmpvar_1438);
      sp_1428.x = uv_1429.x;
      sp_1428.y = (uv_1429.y + -0.291);
      z_1427 = pow (vec2(0.0, 0.0), abs(sp_1428));
      z_1427 = (z_1427 + pow (vec2(0.0, 1.0), abs(sp_1428)));
      z_1427 = (z_1427 + pow (vec2(1.0, 0.0), abs(sp_1428)));
      vec2 tmpvar_1439;
      tmpvar_1439 = pow ((abs(sp_1428) * 1000000.0), vec2(0.1, 0.1));
      float tmpvar_1440;
      tmpvar_1440 = sqrt(dot (tmpvar_1439, tmpvar_1439));
      float tmpvar_1441;
      float tmpvar_1442;
      tmpvar_1442 = (min (abs(
        (tmpvar_1439.x / tmpvar_1439.y)
      ), 1.0) / max (abs(
        (tmpvar_1439.x / tmpvar_1439.y)
      ), 1.0));
      float tmpvar_1443;
      tmpvar_1443 = (tmpvar_1442 * tmpvar_1442);
      tmpvar_1443 = (((
        ((((
          ((((-0.01213232 * tmpvar_1443) + 0.05368138) * tmpvar_1443) - 0.1173503)
         * tmpvar_1443) + 0.1938925) * tmpvar_1443) - 0.3326756)
       * tmpvar_1443) + 0.9999793) * tmpvar_1442);
      tmpvar_1443 = (tmpvar_1443 + (float(
        (abs((tmpvar_1439.x / tmpvar_1439.y)) > 1.0)
      ) * (
        (tmpvar_1443 * -2.0)
       + 1.570796)));
      tmpvar_1441 = (tmpvar_1443 * sign((tmpvar_1439.x / tmpvar_1439.y)));
      if ((abs(tmpvar_1439.y) > (1e-08 * abs(tmpvar_1439.x)))) {
        if ((tmpvar_1439.y < 0.0)) {
          if ((tmpvar_1439.x >= 0.0)) {
            tmpvar_1441 += 3.141593;
          } else {
            tmpvar_1441 = (tmpvar_1441 - 3.141593);
          };
        };
      } else {
        tmpvar_1441 = (sign(tmpvar_1439.x) * 1.570796);
      };
      float tmpvar_1444;
      tmpvar_1444 = (((tmpvar_1439.y * 
        (log(tmpvar_1440) - 1.0)
      ) + (tmpvar_1441 * 
        ((tmpvar_1439.x * 0.15) + 1.5)
      )) - tshift_1405);
      vec2 tmpvar_1445;
      tmpvar_1445.x = sin(tmpvar_1444);
      tmpvar_1445.y = cos(tmpvar_1444);
      z_1427 = (z_1427 + ((3.963319 * 
        exp((((
          log(tmpvar_1440)
         * 
          (tmpvar_1439.x + 0.5)
        ) - (tmpvar_1439.y * tmpvar_1441)) - tmpvar_1439.x))
      ) * tmpvar_1445));
      float tmpvar_1446;
      tmpvar_1446 = sin(z_1427.x);
      float tmpvar_1447;
      tmpvar_1447 = sin(z_1427.y);
      vec4 tmpvar_1448;
      tmpvar_1448.w = 1.0;
      tmpvar_1448.x = tmpvar_1446;
      tmpvar_1448.y = (cos(z_1427.x) + cos(z_1427.y));
      tmpvar_1448.z = tmpvar_1447;
      cl1_1426 = tmpvar_1448;
      if (tmpvar_1412) {
        cl1_1426 = (vec4(((tmpvar_1446 * tmpvar_1448.y) * tmpvar_1447)) + (tmpvar_1448 * 0.21));
      } else {
        cl1_1426 = vec4(((cl1_1426.x * cl1_1426.y) * cl1_1426.z));
      };
      float tmpvar_1449;
      tmpvar_1449 = clamp (((
        sqrt(dot (uv_1429, uv_1429))
       - 0.3) / -0.01000002), 0.0, 1.0);
      float tmpvar_1450;
      tmpvar_1450 = ((tmpvar_1449 * (tmpvar_1449 * 
        (3.0 - (2.0 * tmpvar_1449))
      )) * 2.0);
      tuv_1425 = tmpvar_1450;
      float tmpvar_1451;
      float tmpvar_1452;
      tmpvar_1452 = clamp (((
        sqrt(dot (uv_1429, uv_1429))
       - 0.3) / -0.01000002), 0.0, 1.0);
      tmpvar_1451 = (tmpvar_1452 * (tmpvar_1452 * (3.0 - 
        (2.0 * tmpvar_1452)
      )));
      tuvv_1424 = uv_1429;
      b_1423 = 0.0;
      if ((tshift_1405 < 1.2)) {
        float timex_1453;
        vec2 tmpvar_1454;
        tmpvar_1454 = (((pos_1404 / 
          (250.0 * zoom)
        ) * 2.0) - 1.0);
        timex_1453 = (tshift_1405 + 5.7);
        float tmpvar_1455;
        tmpvar_1455 = ((sin(
          (timex_1453 * 2.0)
        ) + 1.0) * 5.0);
        float tmpvar_1456;
        tmpvar_1456 = ((sin(
          (timex_1453 * 3.0)
        ) / 2.0) + 0.5);
        float tmpvar_1457;
        tmpvar_1457 = (((
          sin((timex_1453 * 5.0))
         / 2.0) + 1.0) * 40.0);
        float tmpvar_1458;
        tmpvar_1458 = sqrt((pow (
          abs(tmpvar_1454.x)
        , tmpvar_1455) + pow (
          abs(tmpvar_1454.y)
        , tmpvar_1455)));
        float tmpvar_1459;
        tmpvar_1459 = clamp (((tmpvar_1456 - tmpvar_1458) * 250.0), 0.0, 1.0);
        b_1423 = max (0.0, (tmpvar_1459 + (
          (1.0 - tmpvar_1459)
         * 
          (1.0 + (((
            (tmpvar_1456 - tmpvar_1458)
           * 250.0) + tmpvar_1457) / tmpvar_1457))
        )));
      } else {
        if ((botmr_1408 > 0.0)) {
          float timex_1460;
          vec2 tmpvar_1461;
          tmpvar_1461 = (((pos_1404 / 
            (250.0 * zoom)
          ) * 2.0) - 1.0);
          timex_1460 = (botmr_1408 + 1.0);
          float tmpvar_1462;
          tmpvar_1462 = ((sin(
            (timex_1460 * 2.0)
          ) + 1.0) * 5.0);
          float tmpvar_1463;
          tmpvar_1463 = ((sin(
            (timex_1460 * 3.0)
          ) / 2.0) + 0.5);
          float tmpvar_1464;
          tmpvar_1464 = (((
            sin((timex_1460 * 5.0))
           / 2.0) + 1.0) * 40.0);
          float tmpvar_1465;
          tmpvar_1465 = sqrt((pow (
            abs(tmpvar_1461.x)
          , tmpvar_1462) + pow (
            abs(tmpvar_1461.y)
          , tmpvar_1462)));
          float tmpvar_1466;
          tmpvar_1466 = clamp (((tmpvar_1463 - tmpvar_1465) * 250.0), 0.0, 1.0);
          b_1423 = max (0.0, (tmpvar_1466 + (
            (1.0 - tmpvar_1466)
           * 
            (1.0 + (((
              (tmpvar_1463 - tmpvar_1465)
             * 250.0) + tmpvar_1464) / tmpvar_1464))
          )));
        } else {
          b_1423 = 1.0;
        };
      };
      col_1403 = (((buff_11 * 
        (1.0 - (tmpvar_1437 * b_1423))
      ) * tmpvar_1451) + (buff_11 * (1.0 - tmpvar_1451)));
      float tmpvar_1467;
      tmpvar_1467 = clamp (((
        sqrt(dot (uv_1429, uv_1429))
       - 0.3) / -0.1), 0.0, 1.0);
      tret_1422 = (((tmpvar_1437 * cl1_1426) * (tmpvar_1450 * b_1423)) + ((
        ((3.0 * cl1_1426) * (1.0 - b_1423))
       * b_1423) * (tmpvar_1467 * 
        (tmpvar_1467 * (3.0 - (2.0 * tmpvar_1467)))
      )));
      tuv_1425 = (2.0 - tmpvar_1450);
      uv_1429 = ((pos_1404.yx / tmpvar_1430) - 0.5);
      mat2 tmpvar_1468;
      tmpvar_1468[0].x = cos(-(tmpvar_1418));
      tmpvar_1468[0].y = -(sin(-(tmpvar_1418)));
      tmpvar_1468[1].x = sin(-(tmpvar_1418));
      tmpvar_1468[1].y = cos(-(tmpvar_1418));
      uv_1429 = (uv_1429 * tmpvar_1468);
      lc_1421 = vec4(0.0, 0.0, 0.0, 0.0);
      if (tmpvar_1412) {
        float dy_1469;
        vec2 tmpvar_1470;
        tmpvar_1470.y = 0.0;
        tmpvar_1470.x = uv_1429.x;
        vec2 x_1471;
        x_1471 = (uv_1429 - tmpvar_1470);
        vec2 tmpvar_1472;
        tmpvar_1472.y = 0.0;
        tmpvar_1472.x = uv_1429.x;
        vec2 x_1473;
        x_1473 = (uv_1429 - tmpvar_1472);
        float tmpvar_1474;
        tmpvar_1474 = clamp (((
          sqrt(dot (x_1473, x_1473))
         - 0.1) / -0.05), 0.0, 1.0);
        vec2 tmpvar_1475;
        tmpvar_1475.y = 0.0;
        tmpvar_1475.x = tuvv_1424.x;
        vec2 tmpvar_1476;
        tmpvar_1476 = max (vec2(0.0, 0.0), (tuvv_1424 - tmpvar_1475));
        dy_1469 = (((
          (1.0/((25.0 * sqrt(dot (x_1471, x_1471)))))
         * 
          (tmpvar_1474 * (tmpvar_1474 * (3.0 - (2.0 * tmpvar_1474))))
        ) * tuv_1425) * float((
          sqrt(dot (tmpvar_1476, tmpvar_1476))
         >= 0.1)));
        vec4 tmpvar_1477;
        tmpvar_1477.w = 1.0;
        tmpvar_1477.x = ((uv_1429.x + cl1_1426.x) * dy_1469);
        tmpvar_1477.yz = (cl1_1426.yz * vec2(dy_1469));
        lc_1421 = tmpvar_1477;
      };
      vec2 x_1478;
      x_1478 = (pos_1404 - (125.0 * zoom));
      lux_1406 = (lc_1421 * float((
        sqrt(dot (tmpvar_1410, tmpvar_1410))
       >= 
        sqrt(dot (x_1478, x_1478))
      )));
      vec2 uv_1479;
      float an_1480;
      float light_1481;
      an_1480 = (tmpvar_1418 + -0.7853949);
      vec2 tmpvar_1482;
      tmpvar_1482 = vec2((250.0 * zoom));
      uv_1479 = ((pos_1404 - (tmpvar_1482 / 2.0)) / tmpvar_1482.y);
      mat2 tmpvar_1483;
      tmpvar_1483[0].x = cos(an_1480);
      tmpvar_1483[0].y = -(sin(an_1480));
      tmpvar_1483[1].x = sin(an_1480);
      tmpvar_1483[1].y = cos(an_1480);
      uv_1479 = (uv_1479 * tmpvar_1483);
      uv_1479 = (uv_1479 * 3.0);
      vec2 tmpvar_1484;
      tmpvar_1484 = ((uv_1479 / 1.75) + 0.9975);
      float tmpvar_1485;
      tmpvar_1485 = (float(mod (((iTime * 6.283159) / 6.666667), 6.283159)));
      vec2 tmpvar_1486;
      tmpvar_1486 = ((tmpvar_1484 + vec2(0.1, 0.1)) - ((vec2(0.1, 0.1) * tmpvar_1484) * cos(vec2(tmpvar_1485))));
      vec2 tmpvar_1487;
      tmpvar_1487 = ((tmpvar_1484 - vec2(0.1, 0.1)) + abs((
        (vec2(0.1, 0.1) * tmpvar_1484)
       * 
        cos(vec2(tmpvar_1485))
      )));
      float tmpvar_1488;
      if (naa_1407) {
        tmpvar_1488 = 1.0;
      } else {
        tmpvar_1488 = 0.0;
      };
      vec3 tmpvar_1489;
      tmpvar_1489.yz = vec2(0.365, 0.25);
      tmpvar_1489.x = (0.49 + (2.0 * tmpvar_1488));
      vec2 tmpvar_1490;
      tmpvar_1490 = (normalize(uv_1479) - uv_1479);
      light_1481 = (0.015 / sqrt(dot (tmpvar_1490, tmpvar_1490)));
      float tmpvar_1491;
      tmpvar_1491 = sqrt(dot (uv_1479, uv_1479));
      if ((tmpvar_1491 < 1.0)) {
        float tmpvar_1492;
        if (naa_1407) {
          tmpvar_1492 = 1.0;
        } else {
          tmpvar_1492 = 0.0;
        };
        vec2 tmpvar_1493;
        tmpvar_1493 = (normalize((uv_1479 - tmpvar_1487)) - (uv_1479 - tmpvar_1487));
        light_1481 = (light_1481 + ((tmpvar_1492 * 0.51) / sqrt(
          dot (tmpvar_1493, tmpvar_1493)
        )));
        float tmpvar_1494;
        if (naa_1407) {
          tmpvar_1494 = 1.0;
        } else {
          tmpvar_1494 = 0.0;
        };
        vec2 tmpvar_1495;
        tmpvar_1495 = (normalize((uv_1479 - tmpvar_1486)) - (uv_1479 - tmpvar_1486));
        light_1481 = (light_1481 + ((tmpvar_1494 * 0.51) / sqrt(
          dot (tmpvar_1495, tmpvar_1495)
        )));
        vec2 tmpvar_1496;
        tmpvar_1496 = (normalize((uv_1479 - tmpvar_1484)) - (uv_1479 - tmpvar_1484));
        light_1481 = (light_1481 * (0.0511 / sqrt(
          dot (tmpvar_1496, tmpvar_1496)
        )));
        vec2 tmpvar_1497;
        tmpvar_1497 = (normalize(uv_1479) - uv_1479);
        light_1481 = (light_1481 * (0.18521 / sqrt(
          dot (tmpvar_1497, tmpvar_1497)
        )));
      };
      float tmpvar_1498;
      tmpvar_1498 = clamp (((
        sqrt(dot (uv_1479, uv_1479))
       - 1.5) / -1.5), 0.0, 1.0);
      vec4 tmpvar_1499;
      tmpvar_1499.w = 1.0;
      tmpvar_1499.xyz = ((light_1481 * tmpvar_1489) * (tmpvar_1498 * (tmpvar_1498 * 
        (3.0 - (2.0 * tmpvar_1498))
      )));
      tmpvar_1409 = ((tret_1422 + col_1403) + (tmpvar_1499 * b_1423));
    } else {
      lux_1406 = vec4(0.0, 0.0, 0.0, 0.0);
      tmpvar_1409 = buff_11;
    };
    buff_11 = tmpvar_1409;
    txeb_6 = (txeb_6 + lux_1406);
  };
  mcol_10 = buff_11;
  buff_11 = (buff_11 + exbff_8);
  vec4 tmpvar_1500;
  vec2 tmpvar_1501;
  tmpvar_1501 = ((tmpvar_2 - (starpos1 * zoom)) - shippos);
  vec2 x_1502;
  x_1502 = (tmpvar_1501 - (125000.0 * zoom));
  float tmpvar_1503;
  tmpvar_1503 = float((sqrt(
    dot (x_1502, x_1502)
  ) >= (125175.0 * zoom)));
  if (((1.0 - tmpvar_1503) > 0.0)) {
    float c_1504;
    vec2 tmpvar_1505;
    tmpvar_1505 = vec2((250000.0 * zoom));
    vec2 tmpvar_1506;
    tmpvar_1506 = (((tmpvar_1501 * 200.0) - (100.0 * tmpvar_1505)) / tmpvar_1505.y);
    vec2 tmpvar_1507;
    tmpvar_1507 = ((tmpvar_1501 / tmpvar_1505) - 0.5);
    vec4 tmpvar_1508;
    tmpvar_1508.w = 1.0;
    tmpvar_1508.xyz = ((vec3(0.2463, 0.254, 0.9729) / dot (tmpvar_1507, tmpvar_1507)) / 3.59);
    vec4 tmpvar_1509;
    tmpvar_1509 = min (vec4(1.0, 1.0, 1.0, 1.0), tmpvar_1508);
    c_1504 = 0.0;
    float tmpvar_1510;
    tmpvar_1510 = pow ((clamp (
      (((250.0 - sqrt(
        dot (tmpvar_1506, tmpvar_1506)
      )) + 100.0) - 40.0)
    , 0.0, 250.0) / 250.0), 6.0);
    float n_1511;
    float tmpvar_1512;
    float tmpvar_1513;
    tmpvar_1513 = (min (abs(
      (tmpvar_1506.y / tmpvar_1506.x)
    ), 1.0) / max (abs(
      (tmpvar_1506.y / tmpvar_1506.x)
    ), 1.0));
    float tmpvar_1514;
    tmpvar_1514 = (tmpvar_1513 * tmpvar_1513);
    tmpvar_1514 = (((
      ((((
        ((((-0.01213232 * tmpvar_1514) + 0.05368138) * tmpvar_1514) - 0.1173503)
       * tmpvar_1514) + 0.1938925) * tmpvar_1514) - 0.3326756)
     * tmpvar_1514) + 0.9999793) * tmpvar_1513);
    tmpvar_1514 = (tmpvar_1514 + (float(
      (abs((tmpvar_1506.y / tmpvar_1506.x)) > 1.0)
    ) * (
      (tmpvar_1514 * -2.0)
     + 1.570796)));
    tmpvar_1512 = (tmpvar_1514 * sign((tmpvar_1506.y / tmpvar_1506.x)));
    if ((abs(tmpvar_1506.x) > (1e-08 * abs(tmpvar_1506.y)))) {
      if ((tmpvar_1506.x < 0.0)) {
        if ((tmpvar_1506.y >= 0.0)) {
          tmpvar_1512 += 3.141593;
        } else {
          tmpvar_1512 = (tmpvar_1512 - 3.141593);
        };
      };
    } else {
      tmpvar_1512 = (sign(tmpvar_1506.y) * 1.570796);
    };
    float tmpvar_1515;
    tmpvar_1515 = (time * 0.4);
    vec2 tmpvar_1516;
    tmpvar_1516.x = (((1.326885 + 
      (tmpvar_1515 * 0.1)
    ) + (
      cos(((tmpvar_1510 * 13.8) + (fract(
        abs(sin(((tmpvar_1515 + tmpvar_1512) + 1.2637)))
      ) * 3.0)))
     * 0.2)) + (tmpvar_1512 * 8.225723));
    tmpvar_1516.y = ((1.2637 + tmpvar_1515) + tmpvar_1512);
    float tmpvar_1517;
    vec2 uv_1518;
    vec2 tmpvar_1519;
    tmpvar_1519 = floor(tmpvar_1516);
    vec2 tmpvar_1520;
    tmpvar_1520 = (tmpvar_1516 - tmpvar_1519);
    uv_1518 = ((tmpvar_1520 * tmpvar_1520) * (3.0 - (2.0 * tmpvar_1520)));
    float tmpvar_1521;
    tmpvar_1521 = fract((cos(
      dot (tmpvar_1519, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1522;
    tmpvar_1522.x = (tmpvar_1519.x + 1.0);
    tmpvar_1522.y = tmpvar_1519.y;
    float tmpvar_1523;
    tmpvar_1523 = fract((cos(
      dot (tmpvar_1522, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1524;
    tmpvar_1524.x = tmpvar_1519.x;
    tmpvar_1524.y = (tmpvar_1519.y + 1.0);
    float tmpvar_1525;
    tmpvar_1525 = fract((cos(
      dot (tmpvar_1524, vec2(21.9898, 78.233))
    ) * 43758.55));
    tmpvar_1517 = (((tmpvar_1521 + 
      ((tmpvar_1523 - tmpvar_1521) * uv_1518.x)
    ) + (
      (tmpvar_1525 - tmpvar_1521)
     * uv_1518.y)) + ((
      (((tmpvar_1521 - tmpvar_1523) - tmpvar_1525) + fract((cos(
        dot ((tmpvar_1519 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))
      ) * 43758.55)))
     * uv_1518.x) * uv_1518.y));
    vec2 tmpvar_1526;
    tmpvar_1526.x = (((245.1578 + 
      (tmpvar_1512 * 8.225723)
    ) + tmpvar_1515) + (cos(
      ((((tmpvar_1510 * 2.0) * tmpvar_1517) + (tmpvar_1515 * 1.1)) + tmpvar_1512)
    ) * 2.8));
    tmpvar_1526.y = ((1.2637 + tmpvar_1515) + tmpvar_1512);
    vec2 xy_1527;
    xy_1527 = (tmpvar_1526 + tmpvar_1510);
    vec2 uv_1528;
    vec2 tmpvar_1529;
    tmpvar_1529 = floor(xy_1527);
    vec2 tmpvar_1530;
    tmpvar_1530 = (xy_1527 - tmpvar_1529);
    uv_1528 = ((tmpvar_1530 * tmpvar_1530) * (3.0 - (2.0 * tmpvar_1530)));
    float tmpvar_1531;
    tmpvar_1531 = fract((cos(
      dot (tmpvar_1529, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1532;
    tmpvar_1532.x = (tmpvar_1529.x + 1.0);
    tmpvar_1532.y = tmpvar_1529.y;
    float tmpvar_1533;
    tmpvar_1533 = fract((cos(
      dot (tmpvar_1532, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1534;
    tmpvar_1534.x = tmpvar_1529.x;
    tmpvar_1534.y = (tmpvar_1529.y + 1.0);
    float tmpvar_1535;
    tmpvar_1535 = fract((cos(
      dot (tmpvar_1534, vec2(21.9898, 78.233))
    ) * 43758.55));
    float tmpvar_1536;
    tmpvar_1536 = (((tmpvar_1531 + 
      ((tmpvar_1533 - tmpvar_1531) * uv_1528.x)
    ) + (
      (tmpvar_1535 - tmpvar_1531)
     * uv_1528.y)) + ((
      (((tmpvar_1531 - tmpvar_1533) - tmpvar_1535) + fract((cos(
        dot ((tmpvar_1529 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))
      ) * 43758.55)))
     * uv_1528.x) * uv_1528.y));
    n_1511 = (tmpvar_1517 * (tmpvar_1536 * tmpvar_1536));
    vec2 tmpvar_1537;
    tmpvar_1537.x = (((169.3358 + 
      (tmpvar_1512 * 8.225723)
    ) + tmpvar_1515) + (cos(
      ((((tmpvar_1510 * 2.2) * n_1511) + (tmpvar_1515 * 1.1)) + tmpvar_1512)
    ) * 1.1));
    tmpvar_1537.y = ((1.2637 + tmpvar_1515) + tmpvar_1512);
    vec2 xy_1538;
    xy_1538 = (tmpvar_1537 + tmpvar_1510);
    vec2 uv_1539;
    vec2 tmpvar_1540;
    tmpvar_1540 = floor(xy_1538);
    vec2 tmpvar_1541;
    tmpvar_1541 = (xy_1538 - tmpvar_1540);
    uv_1539 = ((tmpvar_1541 * tmpvar_1541) * (3.0 - (2.0 * tmpvar_1541)));
    float tmpvar_1542;
    tmpvar_1542 = fract((cos(
      dot (tmpvar_1540, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1543;
    tmpvar_1543.x = (tmpvar_1540.x + 1.0);
    tmpvar_1543.y = tmpvar_1540.y;
    float tmpvar_1544;
    tmpvar_1544 = fract((cos(
      dot (tmpvar_1543, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1545;
    tmpvar_1545.x = tmpvar_1540.x;
    tmpvar_1545.y = (tmpvar_1540.y + 1.0);
    float tmpvar_1546;
    tmpvar_1546 = fract((cos(
      dot (tmpvar_1545, vec2(21.9898, 78.233))
    ) * 43758.55));
    n_1511 = (n_1511 * pow ((
      ((tmpvar_1542 + ((tmpvar_1544 - tmpvar_1542) * uv_1539.x)) + ((tmpvar_1546 - tmpvar_1542) * uv_1539.y))
     + 
      ((((
        (tmpvar_1542 - tmpvar_1544)
       - tmpvar_1546) + fract(
        (cos(dot ((tmpvar_1540 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_1539.x) * uv_1539.y)
    ), 3.0));
    vec2 tmpvar_1547;
    tmpvar_1547.x = (((155.4351 + 
      (tmpvar_1512 * 8.225723)
    ) + tmpvar_1515) + (cos(
      ((((tmpvar_1510 * 2.3) * n_1511) + (tmpvar_1515 * 1.1)) + tmpvar_1512)
    ) * 0.8));
    tmpvar_1547.y = ((1.2637 + tmpvar_1515) + tmpvar_1512);
    vec2 xy_1548;
    xy_1548 = (tmpvar_1547 + tmpvar_1510);
    vec2 uv_1549;
    vec2 tmpvar_1550;
    tmpvar_1550 = floor(xy_1548);
    vec2 tmpvar_1551;
    tmpvar_1551 = (xy_1548 - tmpvar_1550);
    uv_1549 = ((tmpvar_1551 * tmpvar_1551) * (3.0 - (2.0 * tmpvar_1551)));
    float tmpvar_1552;
    tmpvar_1552 = fract((cos(
      dot (tmpvar_1550, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1553;
    tmpvar_1553.x = (tmpvar_1550.x + 1.0);
    tmpvar_1553.y = tmpvar_1550.y;
    float tmpvar_1554;
    tmpvar_1554 = fract((cos(
      dot (tmpvar_1553, vec2(21.9898, 78.233))
    ) * 43758.55));
    vec2 tmpvar_1555;
    tmpvar_1555.x = tmpvar_1550.x;
    tmpvar_1555.y = (tmpvar_1550.y + 1.0);
    float tmpvar_1556;
    tmpvar_1556 = fract((cos(
      dot (tmpvar_1555, vec2(21.9898, 78.233))
    ) * 43758.55));
    n_1511 = (n_1511 * pow ((
      ((tmpvar_1552 + ((tmpvar_1554 - tmpvar_1552) * uv_1549.x)) + ((tmpvar_1556 - tmpvar_1552) * uv_1549.y))
     + 
      ((((
        (tmpvar_1552 - tmpvar_1554)
       - tmpvar_1556) + fract(
        (cos(dot ((tmpvar_1550 + vec2(1.0, 1.0)), vec2(21.9898, 78.233))) * 43758.55)
      )) * uv_1549.x) * uv_1549.y)
    ), 4.0));
    n_1511 = (n_1511 * pow (tmpvar_1510, 2.96));
    n_1511 = (n_1511 * ((
      (tmpvar_1512 + 3.14158)
     / 3.0) * (
      (6.283159 - tmpvar_1512)
     - 3.14158)));
    n_1511 = (n_1511 + (sqrt(
      (tmpvar_1510 * tmpvar_1510)
    ) * 0.26));
    float tmpvar_1557;
    tmpvar_1557 = (n_1511 * 2.1);
    c_1504 = ((tmpvar_1557 * tmpvar_1557) * 3.5);
    float tmpvar_1558;
    tmpvar_1558 = clamp (c_1504, 0.0, 1.0);
    c_1504 = tmpvar_1558;
    float tmpvar_1559;
    tmpvar_1559 = clamp (((
      sqrt(dot (tmpvar_1507, tmpvar_1507))
     - 0.5) / -0.16), 0.0, 1.0);
    tmpvar_1500 = ((min (
      max (tmpvar_1558, 0.0)
    , 1.0) * tmpvar_1509) * (tmpvar_1559 * (tmpvar_1559 * 
      (3.0 - (2.0 * tmpvar_1559))
    )));
  } else {
    tmpvar_1500 = vec4(0.0, 0.0, 0.0, 0.0);
  };
  buff_11 = (buff_11 + tmpvar_1500);
  vec4 tmpvar_1560;
  vec2 tmpvar_1561;
  tmpvar_1561 = ((tmpvar_2 - (starpos2 * zoom)) - shippos);
  vec2 x_1562;
  x_1562 = (tmpvar_1561 - (50000.0 * zoom));
  float tmpvar_1563;
  tmpvar_1563 = float((sqrt(
    dot (x_1562, x_1562)
  ) >= (100000.0 * zoom)));
  if (((1.0 - tmpvar_1563) > 0.0)) {
    vec4 fragColor_1564;
    float b_1565;
    float r_1566;
    vec2 p_1567;
    vec2 tmpvar_1568;
    tmpvar_1568 = vec2((100000.0 * zoom));
    vec2 tmpvar_1569;
    tmpvar_1569 = ((tmpvar_1561 / tmpvar_1568) - 0.5);
    p_1567 = ((tmpvar_1561 / tmpvar_1568.y) - 0.35);
    float tmpvar_1570;
    float tmpvar_1571;
    tmpvar_1571 = (min (abs(
      (p_1567.y / p_1567.x)
    ), 1.0) / max (abs(
      (p_1567.y / p_1567.x)
    ), 1.0));
    float tmpvar_1572;
    tmpvar_1572 = (tmpvar_1571 * tmpvar_1571);
    tmpvar_1572 = (((
      ((((
        ((((-0.01213232 * tmpvar_1572) + 0.05368138) * tmpvar_1572) - 0.1173503)
       * tmpvar_1572) + 0.1938925) * tmpvar_1572) - 0.3326756)
     * tmpvar_1572) + 0.9999793) * tmpvar_1571);
    tmpvar_1572 = (tmpvar_1572 + (float(
      (abs((p_1567.y / p_1567.x)) > 1.0)
    ) * (
      (tmpvar_1572 * -2.0)
     + 1.570796)));
    tmpvar_1570 = (tmpvar_1572 * sign((p_1567.y / p_1567.x)));
    if ((abs(p_1567.x) > (1e-08 * abs(p_1567.y)))) {
      if ((p_1567.x < 0.0)) {
        if ((p_1567.y >= 0.0)) {
          tmpvar_1570 += 3.141593;
        } else {
          tmpvar_1570 = (tmpvar_1570 - 3.141593);
        };
      };
    } else {
      tmpvar_1570 = (sign(p_1567.y) * 1.570796);
    };
    vec2 x_1573;
    x_1573 = (p_1567 / 2.0);
    float tmpvar_1574;
    tmpvar_1574 = (sqrt(dot (x_1573, x_1573)) + 0.0001);
    r_1566 = tmpvar_1574;
    float tmpvar_1575;
    tmpvar_1575 = (1.9 * sin((
      ((8.0 * tmpvar_1574) - time)
     - 
      (2.0 * tmpvar_1570)
    )));
    b_1565 = ((0.3125 / tmpvar_1574) + (cos(
      ((7.0 * tmpvar_1570) + (tmpvar_1575 * tmpvar_1575))
    ) / (100.0 * tmpvar_1574)));
    float tmpvar_1576;
    tmpvar_1576 = clamp ((b_1565 / 0.4), 0.0, 1.0);
    b_1565 = (b_1565 * (tmpvar_1576 * (tmpvar_1576 * 
      (3.0 - (2.0 * tmpvar_1576))
    )));
    vec4 tmpvar_1577;
    tmpvar_1577.w = 1.0;
    tmpvar_1577.x = (b_1565 * 0.3);
    tmpvar_1577.y = ((0.3 * b_1565) + (0.2 * sin(
      (tmpvar_1570 + time)
    )));
    tmpvar_1577.z = (b_1565 * 0.5);
    fragColor_1564 = tmpvar_1577;
    p_1567 = ((tmpvar_1561 / (100000.0 * zoom)) - 0.628);
    float tmpvar_1578;
    float tmpvar_1579;
    tmpvar_1579 = (min (abs(
      (p_1567.y / p_1567.x)
    ), 1.0) / max (abs(
      (p_1567.y / p_1567.x)
    ), 1.0));
    float tmpvar_1580;
    tmpvar_1580 = (tmpvar_1579 * tmpvar_1579);
    tmpvar_1580 = (((
      ((((
        ((((-0.01213232 * tmpvar_1580) + 0.05368138) * tmpvar_1580) - 0.1173503)
       * tmpvar_1580) + 0.1938925) * tmpvar_1580) - 0.3326756)
     * tmpvar_1580) + 0.9999793) * tmpvar_1579);
    tmpvar_1580 = (tmpvar_1580 + (float(
      (abs((p_1567.y / p_1567.x)) > 1.0)
    ) * (
      (tmpvar_1580 * -2.0)
     + 1.570796)));
    tmpvar_1578 = (tmpvar_1580 * sign((p_1567.y / p_1567.x)));
    if ((abs(p_1567.x) > (1e-08 * abs(p_1567.y)))) {
      if ((p_1567.x < 0.0)) {
        if ((p_1567.y >= 0.0)) {
          tmpvar_1578 += 3.141593;
        } else {
          tmpvar_1578 = (tmpvar_1578 - 3.141593);
        };
      };
    } else {
      tmpvar_1578 = (sign(p_1567.y) * 1.570796);
    };
    vec2 x_1581;
    x_1581 = (p_1567 / 2.0);
    r_1566 = (sqrt(dot (x_1581, x_1581)) + 0.0001);
    b_1565 = (1.9 * sin((
      ((8.0 * r_1566) + time)
     - 
      (2.0 * tmpvar_1578)
    )));
    b_1565 = ((0.3125 / r_1566) + (cos(
      ((7.0 * tmpvar_1578) + (b_1565 * b_1565))
    ) / (100.0 * r_1566)));
    float tmpvar_1582;
    tmpvar_1582 = clamp ((b_1565 / 0.4), 0.0, 1.0);
    b_1565 = (b_1565 * (tmpvar_1582 * (tmpvar_1582 * 
      (3.0 - (2.0 * tmpvar_1582))
    )));
    vec4 tmpvar_1583;
    tmpvar_1583.w = 1.0;
    tmpvar_1583.x = (b_1565 * 0.3);
    tmpvar_1583.y = ((0.3 * b_1565) + (0.2 * sin(
      (tmpvar_1578 + time)
    )));
    tmpvar_1583.z = (b_1565 * 0.5);
    fragColor_1564 = (tmpvar_1577 * tmpvar_1583);
    float tmpvar_1584;
    tmpvar_1584 = clamp (((
      sqrt(dot (tmpvar_1569, tmpvar_1569))
     - 0.8) / -0.3), 0.0, 1.0);
    fragColor_1564 = (fragColor_1564 * (tmpvar_1584 * (tmpvar_1584 * 
      (3.0 - (2.0 * tmpvar_1584))
    )));
    tmpvar_1560 = fragColor_1564;
  } else {
    tmpvar_1560 = vec4(0.0, 0.0, 0.0, 0.0);
  };
  buff_11 = (buff_11 + tmpvar_1560);
  vec4 tmpvar_1585;
  tmpvar_1585 = min (max (buff_11, 0.0), 1.0);
  buff_11 = tmpvar_1585;
  vec2 poss_1586;
  vec4 tmpvar_1587;
  vec2 pos_1588;
  poss_1586 = (tmpvar_2 - shippos);
  pos_1588 = poss_1586;
  if ((((
    (poss_1586.x > 0.0)
   && 
    (poss_1586.x < radius)
  ) && (poss_1586.y > 0.0)) && (poss_1586.y < radius))) {
    vec4 ancl_1589;
    vec2 ttpos_1590;
    vec4 cl_1591;
    vec3 result_1592;
    float b_1593;
    vec2 position_1594;
    vec3 color_1595;
    vec2 p_1596;
    vec4 tmpc_1597;
    float d_1598;
    vec4 cc_1599;
    vec2 uv_1600;
    float val_1601;
    float t_1602;
    float n_1603;
    pos_1588 = (((poss_1586 * 2.0) - vec2(radius)) / radius);
    mat2 tmpvar_1604;
    float tmpvar_1605;
    tmpvar_1605 = cos(angle);
    tmpvar_1604[0].x = tmpvar_1605;
    float tmpvar_1606;
    tmpvar_1606 = sin(angle);
    tmpvar_1604[0].y = -(tmpvar_1606);
    tmpvar_1604[1].x = tmpvar_1606;
    tmpvar_1604[1].y = tmpvar_1605;
    pos_1588 = (pos_1588 * tmpvar_1604);
    pos_1588.x = abs(pos_1588.x);
    mat2 tmpvar_1607;
    tmpvar_1607[0].x = 0.4084875;
    tmpvar_1607[0].y = -0.912764;
    tmpvar_1607[1].x = 0.912764;
    tmpvar_1607[1].y = 0.4084875;
    pos_1588 = (pos_1588 * tmpvar_1607);
    vec2 tmpvar_1608;
    tmpvar_1608.x = (0.7 * pos_1588.x);
    tmpvar_1608.y = (pos_1588.y - 0.5);
    float tmpvar_1609;
    float tmpvar_1610;
    tmpvar_1610 = (4.0 / radius);
    tmpvar_1609 = clamp (((0.5 - 
      sqrt(dot (tmpvar_1608, tmpvar_1608))
    ) / tmpvar_1610), 0.0, 1.0);
    vec2 x_1611;
    x_1611 = (pos_1588 - vec2(0.0, -0.8));
    float tmpvar_1612;
    tmpvar_1612 = clamp (((1.9 - 
      sqrt(dot (x_1611, x_1611))
    ) / tmpvar_1610), 0.0, 1.0);
    vec2 x_1613;
    x_1613 = (pos_1588 - vec2(0.0, -0.8));
    float tmpvar_1614;
    tmpvar_1614 = clamp (((1.28 - 
      sqrt(dot (x_1613, x_1613))
    ) / tmpvar_1610), 0.0, 1.0);
    vec2 x_1615;
    x_1615 = (pos_1588 - vec2(0.0, -0.8));
    float tmpvar_1616;
    tmpvar_1616 = clamp (((1.18 - 
      sqrt(dot (x_1615, x_1615))
    ) / tmpvar_1610), 0.0, 1.0);
    vec2 x_1617;
    x_1617 = (pos_1588 - vec2(0.0, -0.8));
    float tmpvar_1618;
    tmpvar_1618 = clamp (((1.14 - 
      sqrt(dot (x_1617, x_1617))
    ) / tmpvar_1610), 0.0, 1.0);
    float tmpvar_1619;
    tmpvar_1619 = clamp (((
      ((-(pos_1588.x) * 1.2) + pos_1588.y)
     - 0.2) / tmpvar_1610), 0.0, 1.0);
    float edge0_1620;
    edge0_1620 = ((pos_1588.y - 0.2) - 0.01);
    float tmpvar_1621;
    tmpvar_1621 = clamp (((0.15 - edge0_1620) / (
      ((pos_1588.y - 0.2) + 0.01)
     - edge0_1620)), 0.0, 1.0);
    float tmpvar_1622;
    tmpvar_1622 = clamp (((
      -(pos_1588.x)
     + 
      ((pos_1588.y + 0.97) / 4.5)
    ) / tmpvar_1610), 0.0, 1.0);
    float tmpvar_1623;
    tmpvar_1623 = clamp (((0.2 - pos_1588.y) / 0.01), 0.0, 1.0);
    n_1603 = (max ((
      ((((
        (tmpvar_1609 * (tmpvar_1609 * (3.0 - (2.0 * tmpvar_1609))))
       - 
        (tmpvar_1612 * (tmpvar_1612 * (3.0 - (2.0 * tmpvar_1612))))
      ) + (tmpvar_1614 * 
        (tmpvar_1614 * (3.0 - (2.0 * tmpvar_1614)))
      )) - (tmpvar_1616 * (tmpvar_1616 * 
        (3.0 - (2.0 * tmpvar_1616))
      ))) + (tmpvar_1618 * (tmpvar_1618 * (3.0 - 
        (2.0 * tmpvar_1618)
      ))))
     - 
      ((tmpvar_1619 * (tmpvar_1619 * (3.0 - 
        (2.0 * tmpvar_1619)
      ))) * (tmpvar_1621 * (tmpvar_1621 * (3.0 - 
        (2.0 * tmpvar_1621)
      ))))
    ), 0.0) + ((tmpvar_1622 * 
      (tmpvar_1622 * (3.0 - (2.0 * tmpvar_1622)))
    ) * (tmpvar_1623 * 
      (tmpvar_1623 * (3.0 - (2.0 * tmpvar_1623)))
    )));
    float tmpvar_1624;
    tmpvar_1624 = sign(min (n_1603, 1.0));
    n_1603 = tmpvar_1624;
    mat2 tmpvar_1625;
    tmpvar_1625[0].x = tmpvar_1605;
    tmpvar_1625[0].y = -(tmpvar_1606);
    tmpvar_1625[1].x = tmpvar_1606;
    tmpvar_1625[1].y = tmpvar_1605;
    vec2 x_1626;
    x_1626 = (10.0 * ((
      ((poss_1586 * 2.0) - vec2(radius))
     / radius) * tmpvar_1625));
    float md_1629;
    vec2 mr_1630;
    vec2 mg_1631;
    vec2 f_1632;
    vec2 n_1633;
    n_1633 = floor(x_1626);
    f_1632 = fract(x_1626);
    md_1629 = 8.0;
    for (int j_1628 = -1; j_1628 <= 1; j_1628++) {
      vec2 tmpvar_1634;
      tmpvar_1634.x = -1.0;
      tmpvar_1634.y = float(j_1628);
      vec2 tmpvar_1635;
      tmpvar_1635.x = dot ((n_1633 + tmpvar_1634), vec2(127.1, 311.7));
      tmpvar_1635.y = dot ((n_1633 + tmpvar_1634), vec2(269.5, 183.3));
      vec2 tmpvar_1636;
      tmpvar_1636 = ((tmpvar_1634 + (0.5 + 
        (0.5 * sin((iTime + (6.2831 * 
          fract((sin(tmpvar_1635) * 43758.55))
        ))))
      )) - f_1632);
      float tmpvar_1637;
      tmpvar_1637 = dot (tmpvar_1636, tmpvar_1636);
      if ((tmpvar_1637 < md_1629)) {
        md_1629 = tmpvar_1637;
        mr_1630 = tmpvar_1636;
        mg_1631 = tmpvar_1634;
      };
      vec2 tmpvar_1638;
      tmpvar_1638.x = 0.0;
      tmpvar_1638.y = float(j_1628);
      vec2 tmpvar_1639;
      tmpvar_1639.x = dot ((n_1633 + tmpvar_1638), vec2(127.1, 311.7));
      tmpvar_1639.y = dot ((n_1633 + tmpvar_1638), vec2(269.5, 183.3));
      vec2 tmpvar_1640;
      tmpvar_1640 = ((tmpvar_1638 + (0.5 + 
        (0.5 * sin((iTime + (6.2831 * 
          fract((sin(tmpvar_1639) * 43758.55))
        ))))
      )) - f_1632);
      float tmpvar_1641;
      tmpvar_1641 = dot (tmpvar_1640, tmpvar_1640);
      if ((tmpvar_1641 < md_1629)) {
        md_1629 = tmpvar_1641;
        mr_1630 = tmpvar_1640;
        mg_1631 = tmpvar_1638;
      };
      vec2 tmpvar_1642;
      tmpvar_1642.x = 1.0;
      tmpvar_1642.y = float(j_1628);
      vec2 tmpvar_1643;
      tmpvar_1643.x = dot ((n_1633 + tmpvar_1642), vec2(127.1, 311.7));
      tmpvar_1643.y = dot ((n_1633 + tmpvar_1642), vec2(269.5, 183.3));
      vec2 tmpvar_1644;
      tmpvar_1644 = ((tmpvar_1642 + (0.5 + 
        (0.5 * sin((iTime + (6.2831 * 
          fract((sin(tmpvar_1643) * 43758.55))
        ))))
      )) - f_1632);
      float tmpvar_1645;
      tmpvar_1645 = dot (tmpvar_1644, tmpvar_1644);
      if ((tmpvar_1645 < md_1629)) {
        md_1629 = tmpvar_1645;
        mr_1630 = tmpvar_1644;
        mg_1631 = tmpvar_1642;
      };
    };
    md_1629 = 8.0;
    for (int j_1627 = -2; j_1627 <= 2; j_1627++) {
      vec2 tmpvar_1646;
      tmpvar_1646.x = -2.0;
      tmpvar_1646.y = float(j_1627);
      vec2 tmpvar_1647;
      tmpvar_1647 = (mg_1631 + tmpvar_1646);
      vec2 tmpvar_1648;
      tmpvar_1648.x = dot ((n_1633 + tmpvar_1647), vec2(127.1, 311.7));
      tmpvar_1648.y = dot ((n_1633 + tmpvar_1647), vec2(269.5, 183.3));
      vec2 tmpvar_1649;
      tmpvar_1649 = ((tmpvar_1647 + (0.5 + 
        (0.5 * sin((iTime + (6.2831 * 
          fract((sin(tmpvar_1648) * 43758.55))
        ))))
      )) - f_1632);
      float tmpvar_1650;
      tmpvar_1650 = dot ((mr_1630 - tmpvar_1649), (mr_1630 - tmpvar_1649));
      if ((tmpvar_1650 > 1e-05)) {
        md_1629 = min (md_1629, dot ((0.5 * 
          (mr_1630 + tmpvar_1649)
        ), normalize(
          (tmpvar_1649 - mr_1630)
        )));
      };
      vec2 tmpvar_1651;
      tmpvar_1651.x = -1.0;
      tmpvar_1651.y = float(j_1627);
      vec2 tmpvar_1652;
      tmpvar_1652 = (mg_1631 + tmpvar_1651);
      vec2 tmpvar_1653;
      tmpvar_1653.x = dot ((n_1633 + tmpvar_1652), vec2(127.1, 311.7));
      tmpvar_1653.y = dot ((n_1633 + tmpvar_1652), vec2(269.5, 183.3));
      vec2 tmpvar_1654;
      tmpvar_1654 = ((tmpvar_1652 + (0.5 + 
        (0.5 * sin((iTime + (6.2831 * 
          fract((sin(tmpvar_1653) * 43758.55))
        ))))
      )) - f_1632);
      float tmpvar_1655;
      tmpvar_1655 = dot ((mr_1630 - tmpvar_1654), (mr_1630 - tmpvar_1654));
      if ((tmpvar_1655 > 1e-05)) {
        md_1629 = min (md_1629, dot ((0.5 * 
          (mr_1630 + tmpvar_1654)
        ), normalize(
          (tmpvar_1654 - mr_1630)
        )));
      };
      vec2 tmpvar_1656;
      tmpvar_1656.x = 0.0;
      tmpvar_1656.y = float(j_1627);
      vec2 tmpvar_1657;
      tmpvar_1657 = (mg_1631 + tmpvar_1656);
      vec2 tmpvar_1658;
      tmpvar_1658.x = dot ((n_1633 + tmpvar_1657), vec2(127.1, 311.7));
      tmpvar_1658.y = dot ((n_1633 + tmpvar_1657), vec2(269.5, 183.3));
      vec2 tmpvar_1659;
      tmpvar_1659 = ((tmpvar_1657 + (0.5 + 
        (0.5 * sin((iTime + (6.2831 * 
          fract((sin(tmpvar_1658) * 43758.55))
        ))))
      )) - f_1632);
      float tmpvar_1660;
      tmpvar_1660 = dot ((mr_1630 - tmpvar_1659), (mr_1630 - tmpvar_1659));
      if ((tmpvar_1660 > 1e-05)) {
        md_1629 = min (md_1629, dot ((0.5 * 
          (mr_1630 + tmpvar_1659)
        ), normalize(
          (tmpvar_1659 - mr_1630)
        )));
      };
      vec2 tmpvar_1661;
      tmpvar_1661.x = 1.0;
      tmpvar_1661.y = float(j_1627);
      vec2 tmpvar_1662;
      tmpvar_1662 = (mg_1631 + tmpvar_1661);
      vec2 tmpvar_1663;
      tmpvar_1663.x = dot ((n_1633 + tmpvar_1662), vec2(127.1, 311.7));
      tmpvar_1663.y = dot ((n_1633 + tmpvar_1662), vec2(269.5, 183.3));
      vec2 tmpvar_1664;
      tmpvar_1664 = ((tmpvar_1662 + (0.5 + 
        (0.5 * sin((iTime + (6.2831 * 
          fract((sin(tmpvar_1663) * 43758.55))
        ))))
      )) - f_1632);
      float tmpvar_1665;
      tmpvar_1665 = dot ((mr_1630 - tmpvar_1664), (mr_1630 - tmpvar_1664));
      if ((tmpvar_1665 > 1e-05)) {
        md_1629 = min (md_1629, dot ((0.5 * 
          (mr_1630 + tmpvar_1664)
        ), normalize(
          (tmpvar_1664 - mr_1630)
        )));
      };
      vec2 tmpvar_1666;
      tmpvar_1666.x = 2.0;
      tmpvar_1666.y = float(j_1627);
      vec2 tmpvar_1667;
      tmpvar_1667 = (mg_1631 + tmpvar_1666);
      vec2 tmpvar_1668;
      tmpvar_1668.x = dot ((n_1633 + tmpvar_1667), vec2(127.1, 311.7));
      tmpvar_1668.y = dot ((n_1633 + tmpvar_1667), vec2(269.5, 183.3));
      vec2 tmpvar_1669;
      tmpvar_1669 = ((tmpvar_1667 + (0.5 + 
        (0.5 * sin((iTime + (6.2831 * 
          fract((sin(tmpvar_1668) * 43758.55))
        ))))
      )) - f_1632);
      float tmpvar_1670;
      tmpvar_1670 = dot ((mr_1630 - tmpvar_1669), (mr_1630 - tmpvar_1669));
      if ((tmpvar_1670 > 1e-05)) {
        md_1629 = min (md_1629, dot ((0.5 * 
          (mr_1630 + tmpvar_1669)
        ), normalize(
          (tmpvar_1669 - mr_1630)
        )));
      };
    };
    t_1602 = time;
    vec2 tmpvar_1671;
    tmpvar_1671.x = (0.67 * pos_1588.x);
    tmpvar_1671.y = (pos_1588.y - 0.05);
    float tmpvar_1672;
    tmpvar_1672 = (sqrt(dot (tmpvar_1671, tmpvar_1671)) * 1.9);
    val_1601 = (tmpvar_1624 + ((2.0 * md_1629) * (0.5 + 
      (0.5 * sin((64.0 * md_1629)))
    )));
    float tmpvar_1673;
    tmpvar_1673 = (0.02 / (0.015 + abs(
      (tmpvar_1672 - 1.0)
    )));
    float tmpvar_1674;
    if (shua) {
      tmpvar_1674 = 1.0;
    } else {
      tmpvar_1674 = 0.0;
    };
    float tmpvar_1675;
    if (shua) {
      tmpvar_1675 = 1.0;
    } else {
      tmpvar_1675 = 0.0;
    };
    float tmpvar_1676;
    if (shua) {
      tmpvar_1676 = 1.0;
    } else {
      tmpvar_1676 = 0.0;
    };
    vec4 tmpvar_1677;
    tmpvar_1677.w = 1.0;
    tmpvar_1677.x = ((0.3 + (2.0 * tmpvar_1674)) + (3.35 * exbff_8.x));
    tmpvar_1677.y = ((0.7 - (0.5 * exbff_8.y)) - (0.3 * tmpvar_1675));
    tmpvar_1677.z = ((1.0 - (0.8 * tmpvar_1676)) - (0.9 * exbff_8.z));
    float tmpvar_1678;
    tmpvar_1678 = clamp (((tmpvar_1672 - 1.0) / -0.15), 0.0, 1.0);
    float tmpvar_1679;
    tmpvar_1679 = clamp (((tmpvar_1672 - 1.0) / -0.15), 0.0, 1.0);
    vec4 tmpvar_1680;
    tmpvar_1680.xyw = vec3(0.0, 0.0, 1.0);
    tmpvar_1680.z = (((0.8 * txeb_6.x) * (1.0 - 
      (min (1.0, float((1.0 >= tmpvar_1672))) * val_1601)
    )) * (1.0 - min (1.0, 
      (tmpvar_1679 * (tmpvar_1679 * (3.0 - (2.0 * tmpvar_1679))))
    )));
    vec4 tmpvar_1681;
    tmpvar_1681 = ((tmpvar_1677 - (
      ((0.8 * txeb_6) * (1.0 - (min (1.0, 
        float((1.0 >= tmpvar_1672))
      ) * val_1601)))
     * 
      (1.0 - min (1.0, (tmpvar_1678 * (tmpvar_1678 * 
        (3.0 - (2.0 * tmpvar_1678))
      ))))
    )) + tmpvar_1680);
    float tmpvar_1682;
    if (shua) {
      tmpvar_1682 = 1.0;
    } else {
      tmpvar_1682 = 0.0;
    };
    float tmpvar_1683;
    if (shua) {
      tmpvar_1683 = 1.0;
    } else {
      tmpvar_1683 = 0.0;
    };
    float tmpvar_1684;
    if (shua) {
      tmpvar_1684 = 1.0;
    } else {
      tmpvar_1684 = 0.0;
    };
    vec4 tmpvar_1685;
    tmpvar_1685.w = 1.0;
    tmpvar_1685.x = ((0.3 - (0.535 * exbff_8.x)) + (0.5 * tmpvar_1682));
    tmpvar_1685.y = ((0.7 - (1.875 * exbff_8.y)) - (0.3 * tmpvar_1683));
    tmpvar_1685.z = ((1.0 - (2.25 * exbff_8.z)) - (0.8 * tmpvar_1684));
    float tmpvar_1686;
    tmpvar_1686 = clamp (((tmpvar_1672 - 1.1) / -0.1), 0.0, 1.0);
    vec4 tmpvar_1687;
    tmpvar_1687 = (tmpvar_1685 + ((txeb_6 * 
      (1.0 - (min (1.0, float(
        (1.0 >= tmpvar_1672)
      )) * val_1601))
    ) * (1.0 - 
      min (1.0, (tmpvar_1686 * (tmpvar_1686 * (3.0 - 
        (2.0 * tmpvar_1686)
      ))))
    )));
    mat2 tmpvar_1688;
    float tmpvar_1689;
    tmpvar_1689 = cos(angle);
    tmpvar_1688[0].x = tmpvar_1689;
    float tmpvar_1690;
    tmpvar_1690 = sin(angle);
    tmpvar_1688[0].y = -(tmpvar_1690);
    tmpvar_1688[1].x = tmpvar_1690;
    tmpvar_1688[1].y = tmpvar_1689;
    float tmpvar_1691;
    tmpvar_1691 = (radius / 2.0);
    uv_1600 = (((poss_1586 / tmpvar_1691) - 1.0) * tmpvar_1688);
    uv_1600.x = abs(uv_1600.x);
    cc_1599.w = 1.0;
    d_1598 = (sqrt(dot (uv_1600, uv_1600)) - time);
    cc_1599.x = (abs((float(mod (
      (uv_1600.y - ((uv_1600.x * 2.0) * d_1598))
    , 
      (uv_1600.x * 1.1)
    )))) / 2.5);
    cc_1599.y = (abs((float(mod (
      (uv_1600.y - ((uv_1600.x * 2.0) * d_1598))
    , 
      (uv_1600.x * 1.1)
    )))) / 2.5);
    cc_1599.z = (abs((float(mod (
      (uv_1600.y - ((uv_1600.x * 2.0) * d_1598))
    , 
      (uv_1600.x * 1.1)
    )))) * 2.0);
    uv_1600 = ((poss_1586 / tmpvar_1691) - 1.0);
    mat2 tmpvar_1692;
    tmpvar_1692[0].x = tmpvar_1689;
    tmpvar_1692[0].y = -(tmpvar_1690);
    tmpvar_1692[1].x = tmpvar_1690;
    tmpvar_1692[1].y = tmpvar_1689;
    mat2 tmpvar_1693;
    tmpvar_1693[0].x = 6.5128e-06;
    tmpvar_1693[0].y = 1.0;
    tmpvar_1693[1].x = -1.0;
    tmpvar_1693[1].y = 6.5128e-06;
    uv_1600 = (uv_1600 * (tmpvar_1692 * tmpvar_1693));
    vec2 tmpvar_1694;
    tmpvar_1694 = (15.0 * uv_1600);
    p_1596 = tmpvar_1694;
    t_1602 = (time * 10.0);
    color_1595.xy = vec2(0.0, 0.0);
    float tmpvar_1695;
    tmpvar_1695 = sqrt(dot (tmpvar_1694, tmpvar_1694));
    vec2 tmpvar_1696;
    tmpvar_1696 = (tmpvar_1694 * 10.0);
    vec2 tmpvar_1697;
    tmpvar_1697 = (0.2 * tmpvar_1696);
    float tmpvar_1698;
    tmpvar_1698 = (1.0/(cos(tmpvar_1694.y)));
    color_1595.z = clamp (1.0, 0.0, ((5.0 * 
      sin(((tmpvar_1696.x * tmpvar_1698) + t_1602))
    ) - 2.0));
    color_1595.z = (color_1595.z + clamp (1.0, 0.0, (
      (3.0 * sin(((
        (0.9 * tmpvar_1696.x)
       * tmpvar_1698) + (t_1602 * 0.6))))
     - 2.5)));
    vec2 x_1699;
    x_1699 = ((tmpvar_1694 * sin(tmpvar_1697.x)) * sin((
      (0.4 * t_1602)
     - tmpvar_1697.y)));
    color_1595 = (color_1595 * ((6.0 * 
      (clamp (1.0, 0.0, (ceil(
        (1.0 - clamp (1.0, 0.0, tmpvar_1695))
      ) * sqrt(
        dot (x_1699, x_1699)
      ))) + (-1.4 + (sin(
        (tmpvar_1694.y + (t_1602 * 0.2))
      ) * 2.0)))
    ) * (1.0 - tmpvar_1695)));
    vec3 tmpvar_1700;
    tmpvar_1700.x = (color_1595.z * 0.6);
    tmpvar_1700.y = (color_1595.z * 0.7);
    tmpvar_1700.z = (color_1595.z * 3.0);
    color_1595 = (tmpvar_1700 * (1.0 - clamp (1.0, 0.0, 
      sqrt(dot (tmpvar_1694, tmpvar_1694))
    )));
    color_1595 = ((color_1595 + sqrt(
      dot (tmpvar_1694, tmpvar_1694)
    )) * color_1595.x);
    vec3 tmpvar_1701;
    tmpvar_1701 = clamp (vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0), color_1595);
    color_1595 = tmpvar_1701;
    vec4 tmpvar_1702;
    tmpvar_1702.w = 1.0;
    tmpvar_1702.xyz = tmpvar_1701;
    tmpc_1597 = (cc_1599 + tmpvar_1702);
    mat2 tmpvar_1703;
    tmpvar_1703[0].x = tmpvar_1689;
    tmpvar_1703[0].y = -(tmpvar_1690);
    tmpvar_1703[1].x = tmpvar_1690;
    tmpvar_1703[1].y = tmpvar_1689;
    position_1594 = (((poss_1586 / tmpvar_1691) - 1.0) * tmpvar_1703);
    position_1594.y = (position_1594.y - 0.55);
    position_1594 = (position_1594 - (position_1594 * 0.5));
    vec3 tmpvar_1704;
    tmpvar_1704.y = 0.05;
    float tmpvar_1705;
    tmpvar_1705 = (animlamp - 1.5);
    tmpvar_1704.x = (tmpvar_1705 / 4.5);
    tmpvar_1704.z = (0.05 + (0.35 * (1.0 - 
      (tmpvar_1705 / 4.5)
    )));
    float tmpvar_1706;
    tmpvar_1706 = (animlamp / 2.0);
    b_1593 = (cos((
      ((12.56632 * animlamp) * position_1594.x)
     - 
      (tmpvar_1706 * animlcounter)
    )) / 8.0);
    b_1593 = (b_1593 + (cos(
      (((50.26527 * animlamp) * position_1594.x) - (tmpvar_1706 * animlcounter))
    ) / 32.0));
    b_1593 = ((0.15 + (0.2 * b_1593)) * (0.1 / abs(
      (position_1594.y - (0.045 * b_1593))
    )));
    result_1592 = (max ((b_1593 * tmpvar_1704), 0.4) - 0.4);
    cl_1591 = vec4(0.0, 0.0, 0.0, 1.0);
    ttpos_1590 = vec2(0.0, 0.0);
    if ((lpower < 20.0)) {
      vec2 q_1707;
      float tmpvar_1708;
      tmpvar_1708 = (radius / 2.0);
      vec2 tmpvar_1709;
      tmpvar_1709 = (poss_1586 - vec2(tmpvar_1708));
      ttpos_1590.x = tmpvar_1709.x;
      vec2 tmpvar_1710;
      tmpvar_1710 = ((poss_1586 - (250.0 * zoom)) / radius);
      vec2 tmpvar_1711;
      tmpvar_1711 = ((lhitpos * zoom) / radius);
      float tmpvar_1712;
      tmpvar_1712 = (radius / 500.0);
      ttpos_1590.y = (tmpvar_1709.y - (20.0 * (tmpvar_1712 / zoom)));
      mat2 tmpvar_1713;
      float tmpvar_1714;
      tmpvar_1714 = cos(angle);
      tmpvar_1713[0].x = tmpvar_1714;
      float tmpvar_1715;
      tmpvar_1715 = sin(angle);
      tmpvar_1713[0].y = -(tmpvar_1715);
      tmpvar_1713[1].x = tmpvar_1715;
      tmpvar_1713[1].y = tmpvar_1714;
      ttpos_1590 = (ttpos_1590 * (tmpvar_1713 * 2.0));
      mat2 tmpvar_1716;
      tmpvar_1716[0].x = tmpvar_1714;
      tmpvar_1716[0].y = -(tmpvar_1715);
      tmpvar_1716[1].x = tmpvar_1715;
      tmpvar_1716[1].y = tmpvar_1714;
      q_1707 = (((poss_1586 - vec2(tmpvar_1708)) / (50.0 * tmpvar_1712)) * tmpvar_1716);
      q_1707.y = (q_1707.y - 2.75);
      q_1707.y = (q_1707.y / (tmpvar_1712 / zoom));
      q_1707.x = abs(q_1707.x);
      p_1596 = (15.0 * q_1707);
      vec3 tmpvar_1717;
      tmpvar_1717.x = (0.1 * max (0.0, p_1596.y));
      tmpvar_1717.y = ((float(
        (ttpos_1590.y >= 0.0)
      ) * 0.05) * max (0.0, p_1596.x));
      tmpvar_1717.z = ((float(
        (ttpos_1590.y >= 0.0)
      ) * 0.5) * max (0.0, p_1596.x));
      vec2 x_1718;
      x_1718 = (q_1707 * (q_1707.x * 15.1));
      vec4 tmpvar_1719;
      tmpvar_1719.w = 1.0;
      tmpvar_1719.xyz = (tmpvar_1717 / abs((
        (((8.0 * p_1596.x) * sqrt(dot (q_1707, q_1707))) + cos(((
          -(time)
         * 15.0) + p_1596.y)))
       * 
        sqrt(dot (x_1718, x_1718))
      )));
      float tmpvar_1720;
      tmpvar_1720 = sqrt(dot (tmpvar_1711, tmpvar_1711));
      float tmpvar_1721;
      if (wwh) {
        tmpvar_1721 = 0.0;
      } else {
        tmpvar_1721 = 1.0;
      };
      float tmpvar_1722;
      tmpvar_1722 = sqrt(dot (tmpvar_1711, tmpvar_1711));
      float tmpvar_1723;
      if (wwh) {
        tmpvar_1723 = 0.0;
      } else {
        tmpvar_1723 = 1.0;
      };
      float tmpvar_1724;
      float tmpvar_1725;
      tmpvar_1725 = clamp ((sqrt(
        dot (tmpvar_1711, tmpvar_1711)
      ) / 5.0), 0.0, 1.0);
      tmpvar_1724 = (tmpvar_1725 * (tmpvar_1725 * (3.0 - 
        (2.0 * tmpvar_1725)
      )));
      float tmpvar_1726;
      if (wwh) {
        tmpvar_1726 = 0.0;
      } else {
        tmpvar_1726 = 1.0;
      };
      float edge0_1727;
      edge0_1727 = ((tmpvar_1720 + 0.05) + (0.2 * tmpvar_1721));
      float tmpvar_1728;
      tmpvar_1728 = clamp (((
        sqrt(dot (tmpvar_1710, tmpvar_1710))
       - edge0_1727) / (
        ((tmpvar_1722 + (0.15 * tmpvar_1723)) - ((2.55 * tmpvar_1724) * tmpvar_1726))
       - edge0_1727)), 0.0, 1.0);
      cl_1591 = ((tmpvar_1719 * (1.0 - tmpvar_1701.x)) * (tmpvar_1728 * (tmpvar_1728 * 
        (3.0 - (2.0 * tmpvar_1728))
      )));
    };
    ancl_1589 = vec4(0.0, 0.0, 0.0, 0.0);
    if ((bulletanimtimer > 0.0)) {
      vec3 V_1729;
      uv_1600 = ((poss_1586 / (radius / 2.0)) - 1.0);
      mat2 tmpvar_1730;
      float tmpvar_1731;
      tmpvar_1731 = cos(angle);
      tmpvar_1730[0].x = tmpvar_1731;
      float tmpvar_1732;
      tmpvar_1732 = sin(angle);
      tmpvar_1730[0].y = -(tmpvar_1732);
      tmpvar_1730[1].x = tmpvar_1732;
      tmpvar_1730[1].y = tmpvar_1731;
      uv_1600 = (uv_1600 * tmpvar_1730);
      uv_1600 = (uv_1600 - vec2(0.0, 0.55));
      uv_1600 = (uv_1600 - (uv_1600 * 0.5));
      uv_1600.y = (uv_1600.y * 20.5);
      uv_1600.x = (uv_1600.x * 5.5);
      uv_1600 = (uv_1600 + (sin(
        (((uv_1600.x * 10.0) * (uv_1600.y * 1.11)) + (time * 2.0))
      ) * 0.15));
      vec3 tmpvar_1733;
      tmpvar_1733.yz = vec2(1.0, 2.0);
      tmpvar_1733.x = ((uv_1600.x * 0.1) + (bulletanimtimer * 0.725));
      V_1729.z = (2.0 * clamp ((
        abs(((vec3(mod ((
          (tmpvar_1733.x * 6.0)
         + vec3(0.0, 0.0, 2.0)), 6.0))) - 2.0))
       - 1.0), 0.0, 0.5)).z;
      V_1729 = (V_1729 * clamp ((
        (0.7 - abs(uv_1600.y))
       * 3.0), 0.0, 1.0));
      V_1729 = (V_1729 * (1.0 - (
        sin(((uv_1600.y * uv_1600.y) * 30.0))
       * 0.26)));
      vec4 tmpvar_1734;
      tmpvar_1734.w = 1.0;
      tmpvar_1734.xyz = V_1729;
      ancl_1589 = tmpvar_1734;
    };
    vec2 tmpvar_1735;
    tmpvar_1735.x = (0.67 * pos_1588.x);
    tmpvar_1735.y = (pos_1588.y + 0.05);
    float tmpvar_1736;
    tmpvar_1736 = (sqrt(dot (tmpvar_1735, tmpvar_1735)) * 1.9);
    vec4 tmpvar_1737;
    tmpvar_1737.w = 1.0;
    tmpvar_1737.xyz = result_1592;
    vec4 tmpvar_1738;
    tmpvar_1738.w = 1.0;
    tmpvar_1738.xyz = result_1592;
    float tmpvar_1739;
    tmpvar_1739 = clamp (((tmpvar_1672 - 1.4) / -0.3), 0.0, 1.0);
    tmpvar_1587 = (((
      ((mix ((
        ((min (1.0, (
          float((1.0 >= tmpvar_1672))
         * val_1601)) * tmpvar_1681) + (tmpvar_1738 * float((1.0 >= tmpvar_1736))))
       + 
        (ancl_1589 * float((1.0 >= tmpvar_1736)))
      ), (
        (tmpc_1597 + (tmpvar_1737 * 0.3))
       * tmpvar_1624), val_1601) + (tmpvar_1673 * tmpvar_1687)) + (((
        (cl_1591 * ttpos_1590.y)
       / lpower) * (20.0 - lpower)) / lpower))
     + 
      (((1.0 - (
        min (1.0, float((1.0 >= tmpvar_1672)))
       * val_1601)) * min (1.0, float(
        (1.0 >= tmpvar_1672)
      ))) * mcol_10)
    ) + (
      (1.0 - min (1.0, float((1.0 >= tmpvar_1672))))
     * tmpvar_1585)) + ((
      (0.3 * txeb_6)
     * 
      (1.0 - (min (1.0, float(
        (1.0 >= tmpvar_1672)
      )) * val_1601))
    ) * (1.0 - 
      min (1.0, (tmpvar_1739 * (tmpvar_1739 * (3.0 - 
        (2.0 * tmpvar_1739)
      ))))
    )));
  } else {
    pos_1588 = (((pos_1588 * 2.0) - vec2(radius)) / radius);
    mat2 tmpvar_1740;
    float tmpvar_1741;
    tmpvar_1741 = cos(angle);
    tmpvar_1740[0].x = tmpvar_1741;
    float tmpvar_1742;
    tmpvar_1742 = sin(angle);
    tmpvar_1740[0].y = -(tmpvar_1742);
    tmpvar_1740[1].x = tmpvar_1742;
    tmpvar_1740[1].y = tmpvar_1741;
    pos_1588 = (pos_1588 * tmpvar_1740);
    pos_1588.x = abs(pos_1588.x);
    mat2 tmpvar_1743;
    tmpvar_1743[0].x = 0.4084875;
    tmpvar_1743[0].y = -0.912764;
    tmpvar_1743[1].x = 0.912764;
    tmpvar_1743[1].y = 0.4084875;
    pos_1588 = (pos_1588 * tmpvar_1743);
    vec2 tmpvar_1744;
    tmpvar_1744.x = (0.67 * pos_1588.x);
    tmpvar_1744.y = (pos_1588.y - 0.05);
    float tmpvar_1745;
    tmpvar_1745 = (0.02 / (0.015 + abs(
      ((sqrt(dot (tmpvar_1744, tmpvar_1744)) * 1.9) - 1.0)
    )));
    float tmpvar_1746;
    if (shua) {
      tmpvar_1746 = 1.0;
    } else {
      tmpvar_1746 = 0.0;
    };
    float tmpvar_1747;
    if (shua) {
      tmpvar_1747 = 1.0;
    } else {
      tmpvar_1747 = 0.0;
    };
    float tmpvar_1748;
    if (shua) {
      tmpvar_1748 = 1.0;
    } else {
      tmpvar_1748 = 0.0;
    };
    vec4 tmpvar_1749;
    tmpvar_1749.w = 1.0;
    tmpvar_1749.x = ((0.3 - (0.535 * exbff_8.x)) + (0.5 * tmpvar_1746));
    tmpvar_1749.y = ((0.7 - (1.875 * exbff_8.y)) - (0.3 * tmpvar_1747));
    tmpvar_1749.z = ((1.0 - (2.25 * exbff_8.z)) - (0.8 * tmpvar_1748));
    vec4 tmpvar_1750;
    tmpvar_1750 = (tmpvar_1749 + txeb_6);
    if ((lpower < 20.0)) {
      vec2 ttpos_1751;
      vec2 q_1752;
      float tmpvar_1753;
      tmpvar_1753 = (radius / 2.0);
      vec2 tmpvar_1754;
      tmpvar_1754 = (poss_1586 - vec2(tmpvar_1753));
      ttpos_1751.x = tmpvar_1754.x;
      vec2 tmpvar_1755;
      tmpvar_1755 = ((poss_1586 - (250.0 * zoom)) / radius);
      vec2 tmpvar_1756;
      tmpvar_1756 = ((lhitpos * zoom) / radius);
      float tmpvar_1757;
      tmpvar_1757 = (radius / 500.0);
      ttpos_1751.y = (tmpvar_1754.y - (20.0 * (tmpvar_1757 / zoom)));
      mat2 tmpvar_1758;
      float tmpvar_1759;
      tmpvar_1759 = cos(angle);
      tmpvar_1758[0].x = tmpvar_1759;
      float tmpvar_1760;
      tmpvar_1760 = sin(angle);
      tmpvar_1758[0].y = -(tmpvar_1760);
      tmpvar_1758[1].x = tmpvar_1760;
      tmpvar_1758[1].y = tmpvar_1759;
      ttpos_1751 = (ttpos_1751 * (tmpvar_1758 * 2.0));
      mat2 tmpvar_1761;
      tmpvar_1761[0].x = tmpvar_1759;
      tmpvar_1761[0].y = -(tmpvar_1760);
      tmpvar_1761[1].x = tmpvar_1760;
      tmpvar_1761[1].y = tmpvar_1759;
      q_1752 = (((poss_1586 - vec2(tmpvar_1753)) / (50.0 * tmpvar_1757)) * tmpvar_1761);
      q_1752.y = (q_1752.y - 2.75);
      q_1752.y = (q_1752.y / (tmpvar_1757 / zoom));
      q_1752.x = abs(q_1752.x);
      vec2 tmpvar_1762;
      tmpvar_1762 = (15.0 * q_1752);
      vec3 tmpvar_1763;
      tmpvar_1763.x = (0.1 * max (0.0, tmpvar_1762.y));
      tmpvar_1763.y = ((float(
        (ttpos_1751.y >= 0.0)
      ) * 0.05) * max (0.0, tmpvar_1762.x));
      tmpvar_1763.z = ((float(
        (ttpos_1751.y >= 0.0)
      ) * 0.5) * max (0.0, tmpvar_1762.x));
      vec2 x_1764;
      x_1764 = (q_1752 * (q_1752.x * 15.1));
      vec4 tmpvar_1765;
      tmpvar_1765.w = 1.0;
      tmpvar_1765.xyz = (tmpvar_1763 / abs((
        (((8.0 * tmpvar_1762.x) * sqrt(dot (q_1752, q_1752))) + cos(((
          -(time)
         * 15.0) + tmpvar_1762.y)))
       * 
        sqrt(dot (x_1764, x_1764))
      )));
      float tmpvar_1766;
      tmpvar_1766 = sqrt(dot (tmpvar_1756, tmpvar_1756));
      float tmpvar_1767;
      if (wwh) {
        tmpvar_1767 = 0.0;
      } else {
        tmpvar_1767 = 1.0;
      };
      float tmpvar_1768;
      tmpvar_1768 = sqrt(dot (tmpvar_1756, tmpvar_1756));
      float tmpvar_1769;
      if (wwh) {
        tmpvar_1769 = 0.0;
      } else {
        tmpvar_1769 = 1.0;
      };
      float tmpvar_1770;
      float tmpvar_1771;
      tmpvar_1771 = clamp ((sqrt(
        dot (tmpvar_1756, tmpvar_1756)
      ) / 5.0), 0.0, 1.0);
      tmpvar_1770 = (tmpvar_1771 * (tmpvar_1771 * (3.0 - 
        (2.0 * tmpvar_1771)
      )));
      float tmpvar_1772;
      if (wwh) {
        tmpvar_1772 = 0.0;
      } else {
        tmpvar_1772 = 1.0;
      };
      float edge0_1773;
      edge0_1773 = ((tmpvar_1766 + 0.05) + (0.2 * tmpvar_1767));
      float tmpvar_1774;
      tmpvar_1774 = clamp (((
        sqrt(dot (tmpvar_1755, tmpvar_1755))
       - edge0_1773) / (
        ((tmpvar_1768 + (0.15 * tmpvar_1769)) - ((2.55 * tmpvar_1770) * tmpvar_1772))
       - edge0_1773)), 0.0, 1.0);
      tmpvar_1587 = (((
        (tmpvar_1745 * tmpvar_1750)
       + tmpvar_1585) + (
        ((((tmpvar_1765 * 
          (tmpvar_1774 * (tmpvar_1774 * (3.0 - (2.0 * tmpvar_1774))))
        ) * ttpos_1751.y) / lpower) * (20.0 - lpower))
       / lpower)) + (0.3 * txeb_6));
    } else {
      tmpvar_1587 = (((tmpvar_1745 * tmpvar_1750) + tmpvar_1585) + (0.3 * txeb_6));
    };
  };
  buff_11 = tmpvar_1587;
  for(int i_4=0;i_4<50;i_4++) {
    if ((i_4 >= 50)) {
      break;
    };
    if ((i_4 >= bulletcounter)) {
      break;
    };
    if (bulletexpl[i_4]) {
      vec2 tmpvar_1775;
      tmpvar_1775.x = bulletposx[i_4];
      tmpvar_1775.y = bulletposy[i_4];
      vec2 pos_1776;
      float tshift_1777;
      tshift_1777 = bullettimer[i_4];
      float period_1778;
      period_1778 = bulletexplctrl[i_4];
      vec4 tmpvar_1779;
      pos_1776 = ((fragCoord_3 - (tmpvar_1775 * zoom)) - shippos);
      if ((((
        (pos_1776.x > 0.0)
       && 
        (pos_1776.x < (35.0 * zoom))
      ) && (pos_1776.y > 0.0)) && (pos_1776.y < (35.0 * zoom)))) {
        vec2 uv_1780;
        uv_1780 = ((pos_1776 / 17.5) / zoom);
        float tmpvar_1781;
        tmpvar_1781 = (tshift_1777 * 3.5);
        float tmpvar_1782;
        tmpvar_1782 = (tmpvar_1781 + 2.8);
        float tmpvar_1783;
        tmpvar_1783 = (4.6 + (tshift_1777 / 0.5));
        float tmpvar_1784;
        tmpvar_1784 = clamp (((period_1778 - 10.0) / 28.0), 0.0, 1.0);
        float tmpvar_1785;
        tmpvar_1785 = clamp (((period_1778 - 10.0) / 28.0), 0.0, 1.0);
        vec3 tmpvar_1786;
        tmpvar_1786.y = 1.0;
        tmpvar_1786.x = (4.0 - (4.0 * (tmpvar_1784 * 
          (tmpvar_1784 * (3.0 - (2.0 * tmpvar_1784)))
        )));
        tmpvar_1786.z = (1.0 + (4.0 * (tmpvar_1785 * 
          (tmpvar_1785 * (3.0 - (2.0 * tmpvar_1785)))
        )));
        vec2 tmpvar_1787;
        tmpvar_1787 = (uv_1780 - 1.0);
        float tmpvar_1788;
        tmpvar_1788 = sqrt(dot (tmpvar_1787, tmpvar_1787));
        float vec_y_1789;
        vec_y_1789 = (tmpvar_1787.x + cos(tmpvar_1783));
        float vec_x_1790;
        vec_x_1790 = (tmpvar_1787.y + sin(tmpvar_1783));
        float tmpvar_1791;
        float tmpvar_1792;
        tmpvar_1792 = (min (abs(
          (vec_y_1789 / vec_x_1790)
        ), 1.0) / max (abs(
          (vec_y_1789 / vec_x_1790)
        ), 1.0));
        float tmpvar_1793;
        tmpvar_1793 = (tmpvar_1792 * tmpvar_1792);
        tmpvar_1793 = (((
          ((((
            ((((-0.01213232 * tmpvar_1793) + 0.05368138) * tmpvar_1793) - 0.1173503)
           * tmpvar_1793) + 0.1938925) * tmpvar_1793) - 0.3326756)
         * tmpvar_1793) + 0.9999793) * tmpvar_1792);
        tmpvar_1793 = (tmpvar_1793 + (float(
          (abs((vec_y_1789 / vec_x_1790)) > 1.0)
        ) * (
          (tmpvar_1793 * -2.0)
         + 1.570796)));
        tmpvar_1791 = (tmpvar_1793 * sign((vec_y_1789 / vec_x_1790)));
        if ((abs(vec_x_1790) > (1e-08 * abs(vec_y_1789)))) {
          if ((vec_x_1790 < 0.0)) {
            if ((vec_y_1789 >= 0.0)) {
              tmpvar_1791 += 3.141593;
            } else {
              tmpvar_1791 = (tmpvar_1791 - 3.141593);
            };
          };
        } else {
          tmpvar_1791 = (sign(vec_y_1789) * 1.570796);
        };
        float edge0_1794;
        edge0_1794 = (0.5 + (0.4 * cos(tmpvar_1783)));
        float tmpvar_1795;
        tmpvar_1795 = clamp (((tmpvar_1788 - edge0_1794) / (1.0 - edge0_1794)), 0.0, 1.0);
        float edge0_1796;
        edge0_1796 = (0.5 + (0.4 * sin(tmpvar_1783)));
        float tmpvar_1797;
        tmpvar_1797 = clamp (((tmpvar_1788 - edge0_1796) / (1.0 - edge0_1796)), 0.0, 1.0);
        vec3 tmpvar_1798;
        tmpvar_1798 = (((tmpvar_1786 * 
          (1.0 - (tmpvar_1795 * (tmpvar_1795 * (3.0 - 
            (2.0 * tmpvar_1795)
          ))))
        ) * sin(
          ((tmpvar_1781 + tmpvar_1788) + (tmpvar_1791 * period_1778))
        )) / sqrt(dot (uv_1780, uv_1780)));
        uv_1780 = (-(zoom) + (pos_1776 / 17.5));
        float tmpvar_1799;
        tmpvar_1799 = clamp (((period_1778 - 36.9) / 0.5999985), 0.0, 1.0);
        uv_1780 = (uv_1780 / (zoom - (zoom * 
          (tmpvar_1799 * (tmpvar_1799 * (3.0 - (2.0 * tmpvar_1799))))
        )));
        vec4 tmpvar_1800;
        tmpvar_1800.w = 1.0;
        tmpvar_1800.xyz = (max (vec3(0.0, 0.0, 0.0), (
          mix (tmpvar_1798, (vec3(1.0, 1.0, 4.0) * (1.0 - (tmpvar_1797 * 
            (tmpvar_1797 * (3.0 - (2.0 * tmpvar_1797)))
          ))), sin(((tmpvar_1782 + tmpvar_1788) + (tmpvar_1791 * period_1778))))
         / 
          sqrt(dot (uv_1780, uv_1780))
        )) * abs((
          float((sqrt(dot (uv_1780, uv_1780)) >= 1.0))
         - 1.0)));
        float tmpvar_1801;
        tmpvar_1801 = clamp (((period_1778 - 38.0) / -2.0), 0.0, 1.0);
        tmpvar_1779 = (tmpvar_1800 * (tmpvar_1801 * (tmpvar_1801 * 
          (3.0 - (2.0 * tmpvar_1801))
        )));
      } else {
        vec4 tmpvar_1802;
        tmpvar_1802.w = 1.0;
        tmpvar_1802.xyz = vec3(0.0, 0.0, 0.0);
        tmpvar_1779 = tmpvar_1802;
      };
      buff_11 = (buff_11 + (tmpvar_1779 * (1.0 - 
        float((6.283159 >= bullettimer[i_4]))
      )));
      vec2 tmpvar_1803;
      tmpvar_1803.x = bulletposx[i_4];
      tmpvar_1803.y = bulletposy[i_4];
      float tshift_1804;
      tshift_1804 = bullettimer[i_4];
      vec4 tmpvar_1805;
      vec2 uv_1806;
      vec2 pos_1807;
      vec2 tmpvar_1808;
      tmpvar_1808 = ((fragCoord_3 - (tmpvar_1803 * zoom)) - shippos);
      pos_1807 = tmpvar_1808;
      uv_1806 = (((tmpvar_1808 / 
        (125.0 * zoom)
      ) * 2.0) - 0.3);
      uv_1806 = (uv_1806 * 0.5);
      float tmpvar_1809;
      tmpvar_1809 = float((sqrt(
        dot (uv_1806, uv_1806)
      ) >= 1.0));
      if (((tmpvar_1809 - 1.0) <= -1.0)) {
        vec4 ret_1810;
        vec2 uxx_1811;
        mat2 tmpvar_1812;
        tmpvar_1812[0].x = cos((iTime - tshift_1804));
        tmpvar_1812[0].y = -(sin((iTime - tshift_1804)));
        tmpvar_1812[1].x = sin((iTime - tshift_1804));
        tmpvar_1812[1].y = cos((iTime - tshift_1804));
        pos_1807 = (tmpvar_1812 * uv_1806);
        uxx_1811.y = (pos_1807.y * 2.0);
        uxx_1811.x = (pos_1807.x * 1.5);
        int i_1813;
        i_1813 = 0;
        for(int i=0;i<5;i++) {
          if ((i_1813 >= 5)) {
            break;
          };
          i_1813++;
        };
        int i_1814;
        i_1814 = 0;
        for(int i=0;i<5;i++) {
          if ((i_1814 >= 5)) {
            break;
          };
          i_1814++;
        };
        int i_1815;
        i_1815 = 0;
        for(int i=0;i<5;i++) {
          if ((i_1815 >= 5)) {
            break;
          };
          i_1815++;
        };
        int i_1816;
        i_1816 = 0;
        for(int i=0;i<5;i++) {
          if ((i_1816 >= 5)) {
            break;
          };
          i_1816++;
        };
        float tmpvar_1817;
        tmpvar_1817 = abs(pos_1807.y);
        vec2 p_1818;
        p_1818 = ((pos_1807 * 50.0) + 220.0);
        float tshift_1819;
        tshift_1819 = tshift_1804;
        int i_1820;
        float wc_1821;
        float w_1822;
        float a_1823;
        p_1818 = (p_1818 * 1.2);
        a_1823 = 0.0;
        w_1822 = 1.0;
        wc_1821 = 0.0;
        i_1820 = 0;
        for(int i=0;i<5;i++) {
          if ((i_1820 >= 5)) {
            break;
          };
          vec3 tmpvar_1824;
          tmpvar_1824.z = 1.0;
          tmpvar_1824.xy = p_1818;
          vec3 f_1825;
          vec3 tmpvar_1826;
          tmpvar_1826 = floor(tmpvar_1824);
          vec3 tmpvar_1827;
          tmpvar_1827 = fract(tmpvar_1824);
          f_1825 = ((tmpvar_1827 * tmpvar_1827) * (3.0 - (2.0 * tmpvar_1827)));
          float tmpvar_1828;
          tmpvar_1828 = ((tmpvar_1826.x + (tmpvar_1826.y * 971.0)) + (883.0 * tmpvar_1826.z));
          vec3 x_1829;
          x_1829 = (tmpvar_1824 + 0.5);
          vec3 f_1830;
          vec3 tmpvar_1831;
          tmpvar_1831 = floor(x_1829);
          vec3 tmpvar_1832;
          tmpvar_1832 = fract(x_1829);
          f_1830 = ((tmpvar_1832 * tmpvar_1832) * (3.0 - (2.0 * tmpvar_1832)));
          float tmpvar_1833;
          tmpvar_1833 = ((tmpvar_1831.x + (tmpvar_1831.y * 157.0)) + (113.0 * tmpvar_1831.z));
          a_1823 = (a_1823 + clamp ((
            (2.0 * abs((0.5 - (
              mix (mix (mix (fract(
                (sin(tmpvar_1828) * 758.5453)
              ), fract(
                (sin((tmpvar_1828 + 1.0)) * 758.5453)
              ), f_1825.x), mix (fract(
                (sin((tmpvar_1828 + 971.0)) * 758.5453)
              ), fract(
                (sin((972.0 + tmpvar_1828)) * 758.5453)
              ), f_1825.x), f_1825.y), mix (mix (fract(
                (sin((tmpvar_1828 + 883.0)) * 758.5453)
              ), fract(
                (sin((884.0 + tmpvar_1828)) * 758.5453)
              ), f_1825.x), mix (fract(
                (sin((tmpvar_1828 + 1854.0)) * 758.5453)
              ), fract(
                (sin((1855.0 + tmpvar_1828)) * 758.5453)
              ), f_1825.x), f_1825.y), f_1825.z)
             * 
              mix (mix (mix (fract(
                (sin(tmpvar_1833) * 758.5453)
              ), fract(
                (sin((tmpvar_1833 + 1.0)) * 758.5453)
              ), f_1830.x), mix (fract(
                (sin((tmpvar_1833 + 157.0)) * 758.5453)
              ), fract(
                (sin((158.0 + tmpvar_1833)) * 758.5453)
              ), f_1830.x), f_1830.y), mix (mix (fract(
                (sin((tmpvar_1833 + 113.0)) * 758.5453)
              ), fract(
                (sin((114.0 + tmpvar_1833)) * 758.5453)
              ), f_1830.x), mix (fract(
                (sin((tmpvar_1833 + 270.0)) * 758.5453)
              ), fract(
                (sin((271.0 + tmpvar_1833)) * 758.5453)
              ), f_1830.x), f_1830.y), f_1830.z)
            ))))
           * w_1822), 0.0, 1.0));
          wc_1821 = (wc_1821 + ((w_1822 * 
            (1.0 - sin((min (iTime, 3.110164) / 1.4)))
          ) + 0.00271));
          w_1822 = (w_1822 * 0.5);
          p_1818 = ((p_1818 * 3.0) / sin(min (tshift_1819, 3.110164)));
          i_1820++;
        };
        float tmpvar_1834;
        tmpvar_1834 = clamp (((
          (((1.0/((1.0 + 
            (20.0 * tmpvar_1817)
          ))) * (a_1823 / wc_1821)) * (1.0 - abs(pos_1807.x)))
         - 0.1) / 0.4), 0.0, 1.0);
        vec2 tmpvar_1835;
        tmpvar_1835.x = iTime;
        tmpvar_1835.y = -(tshift_1804);
        vec2 tmpvar_1836;
        tmpvar_1836.x = -(iTime);
        tmpvar_1836.y = tshift_1804;
        vec3 tmpvar_1837;
        tmpvar_1837.y = 0.8;
        tmpvar_1837.x = (0.9 + (1.5 * fract(
          (cos(dot (tmpvar_1835, vec2(21.9898, 78.233))) * 43758.55)
        )));
        tmpvar_1837.z = (0.8 + (2.0 * fract(
          (cos(dot (tmpvar_1836, vec2(21.9898, 78.233))) * 43758.55)
        )));
        vec3 tmpvar_1838;
        tmpvar_1838 = (vec3(-0.32, -0.21, -0.0) * (1.0 + (
          (tmpvar_1834 * (tmpvar_1834 * (3.0 - (2.0 * tmpvar_1834))))
         - 1.0)));
        float tmpvar_1839;
        tmpvar_1839 = abs(pos_1807.y);
        vec2 p_1840;
        p_1840 = (pos_1807 * 3.0);
        float tshift_1841;
        tshift_1841 = tshift_1804;
        int i_1842;
        float wc_1843;
        float w_1844;
        float a_1845;
        p_1840 = (p_1840 * 1.2);
        a_1845 = 0.0;
        w_1844 = 1.0;
        wc_1843 = 0.0;
        i_1842 = 0;
        for(int i=0;i<5;i++) {
          if ((i_1842 >= 5)) {
            break;
          };
          vec3 tmpvar_1846;
          tmpvar_1846.z = 1.0;
          tmpvar_1846.xy = p_1840;
          vec3 f_1847;
          vec3 tmpvar_1848;
          tmpvar_1848 = floor(tmpvar_1846);
          vec3 tmpvar_1849;
          tmpvar_1849 = fract(tmpvar_1846);
          f_1847 = ((tmpvar_1849 * tmpvar_1849) * (3.0 - (2.0 * tmpvar_1849)));
          float tmpvar_1850;
          tmpvar_1850 = ((tmpvar_1848.x + (tmpvar_1848.y * 971.0)) + (883.0 * tmpvar_1848.z));
          vec3 x_1851;
          x_1851 = (tmpvar_1846 + 0.5);
          vec3 f_1852;
          vec3 tmpvar_1853;
          tmpvar_1853 = floor(x_1851);
          vec3 tmpvar_1854;
          tmpvar_1854 = fract(x_1851);
          f_1852 = ((tmpvar_1854 * tmpvar_1854) * (3.0 - (2.0 * tmpvar_1854)));
          float tmpvar_1855;
          tmpvar_1855 = ((tmpvar_1853.x + (tmpvar_1853.y * 157.0)) + (113.0 * tmpvar_1853.z));
          a_1845 = (a_1845 + clamp ((
            (2.0 * abs((0.5 - (
              mix (mix (mix (fract(
                (sin(tmpvar_1850) * 758.5453)
              ), fract(
                (sin((tmpvar_1850 + 1.0)) * 758.5453)
              ), f_1847.x), mix (fract(
                (sin((tmpvar_1850 + 971.0)) * 758.5453)
              ), fract(
                (sin((972.0 + tmpvar_1850)) * 758.5453)
              ), f_1847.x), f_1847.y), mix (mix (fract(
                (sin((tmpvar_1850 + 883.0)) * 758.5453)
              ), fract(
                (sin((884.0 + tmpvar_1850)) * 758.5453)
              ), f_1847.x), mix (fract(
                (sin((tmpvar_1850 + 1854.0)) * 758.5453)
              ), fract(
                (sin((1855.0 + tmpvar_1850)) * 758.5453)
              ), f_1847.x), f_1847.y), f_1847.z)
             * 
              mix (mix (mix (fract(
                (sin(tmpvar_1855) * 758.5453)
              ), fract(
                (sin((tmpvar_1855 + 1.0)) * 758.5453)
              ), f_1852.x), mix (fract(
                (sin((tmpvar_1855 + 157.0)) * 758.5453)
              ), fract(
                (sin((158.0 + tmpvar_1855)) * 758.5453)
              ), f_1852.x), f_1852.y), mix (mix (fract(
                (sin((tmpvar_1855 + 113.0)) * 758.5453)
              ), fract(
                (sin((114.0 + tmpvar_1855)) * 758.5453)
              ), f_1852.x), mix (fract(
                (sin((tmpvar_1855 + 270.0)) * 758.5453)
              ), fract(
                (sin((271.0 + tmpvar_1855)) * 758.5453)
              ), f_1852.x), f_1852.y), f_1852.z)
            ))))
           * w_1844), 0.0, 1.0));
          wc_1843 = (wc_1843 + ((w_1844 * 
            (1.0 - sin((min (iTime, 3.110164) / 1.4)))
          ) + 0.00271));
          w_1844 = (w_1844 * 0.5);
          p_1840 = ((p_1840 * 3.0) / sin(min (tshift_1841, 3.110164)));
          i_1842++;
        };
        float tmpvar_1856;
        tmpvar_1856 = clamp (((
          sqrt(dot (uxx_1811, uxx_1811))
         - 1.6) / -0.95), 0.0, 1.0);
        vec4 tmpvar_1857;
        tmpvar_1857.w = 1.0;
        tmpvar_1857.xyz = (min (vec3(1.0, 1.0, 1.0), (
          ((tmpvar_1838 * abs(sin(
            (tshift_1804 / 2.0)
          ))) + (((
            (1.6 * tmpvar_1837)
           * 
            (1.0/((1.0 + (30.0 * tmpvar_1839))))
          ) * (a_1845 / wc_1843)) * (1.0 - abs(pos_1807.x))))
         * 
          abs(sin(min (tshift_1804, 3.110164)))
        )) * (tmpvar_1856 * (tmpvar_1856 * 
          (3.0 - (2.0 * tmpvar_1856))
        )));
        ret_1810.w = tmpvar_1857.w;
        float tmpvar_1858;
        tmpvar_1858 = clamp (((tshift_1804 - 3.267243) / -0.439821), 0.0, 1.0);
        ret_1810.y = (tmpvar_1857.y * (tmpvar_1858 * (tmpvar_1858 * 
          (3.0 - (2.0 * tmpvar_1858))
        )));
        float tmpvar_1859;
        tmpvar_1859 = clamp (((tshift_1804 - 3.14158) / -0.314158), 0.0, 1.0);
        ret_1810.x = (tmpvar_1857.x * (tmpvar_1859 * (tmpvar_1859 * 
          (3.0 - (2.0 * tmpvar_1859))
        )));
        float tmpvar_1860;
        tmpvar_1860 = clamp (((tshift_1804 - 3.330074) / -0.5026526), 0.0, 1.0);
        ret_1810.z = (tmpvar_1857.z * (3.0 * (tmpvar_1860 * 
          (tmpvar_1860 * (3.0 - (2.0 * tmpvar_1860)))
        )));
        tmpvar_1805 = ret_1810;
      } else {
        tmpvar_1805 = vec4(0.0, 0.0, 0.0, 0.0);
      };
      buff_11 = (buff_11 + (tmpvar_1805 * float(
        (6.283159 >= bullettimer[i_4])
      )));
    } else {
      vec2 tmpvar_1861;
      tmpvar_1861.x = bulletposx[i_4];
      tmpvar_1861.y = bulletposy[i_4];
      vec2 pos_1862;
      float tshift_1863;
      tshift_1863 = bullettimer[i_4];
      vec4 tmpvar_1864;
      pos_1862 = ((fragCoord_3 - (tmpvar_1861 * zoom)) - shippos);
      if ((((
        (pos_1862.x > 0.0)
       && 
        (pos_1862.x < (35.0 * zoom))
      ) && (pos_1862.y > 0.0)) && (pos_1862.y < (35.0 * zoom)))) {
        vec2 uv_1865;
        uv_1865 = ((pos_1862 / 17.5) / zoom);
        float tmpvar_1866;
        tmpvar_1866 = (tshift_1863 * 3.5);
        float tmpvar_1867;
        tmpvar_1867 = (tmpvar_1866 + 2.8);
        float tmpvar_1868;
        tmpvar_1868 = (4.6 + (tshift_1863 / 0.5));
        float tmpvar_1869;
        tmpvar_1869 = clamp (-0.3214286, 0.0, 1.0);
        vec3 tmpvar_1870;
        tmpvar_1870.y = 1.0;
        tmpvar_1870.x = (4.0 - (4.0 * (tmpvar_1869 * 
          (tmpvar_1869 * (3.0 - (2.0 * tmpvar_1869)))
        )));
        tmpvar_1870.z = (1.0 + (4.0 * (tmpvar_1869 * 
          (tmpvar_1869 * (3.0 - (2.0 * tmpvar_1869)))
        )));
        vec2 tmpvar_1871;
        tmpvar_1871 = (uv_1865 - 1.0);
        float tmpvar_1872;
        tmpvar_1872 = sqrt(dot (tmpvar_1871, tmpvar_1871));
        float vec_y_1873;
        vec_y_1873 = (tmpvar_1871.x + cos(tmpvar_1868));
        float vec_x_1874;
        vec_x_1874 = (tmpvar_1871.y + sin(tmpvar_1868));
        float tmpvar_1875;
        float tmpvar_1876;
        tmpvar_1876 = (min (abs(
          (vec_y_1873 / vec_x_1874)
        ), 1.0) / max (abs(
          (vec_y_1873 / vec_x_1874)
        ), 1.0));
        float tmpvar_1877;
        tmpvar_1877 = (tmpvar_1876 * tmpvar_1876);
        tmpvar_1877 = (((
          ((((
            ((((-0.01213232 * tmpvar_1877) + 0.05368138) * tmpvar_1877) - 0.1173503)
           * tmpvar_1877) + 0.1938925) * tmpvar_1877) - 0.3326756)
         * tmpvar_1877) + 0.9999793) * tmpvar_1876);
        tmpvar_1877 = (tmpvar_1877 + (float(
          (abs((vec_y_1873 / vec_x_1874)) > 1.0)
        ) * (
          (tmpvar_1877 * -2.0)
         + 1.570796)));
        tmpvar_1875 = (tmpvar_1877 * sign((vec_y_1873 / vec_x_1874)));
        if ((abs(vec_x_1874) > (1e-08 * abs(vec_y_1873)))) {
          if ((vec_x_1874 < 0.0)) {
            if ((vec_y_1873 >= 0.0)) {
              tmpvar_1875 += 3.141593;
            } else {
              tmpvar_1875 = (tmpvar_1875 - 3.141593);
            };
          };
        } else {
          tmpvar_1875 = (sign(vec_y_1873) * 1.570796);
        };
        float edge0_1878;
        edge0_1878 = (0.5 + (0.4 * cos(tmpvar_1868)));
        float tmpvar_1879;
        tmpvar_1879 = clamp (((tmpvar_1872 - edge0_1878) / (1.0 - edge0_1878)), 0.0, 1.0);
        float edge0_1880;
        edge0_1880 = (0.5 + (0.4 * sin(tmpvar_1868)));
        float tmpvar_1881;
        tmpvar_1881 = clamp (((tmpvar_1872 - edge0_1880) / (1.0 - edge0_1880)), 0.0, 1.0);
        vec3 tmpvar_1882;
        tmpvar_1882 = (((tmpvar_1870 * 
          (1.0 - (tmpvar_1879 * (tmpvar_1879 * (3.0 - 
            (2.0 * tmpvar_1879)
          ))))
        ) * sin(
          ((tmpvar_1866 + tmpvar_1872) + tmpvar_1875)
        )) / sqrt(dot (uv_1865, uv_1865)));
        uv_1865 = (-(zoom) + (pos_1862 / 17.5));
        float tmpvar_1883;
        tmpvar_1883 = clamp (-59.83349, 0.0, 1.0);
        uv_1865 = (uv_1865 / (zoom - (zoom * 
          (tmpvar_1883 * (tmpvar_1883 * (3.0 - (2.0 * tmpvar_1883))))
        )));
        vec4 tmpvar_1884;
        tmpvar_1884.w = 1.0;
        tmpvar_1884.xyz = (max (vec3(0.0, 0.0, 0.0), (
          mix (tmpvar_1882, (vec3(1.0, 1.0, 4.0) * (1.0 - (tmpvar_1881 * 
            (tmpvar_1881 * (3.0 - (2.0 * tmpvar_1881)))
          ))), sin(((tmpvar_1867 + tmpvar_1872) + tmpvar_1875)))
         / 
          sqrt(dot (uv_1865, uv_1865))
        )) * abs((
          float((sqrt(dot (uv_1865, uv_1865)) >= 1.0))
         - 1.0)));
        float tmpvar_1885;
        tmpvar_1885 = clamp (18.5, 0.0, 1.0);
        tmpvar_1864 = (tmpvar_1884 * (tmpvar_1885 * (tmpvar_1885 * 
          (3.0 - (2.0 * tmpvar_1885))
        )));
      } else {
        vec4 tmpvar_1886;
        tmpvar_1886.w = 1.0;
        tmpvar_1886.xyz = vec3(0.0, 0.0, 0.0);
        tmpvar_1864 = tmpvar_1886;
      };
      buff_11 = (buff_11 + tmpvar_1864);
    };
  };
  color_1.xyz = buff_11.xyz;
  color_1.w = 1.0;
  gl_FragColor = color_1;
}

